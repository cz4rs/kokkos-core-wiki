Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/num_threads", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "requirements", "testing-and-issue-tracking", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/VirtualFunctions", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.md", "API/algorithms/std-algorithms/all/StdAllOf.md", "API/algorithms/std-algorithms/all/StdAnyOf.md", "API/algorithms/std-algorithms/all/StdCopy.md", "API/algorithms/std-algorithms/all/StdCopyBackward.md", "API/algorithms/std-algorithms/all/StdCopyIf.md", "API/algorithms/std-algorithms/all/StdCopy_n.md", "API/algorithms/std-algorithms/all/StdCount.md", "API/algorithms/std-algorithms/all/StdCountIf.md", "API/algorithms/std-algorithms/all/StdEqual.md", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.md", "API/algorithms/std-algorithms/all/StdFindEnd.md", "API/algorithms/std-algorithms/all/StdFindFirstOf.md", "API/algorithms/std-algorithms/all/StdFindIf.md", "API/algorithms/std-algorithms/all/StdFindIfNot.md", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.md", "API/algorithms/std-algorithms/all/StdGenerate_n.md", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.md", "API/algorithms/std-algorithms/all/StdIsSorted.md", "API/algorithms/std-algorithms/all/StdIsSortedUntil.md", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.md", "API/algorithms/std-algorithms/all/StdMinElement.md", "API/algorithms/std-algorithms/all/StdMinMaxElement.md", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.md", "API/algorithms/std-algorithms/all/StdMoveBackward.md", "API/algorithms/std-algorithms/all/StdNoneOf.md", "API/algorithms/std-algorithms/all/StdPartitionCopy.md", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.md", "API/algorithms/std-algorithms/all/StdRemoveCopy.md", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.md", "API/algorithms/std-algorithms/all/StdRemoveIf.md", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.md", "API/algorithms/std-algorithms/all/StdReverseCopy.md", "API/algorithms/std-algorithms/all/StdRotate.md", "API/algorithms/std-algorithms/all/StdRotateCopy.md", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.md", "API/algorithms/std-algorithms/all/StdShiftRight.md", "API/algorithms/std-algorithms/all/StdSwapRanges.md", "API/algorithms/std-algorithms/all/StdTransform.md", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.md", "API/algorithms/std-algorithms/all/StdUniqueCopy.md", "API/alphabetical.md", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.md", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.md", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.md", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.md", "API/core/policies/ThreadVectorRange.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/num_threads.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.md", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.md", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.md", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.md", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "requirements.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.md", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/VirtualFunctions.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code>", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecation for Kokkos-3.x", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Requirements", "Testing and Issue Tracking", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Virtual Functions", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 131, 132, 134, 135, 177, 198], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 89, 121, 127, 129, 131, 132, 134, 136, 137, 151, 159, 163, 164, 166, 167, 177, 181, 182, 184, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 215, 216, 221, 222, 225, 227], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 94, 134, 135, 148, 150, 181, 182, 184, 185, 188, 191, 194, 196, 197, 198, 199, 200, 201, 202, 203, 207, 212, 215, 217], "sort": [0, 3, 36, 37, 82, 205], "nest": [0, 77, 87, 92, 94, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 171, 172, 185, 188, 195, 196, 197, 198, 221, 226, 228, 230], "polici": [0, 72, 83, 87, 140, 141, 142, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 186, 190, 192, 193, 197, 205, 221, 224, 226], "team": [0, 72, 85, 87, 94, 140, 141, 142, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 188, 193, 195, 196, 197, 204, 214, 217, 227, 228], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 92, 94, 129, 131, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 166, 184, 186, 187, 188, 192, 194, 197, 198, 201, 202, 206, 207, 217, 224, 227, 230], "level": [0, 87, 88, 94, 149, 151, 152, 185, 186, 191, 194, 197, 201, 202, 203, 206, 217], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 89, 91, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 129, 131, 132, 138, 139, 143, 144, 145, 146, 148, 154, 156, 158, 159, 160, 163, 168, 169, 170, 176, 177, 178, 181, 182, 183, 199, 200, 201, 205, 225, 228], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 186, 209, 225, 229], "file": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 192, 207, 216, 221, 229], "kokkos_cor": [1, 2, 76, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 185, 190, 192, 205, 208, 223, 228, 229], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 190, 192, 199, 205, 208, 220, 221, 223, 225, 228, 229], "kokkos_complex": [1, 205], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 135, 136, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 168, 169, 170, 174, 175, 176, 177, 178, 179, 185, 186, 188, 189, 190, 191, 193, 197, 199, 201, 220, 221, 223], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 91, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 118, 119, 122, 124, 126, 127, 128, 129, 131, 132, 134, 135, 139, 144, 145, 146, 151, 152, 154, 156, 158, 159, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 222, 225, 226, 228], "struct": [1, 2, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 48, 51, 52, 56, 67, 69, 72, 81, 84, 94, 118, 119, 121, 124, 129, 130, 132, 134, 135, 140, 141, 142, 144, 145, 153, 155, 157, 160, 168, 171, 172, 185, 188, 189, 190, 191, 193, 197, 201, 205, 220, 225, 227, 228], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 51, 52, 56, 75, 77, 79, 81, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 163, 171, 172, 173, 189, 190, 191, 193, 197, 201, 222], "static": [1, 74, 75, 76, 77, 85, 87, 148, 150, 152, 171, 172, 173, 177, 181, 182, 189, 191, 194, 201, 202, 205, 230], "gen_func_typ": 1, "max": [1, 72, 74, 88, 102, 105, 107, 113, 116, 117, 118, 119, 121, 122, 124, 139, 145, 184, 188, 191, 197, 199, 205, 207, 229], "return": [1, 2, 13, 14, 19, 20, 29, 38, 42, 45, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 94, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 139, 144, 150, 151, 152, 154, 156, 158, 159, 160, 163, 164, 166, 167, 168, 169, 170, 176, 177, 181, 182, 183, 184, 185, 189, 190, 191, 193, 196, 199, 201, 205, 219, 220, 221, 222, 223, 224, 227], "type_valu": 1, "draw": [1, 72], "gen": [1, 181, 182], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 134, 135, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 188, 189, 190, 191, 193, 195, 197, 199, 200, 205, 220, 221, 222, 224, 226, 228], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 94, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 176, 191, 196, 197, 200, 201, 216, 217, 221], "start": [1, 18, 24, 33, 50, 51, 60, 66, 69, 71, 72, 74, 82, 94, 129, 135, 136, 144, 145, 146, 148, 149, 150, 152, 167, 181, 185, 188, 191, 192, 193, 197, 201, 202, 217, 220, 222, 224, 227], "end": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 133, 134, 136, 145, 146, 148, 149, 150, 152, 154, 156, 158, 186, 192, 201, 220, 221, 227, 229], "function": [1, 2, 4, 30, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 126, 127, 128, 133, 134, 136, 137, 139, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 167, 168, 169, 173, 185, 186, 189, 190, 191, 192, 193, 194, 198, 199, 200, 207, 211, 218, 219, 220, 221, 222, 224, 226], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 169, 177, 181, 182, 187, 189, 191, 197, 199, 200, 209, 220, 225], "all": [1, 2, 13, 25, 30, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 75, 76, 77, 78, 86, 87, 92, 94, 96, 121, 132, 133, 135, 136, 137, 143, 144, 147, 151, 152, 168, 170, 173, 176, 177, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 212, 215, 216, 217, 221, 223, 227, 228], "list": [1, 2, 72, 82, 97, 138, 139, 148, 176, 178, 179, 184, 192, 194, 196, 201, 202, 209, 212, 214, 215, 216, 217, 221, 222, 227], "here": [1, 39, 40, 41, 72, 84, 87, 129, 133, 134, 135, 147, 152, 184, 191, 192, 195, 196, 197, 199, 201, 212, 217, 222, 224, 228], "ar": [1, 2, 4, 19, 21, 36, 37, 38, 39, 40, 41, 42, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 94, 97, 107, 116, 117, 121, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 153, 155, 157, 164, 165, 166, 169, 170, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 209, 212, 214, 215, 216, 217, 219, 220, 222, 224, 226, 227, 228, 229], "part": [1, 72, 83, 87, 97, 121, 129, 135, 151, 163, 165, 184, 185, 186, 193, 194, 198, 199, 201, 215, 217, 226], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 95, 96, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 157, 159, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 204, 207, 208, 209, 211, 213, 214, 218, 219, 222, 223, 224, 225, 226, 228, 230], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 136, 137, 138, 139, 159, 162, 165, 181, 182, 183, 185, 189, 190, 193, 200, 201, 208], "char": [1, 2, 76, 86, 87, 121, 129, 132, 133, 134, 135, 144, 145, 146, 161, 170, 173, 177, 181, 182, 183, 189, 190, 192, 201, 215, 225, 228], "short": [1, 197], "127": 1, "0xff": 1, "256": [1, 199, 227], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 121, 129, 130, 131, 132, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 166, 168, 170, 173, 176, 177, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 195, 197, 199, 201, 205, 219, 221, 222, 223, 224, 225, 226, 227, 228], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 121, 138, 186, 194, 196, 197, 201], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 137, 138, 139, 160, 171, 172, 173, 196, 197, 199, 222, 225], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 104, 110, 120, 121, 130, 131, 132, 134, 136, 144, 145, 146, 149, 151, 152, 154, 156, 158, 159, 160, 163, 164, 166, 170, 173, 176, 177, 181, 182, 183, 187, 189, 190, 199, 202, 207, 209, 211, 212, 215, 217, 219, 220, 221, 222, 227, 230], "0f": [1, 160], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 94, 129, 132, 133, 134, 138, 143, 145, 153, 154, 155, 156, 157, 158, 162, 163, 167, 168, 176, 177, 181, 182, 183, 184, 188, 191, 193, 197, 199, 200, 201, 219, 220, 221, 222, 223, 224], "0": [1, 2, 11, 18, 24, 33, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 94, 108, 109, 111, 121, 123, 129, 131, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 170, 171, 172, 173, 176, 177, 181, 182, 183, 184, 186, 188, 189, 190, 191, 193, 197, 198, 199, 201, 202, 207, 209, 212, 215, 219, 220, 221, 222, 223, 224, 226, 227, 228], "complex": [1, 72, 82, 87, 88, 96, 121, 186, 187, 188, 191, 196, 199, 206, 212], "where": [1, 2, 4, 11, 12, 17, 22, 28, 30, 32, 35, 36, 37, 40, 42, 46, 51, 52, 55, 56, 67, 69, 76, 77, 81, 87, 94, 99, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 144, 153, 157, 159, 170, 177, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 212, 217, 219, 220, 221, 224, 225, 226, 227, 228], "maximum": [1, 3, 72, 77, 78, 82, 102, 104, 105, 107, 112, 113, 116, 117, 118, 119, 129, 152, 188, 191], "valu": [1, 2, 4, 11, 17, 19, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 40, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 129, 131, 134, 135, 136, 139, 144, 145, 146, 150, 151, 152, 154, 156, 158, 160, 169, 170, 176, 177, 183, 184, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 207, 222, 228], "xorshift": 1, "given": [1, 4, 66, 75, 78, 79, 81, 84, 85, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 128, 129, 136, 148, 150, 151, 152, 165, 168, 170, 173, 186, 191, 192, 193, 197, 198, 199, 200, 201, 202, 216, 222, 226, 227], "follow": [1, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 91, 92, 97, 121, 129, 135, 138, 151, 170, 177, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 197, 199, 200, 201, 202, 205, 207, 208, 209, 212, 215, 217, 219], "enum": [1, 76, 129, 135, 201], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 121, 130, 134, 146, 151, 153, 155, 157, 159, 160, 170, 173, 174, 175, 176, 177, 181, 187, 188, 190, 199, 207, 209, 211, 212, 215, 217, 227, 228, 230], "int64_t": [1, 78, 85, 146, 148, 150, 181, 182], "kokkos_random": [1, 2, 205], "provid": [1, 72, 75, 76, 77, 78, 80, 84, 87, 89, 91, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 132, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 150, 151, 152, 160, 169, 170, 171, 172, 173, 177, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 206, 209, 214, 215, 217, 220, 221, 225, 227, 228], "structur": [1, 4, 72, 76, 94, 97, 131, 177, 192, 196, 198, 200, 201, 218, 219, 221, 222, 226, 227, 230], "necessari": [1, 75, 76, 87, 91, 94, 144, 177, 186, 187, 191, 193, 201, 202, 217, 219, 222, 228], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 135, 150, 151, 177, 181, 183, 185, 188, 191, 194, 196, 198, 200, 201, 212, 215, 217, 220], "base": [1, 21, 36, 40, 76, 77, 81, 82, 84, 87, 94, 131, 181, 182, 185, 186, 191, 194, 195, 197, 199, 200, 201, 207, 214, 217, 221, 222, 225, 226, 227, 228, 230], "vigna": 1, "sebastiano": 1, "2014": [1, 196, 203], "an": [1, 2, 4, 11, 18, 22, 24, 25, 28, 29, 33, 34, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 92, 94, 107, 115, 121, 123, 127, 129, 133, 134, 135, 136, 138, 143, 144, 145, 146, 148, 150, 151, 152, 155, 159, 160, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 204, 206, 208, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 93, 96, 127, 128, 136, 137, 138, 139, 159, 180, 185, 191, 192, 199, 205, 207, 212, 217, 219], "explor": [1, 87, 194], "marsaglia": 1, "s": [1, 75, 77, 79, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 129, 131, 145, 151, 160, 162, 168, 170, 176, 177, 181, 186, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 209, 217, 222, 224, 225, 226, 228], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 136, 139, 144, 145, 147, 150, 151, 152, 159, 164, 166, 168, 177, 186, 188, 190, 191, 192, 195, 196, 197, 200, 201, 202, 204, 207, 208, 212, 217, 228], "http": [1, 138, 203, 206, 215], "arxiv": 1, "org": [1, 138, 186, 203], "ab": [1, 138, 181], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 38, 39, 40, 41, 42, 45, 48, 61, 62, 63, 64, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 91, 94, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 144, 145, 146, 147, 148, 151, 152, 159, 163, 169, 174, 175, 176, 177, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 207, 208, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 229], "themselv": [1, 94, 196, 197, 198], "have": [1, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 82, 87, 88, 91, 94, 121, 129, 131, 132, 139, 143, 144, 151, 153, 154, 155, 156, 169, 173, 174, 175, 177, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 212, 215, 217, 219, 222, 225, 226, 227, 228], "two": [1, 2, 11, 12, 22, 34, 36, 39, 40, 41, 42, 46, 48, 69, 75, 77, 78, 81, 87, 94, 121, 129, 131, 134, 135, 136, 150, 159, 170, 184, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 214, 216, 217, 219, 220, 221, 222, 228, 229], "compon": [1, 163, 173, 196, 213], "state": [1, 72, 75, 81, 87, 133, 191, 197, 199, 201], "pool": [1, 72, 191, 201], "actual": [1, 77, 129, 135, 147, 151, 152, 177, 184, 191, 193, 196, 197, 198, 201, 202, 207, 215, 217], "A": [1, 2, 22, 34, 41, 46, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 132, 140, 141, 142, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 162, 168, 169, 170, 171, 172, 173, 176, 177, 184, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 209, 216, 217, 220, 224, 226, 227, 228], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 88, 97, 127, 128, 177, 186, 196, 202, 206, 214, 222, 230], "so": [1, 2, 82, 87, 91, 94, 129, 184, 185, 186, 191, 192, 193, 195, 196, 197, 199, 200, 201, 204, 212, 214, 215, 217, 220, 224, 228], "each": [1, 2, 4, 11, 23, 30, 31, 32, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 94, 138, 144, 145, 152, 153, 155, 157, 159, 160, 171, 172, 173, 177, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 215, 217, 219, 221, 222, 225, 227, 228], "activ": [1, 23, 24, 53, 56, 88, 186, 191, 197, 202, 207, 217], "abl": [1, 76, 94, 129, 135, 177, 178, 184, 191, 194, 196, 199, 201, 205, 222], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 132, 136, 151, 159, 160, 174, 177, 184, 185, 186, 188, 191, 192, 193, 194, 196, 197, 200, 201, 202, 214, 216, 217, 219, 226], "own": [1, 75, 159, 184, 200, 201, 202, 215, 222], "thi": [1, 2, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 75, 76, 77, 79, 81, 82, 87, 91, 94, 121, 129, 132, 133, 134, 135, 138, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 206, 207, 208, 209, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 94, 129, 131, 134, 135, 145, 147, 151, 152, 169, 171, 172, 173, 177, 178, 184, 185, 186, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 223, 224, 226, 228], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 159, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 214, 217, 220, 222, 223, 224, 225, 226, 228], "independ": [1, 72, 99, 135, 152, 197, 201, 217, 230], "between": [1, 11, 37, 54, 65, 69, 72, 76, 81, 82, 92, 97, 151, 159, 169, 170, 177, 185, 186, 191, 194, 196, 199, 201, 208, 215, 221, 222, 223, 224], "note": [1, 37, 76, 77, 78, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 143, 144, 150, 151, 152, 159, 170, 177, 184, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 217, 220, 224, 227, 228], "contrast": [1, 136, 149, 154, 156, 158, 191, 201], "curand": 1, "none": [1, 4, 23, 25, 32, 53, 56, 57, 126, 140, 141, 142, 182, 186, 194, 196, 217, 220, 228], "collect": [1, 151, 191, 194, 197, 198, 200, 217, 222, 225], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 34, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 113, 115, 117, 118, 121, 124, 126, 127, 128, 129, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 158, 159, 169, 170, 173, 174, 175, 177, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 212, 217, 221, 222, 224, 226], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 87, 88, 92, 121, 126, 127, 128, 129, 131, 133, 135, 137, 139, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 169, 170, 174, 175, 177, 181, 182, 185, 186, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 212, 215, 217, 223, 228], "can": [1, 2, 4, 11, 21, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 75, 76, 77, 78, 81, 84, 85, 87, 88, 94, 121, 129, 130, 131, 134, 135, 139, 144, 145, 148, 149, 150, 151, 152, 157, 158, 173, 174, 175, 177, 178, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 206, 214, 215, 217, 219, 221, 222, 223, 224, 226, 228], "call": [1, 2, 11, 17, 21, 22, 28, 30, 35, 36, 40, 42, 46, 48, 51, 52, 55, 56, 67, 69, 74, 75, 77, 79, 85, 86, 87, 90, 94, 104, 121, 127, 128, 129, 131, 132, 133, 134, 138, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 167, 168, 169, 170, 174, 175, 177, 181, 182, 183, 184, 186, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 217, 220, 222, 224, 228], "insid": [1, 2, 81, 85, 87, 94, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 165, 185, 186, 191, 193, 196, 197, 201, 226, 227, 228, 229], "condit": [1, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 76, 177, 184, 191, 193, 196, 197, 209, 216, 224], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 87, 88, 92, 129, 131, 135, 138, 160, 164, 166, 169, 170, 177, 186, 192, 193, 194, 195, 197, 201, 202, 217, 218, 222, 223, 225], "public": [1, 75, 76, 77, 79, 81, 82, 129, 135, 145, 149, 151, 152, 154, 156, 158, 163, 165, 173, 183, 185, 190, 195, 197, 204, 222, 226, 228], "typedef": [1, 75, 76, 77, 79, 81, 82, 94, 149, 150, 151, 152, 154, 156, 158, 163, 167, 171, 172, 173, 185, 188, 189, 190, 191, 193, 197, 201, 220, 224], "device_typ": [1, 75, 76, 77, 81, 87, 129, 135, 169, 177, 201], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 94, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 135, 137, 138, 143, 144, 145, 146, 148, 150, 151, 159, 161, 163, 167, 170, 174, 175, 177, 181, 183, 184, 185, 190, 191, 193, 195, 197, 199, 201, 205, 208, 220, 222, 223, 224, 226, 227, 228], "init": [1, 22, 34, 67, 72, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 190, 222], "num_stat": 1, "get_stat": 1, "free_stat": 1, "intial": 1, "us": [1, 2, 4, 11, 15, 16, 18, 21, 22, 23, 24, 25, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 168, 169, 174, 175, 176, 177, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 217, 219, 222, 224, 225, 226, 228, 229], "establish": [1, 217, 221], "pool_siz": 1, "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 93, 148, 150, 186, 192, 194, 197, 199, 201, 207, 212, 215, 217], "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 130, 131, 132, 133, 144, 145, 146, 160, 163, 164, 166, 170, 173, 177, 178, 181, 182, 183, 186, 187, 189, 190, 191, 193, 195, 196, 197, 211, 215, 217, 223, 224, 228], "make": [1, 75, 76, 87, 94, 136, 151, 177, 184, 185, 186, 188, 191, 195, 196, 197, 199, 202, 215, 220, 222, 223, 226, 228], "process": [1, 89, 135, 186, 192, 198, 199, 200, 202, 206, 213, 217], "platform": [1, 83, 181, 182, 206, 214, 216, 225], "determinist": [1, 48, 69, 198], "request": [1, 75, 77, 129, 140, 141, 142, 145, 151, 152, 191, 192, 196, 198, 204, 207, 214, 215, 217], "lock": [1, 193, 196, 198, 199, 201], "guarante": [1, 75, 76, 79, 92, 94, 129, 135, 144, 145, 146, 165, 177, 185, 186, 193, 196, 197, 198, 199, 223, 227], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 94, 99, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 134, 135, 138, 144, 145, 146, 147, 169, 177, 181, 182, 184, 186, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 217, 219, 220, 226, 227, 228], "privat": [1, 79, 87, 151, 163, 185, 187, 190, 191, 197, 222], "get": [1, 75, 87, 94, 97, 133, 151, 152, 173, 184, 191, 192, 193, 195, 196, 199, 200, 202, 204, 215, 225, 227, 228], "cuda": [1, 72, 75, 85, 87, 88, 93, 135, 148, 150, 152, 159, 170, 191, 192, 194, 197, 198, 199, 201, 206, 207, 212, 215, 217, 223, 224], "involv": [1, 87, 147, 221], "atom": [1, 72, 76, 81, 83, 99, 100, 101, 102, 103, 104, 105, 106, 177, 191, 193, 196, 198, 211, 227, 230], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 134, 136, 170, 177, 183, 184, 186, 191, 192, 196, 197, 198, 199, 201, 205, 207, 215, 224, 226], "upon": [1, 84, 87, 129, 143, 185, 194], "complet": [1, 77, 94, 129, 143, 186, 187, 191, 196, 201, 202, 217, 224, 227], "unlock": 1, "updat": [1, 72, 75, 82, 99, 100, 101, 102, 103, 104, 105, 106, 184, 186, 191, 197, 201, 212, 215, 217, 222, 224, 227], "statu": 1, "onc": [1, 72, 94, 133, 134, 191, 192, 198, 201, 202, 207, 222, 224], "again": [1, 87, 186, 193, 201, 202, 207, 217], "becom": [1, 59, 60, 79, 94, 135, 196, 217, 221], "avail": [1, 74, 77, 81, 82, 87, 88, 97, 129, 131, 135, 136, 137, 138, 139, 152, 181, 182, 186, 191, 194, 196, 197, 199, 201, 202, 217, 219, 221, 222], "within": [1, 2, 4, 79, 82, 92, 129, 134, 144, 145, 146, 148, 151, 186, 191, 196, 198, 201, 220, 221, 222], "select": [1, 72, 74, 91, 131, 162, 176, 183, 194, 196, 201, 212, 217, 227], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 91, 92, 94, 97, 118, 119, 121, 124, 129, 130, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 160, 163, 168, 169, 170, 173, 177, 178, 179, 181, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 209, 212, 215, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228], "next": [1, 215, 217, 224, 227], "step": [1, 4, 191, 193, 194, 199, 201, 215, 217, 222], "develop": [1, 91, 144, 191, 194, 196, 198, 201, 204, 206, 212, 214, 215, 216, 217], "functor": [1, 2, 11, 21, 22, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 48, 67, 69, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 181, 182, 191, 193, 196, 201, 221, 222, 224, 226], "desir": [1, 48, 67, 69, 77, 146, 159, 169, 186, 197, 201, 215, 217], "type": [1, 11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 92, 94, 95, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 135, 136, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 168, 169, 170, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 206, 211, 215, 217, 220, 221, 222, 225, 228], "devicetyp": [1, 129, 135, 225], "respect": [1, 76, 121, 138, 169, 170, 174, 175, 177, 188, 191, 196, 201], "x": [1, 72, 137, 138, 173, 174, 175, 181, 183, 188, 193, 197, 199, 201, 206, 220, 224], "idx": [1, 220], "just": [1, 2, 75, 87, 88, 94, 129, 135, 147, 170, 173, 184, 192, 197, 199, 201, 202, 204, 207, 215, 219, 222], "give": [1, 88, 94, 185, 192, 193, 197, 198, 199, 201, 215], "argument": [1, 11, 17, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 75, 76, 77, 79, 92, 94, 97, 130, 131, 132, 134, 138, 143, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 168, 169, 170, 176, 177, 178, 181, 182, 183, 185, 190, 191, 197, 200, 201, 205, 221, 223], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 181, 182, 205], "urand": 1, "For": [1, 2, 59, 75, 76, 94, 121, 129, 135, 136, 139, 150, 159, 168, 170, 176, 177, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 217, 221, 222, 223, 228], "32": [1, 2, 191, 193, 201, 217], "bit": [1, 72, 74, 87, 89, 177, 182, 195, 197, 199, 200, 201, 228], "unsign": [1, 74, 75, 76, 77, 80, 102, 105, 136, 153, 155, 157, 177, 200, 201, 223], "integ": [1, 59, 60, 75, 76, 81, 85, 94, 136, 138, 148, 150, 176, 177, 191, 197, 199, 201, 220], "three": [1, 75, 87, 138, 143, 184, 185, 186, 191, 194, 196, 197, 199, 201, 202, 216, 221], "option": [1, 72, 75, 76, 85, 94, 129, 131, 144, 145, 146, 148, 177, 185, 186, 188, 191, 192, 193, 194, 197, 201, 202, 215, 217, 221, 223, 225, 226], "shown": [1, 55, 87, 121, 191, 196, 221], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 92, 94, 127, 129, 134, 151, 159, 160, 171, 176, 177, 181, 182, 183, 186, 188, 191, 192, 193, 195, 196, 197, 201, 204, 205, 220, 221, 224, 228], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 81, 84, 85, 88, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 130, 131, 135, 140, 141, 142, 145, 148, 150, 151, 152, 160, 163, 167, 170, 171, 172, 173, 174, 175, 177, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 197, 202, 207, 217, 221, 228], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 94, 129, 148, 149, 151, 153, 154, 155, 156, 157, 158, 181, 182, 184, 188, 191, 192, 197, 199, 200, 201, 202, 219, 221, 226], "possibl": [1, 11, 17, 22, 28, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 87, 94, 132, 145, 152, 177, 185, 192, 193, 197, 198, 199, 200, 201, 209, 212, 222], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 94, 97, 129, 130, 131, 143, 160, 163, 169, 170, 184, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 206, 209, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230], "defin": [1, 42, 72, 76, 78, 83, 87, 88, 92, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 150, 151, 154, 156, 158, 161, 162, 164, 165, 166, 169, 177, 179, 181, 182, 186, 189, 190, 191, 193, 196, 197, 201, 205, 216, 217, 219, 220, 225, 229], "abov": [1, 86, 129, 136, 138, 184, 186, 191, 194, 197, 199, 200, 201, 209, 217, 221, 222, 227], "And": [1, 72, 107, 193, 203, 226], "also": [1, 11, 21, 25, 28, 30, 35, 42, 46, 51, 52, 56, 75, 76, 77, 78, 81, 84, 87, 94, 121, 129, 135, 139, 144, 145, 151, 152, 160, 164, 166, 173, 177, 184, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 214, 215, 216, 217, 221, 224, 226], "64": [1, 2, 197, 199, 201], "latter": [1, 94, 145, 177, 191, 196, 201, 217], "cover": [1, 76, 177, 197, 215, 216], "user": [1, 75, 76, 77, 81, 87, 90, 94, 127, 129, 130, 133, 134, 144, 145, 146, 148, 152, 177, 179, 186, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 222, 223, 227, 228, 229], "more": [1, 76, 77, 78, 87, 94, 121, 132, 135, 144, 147, 177, 184, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 221, 226, 227], "other": [1, 46, 75, 76, 77, 78, 82, 87, 92, 94, 134, 135, 144, 145, 146, 151, 153, 154, 155, 156, 159, 169, 170, 171, 172, 173, 184, 186, 191, 193, 195, 196, 197, 198, 199, 200, 202, 206, 207, 209, 212, 215, 217, 220, 222, 223, 226, 228], "scalar": [1, 75, 76, 77, 78, 82, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 145, 163, 170, 177, 181, 182, 184, 187, 188, 190, 191, 193, 197], "uint64_t": [1, 181, 182], "int32_t": [1, 181, 182, 183], "normal": [1, 72, 184, 186, 197, 201, 217], "distribut": [1, 72, 194, 200, 203, 209, 217, 222], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 132, 133, 134, 145, 146, 151, 162, 168, 169, 171, 172, 173, 174, 175, 176, 178, 184, 186, 188, 190, 191, 192, 194, 196, 197, 199, 205, 207, 211, 217, 219, 220, 221, 222, 223, 224, 230], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 181, 182, 188, 191, 193, 195, 197, 201, 228], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 94, 121, 130, 131, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 169, 170, 173, 174, 175, 177, 179, 181, 182, 183, 185, 186, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 209, 215, 216, 217, 220, 223, 225, 228, 229], "main": [1, 2, 76, 86, 97, 121, 130, 131, 132, 133, 134, 144, 145, 146, 165, 170, 173, 177, 181, 182, 183, 186, 189, 190, 192, 199, 201, 202, 220, 223, 224, 228], "argc": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 170, 173, 177, 181, 182, 183, 189, 190, 192, 228], "argv": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 170, 173, 177, 181, 182, 183, 189, 190, 192, 228], "scopeguarg": 1, "guard": [1, 132], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 152, 177, 184, 189, 190, 191, 192, 221], "1000000": [1, 170], "count": [1, 7, 13, 14, 27, 45, 62, 74, 76, 77, 87, 94, 136, 144, 145, 146, 149, 154, 156, 158, 177, 184, 191, 197, 200, 226], "parallel_reduc": [1, 72, 79, 87, 90, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 141, 143, 147, 149, 152, 153, 154, 155, 156, 157, 158, 188, 189, 190, 191, 197, 198, 205, 221, 222, 223], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 121, 129, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 177, 184, 188, 189, 190, 191, 193, 195, 197, 201, 219, 220, 221, 222, 224, 226, 228], "local_count": 1, "acquir": [1, 76, 87, 177, 192, 193, 198, 201], "engin": [1, 186, 196, 198, 201, 203, 209], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 94, 131, 132, 137, 139, 144, 145, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 169, 170, 176, 183, 188, 191, 199, 200, 208, 219, 220, 221, 227, 228], "drand": 1, "y": [1, 181, 193, 199, 201, 220, 224], "do": [1, 2, 24, 25, 46, 53, 56, 69, 75, 83, 87, 94, 99, 100, 101, 129, 132, 133, 135, 143, 147, 177, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 202, 204, 208, 215, 220, 222, 223, 224, 226], "forget": 1, "releas": [1, 86, 87, 88, 133, 185, 186, 191, 194, 196, 212, 214, 215, 217], "printf": [1, 94, 121, 144, 145, 146, 173, 181, 182, 188, 189, 190, 228], "pi": [1, 89, 137], "f": [1, 87, 94, 138, 151, 152, 160, 205, 215, 220, 221, 227], "n": [1, 2, 18, 24, 31, 33, 63, 64, 74, 75, 77, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 170, 173, 174, 175, 177, 181, 188, 189, 190, 191, 193, 197, 199, 200, 201, 206, 223, 224, 226, 228], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 82, 88, 129, 135, 136, 137, 138, 139, 149, 150, 152, 153, 154, 155, 156, 158, 164, 166, 173, 176, 177, 189, 190, 199, 200, 203, 207, 211, 215, 217, 221, 223, 230], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 205], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": 2, "binop3d": 2, "viewtyp": [2, 75, 129, 168, 169, 176, 177, 201], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 127, 128, 171, 172, 173, 174, 175, 177, 181, 182, 183, 191, 197, 199, 200, 201, 220, 228], "begin": [2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 72, 78, 80, 82, 87, 127, 128, 148, 149, 150, 152, 154, 156, 158, 201, 217, 220, 221, 229], "parallel": [2, 72, 77, 81, 83, 85, 87, 91, 92, 121, 129, 131, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 184, 186, 188, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 206, 211, 219, 222, 224, 226, 227, 228, 230], "teampolici": [2, 72, 76, 85, 87, 94, 129, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 158, 177, 188, 191, 193, 197], "kernel": [2, 11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 94, 144, 148, 150, 151, 152, 159, 170, 177, 184, 186, 193, 196, 197, 198, 201, 202, 206, 207, 217, 223, 227, 230], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 90, 94, 108, 109, 110, 111, 120, 121, 123, 145, 146, 151, 152, 177, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 203, 207, 214, 216, 220, 221, 225, 230], "teamthreadrang": [2, 72, 85, 87, 144, 145, 157, 158, 188, 191, 193], "threadvectorrang": [2, 72, 85, 87, 144, 145, 146, 191], "kokkos_nestedsort": 2, "teammemb": [2, 94, 152, 191], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 57, 72, 75, 84, 87, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 139, 143, 145, 151, 152, 163, 169, 174, 175, 177, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 197, 198, 199, 200, 202, 205, 212, 215, 227], "compar": [2, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 99, 100, 131, 177, 197, 199, 201, 212, 215, 217], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 81, 82, 86, 87, 88, 131, 132, 152, 186, 191, 192, 193, 221], "entir": [2, 75, 87, 149, 173, 197, 198, 200, 202, 217, 226, 228], "thei": [2, 75, 78, 87, 88, 94, 129, 132, 133, 135, 137, 144, 147, 159, 170, 184, 185, 191, 195, 197, 198, 199, 201, 212, 214, 215, 217, 219, 222, 226, 228, 229], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 94, 128, 129, 132, 133, 134, 144, 145, 146, 152, 159, 177, 181, 182, 184, 185, 186, 187, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 207, 208, 209, 212, 215, 217, 221, 222, 224, 226, 227], "top": [2, 94, 185, 186, 191, 217], "lambda": [2, 88, 94, 143, 144, 145, 191, 193, 207, 220, 221, 226], "vector": [2, 72, 73, 85, 88, 144, 145, 146, 149, 152, 155, 156, 157, 158, 159, 181, 182, 183, 188, 197, 198, 201, 205, 207, 220, 225], "lane": [2, 72, 85, 149, 155, 156, 157, 158, 181, 191, 198, 199], "either": [2, 75, 76, 80, 81, 85, 94, 113, 115, 117, 131, 144, 145, 151, 170, 174, 175, 177, 183, 185, 186, 189, 190, 191, 192, 197, 201, 202, 215, 217, 227, 229], "loop": [2, 85, 88, 94, 149, 150, 184, 193, 196, 199, 201, 207, 219, 221, 224, 226, 230], "sort_by_kei": 2, "while": [2, 21, 46, 72, 76, 87, 94, 135, 149, 175, 177, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 217, 228], "simultan": [2, 184], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 94, 145, 151, 184, 186, 189, 190, 197, 214, 228], "same": [2, 17, 18, 24, 28, 29, 31, 33, 34, 37, 39, 41, 44, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 82, 84, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 128, 132, 134, 138, 144, 145, 146, 151, 152, 153, 154, 155, 156, 159, 168, 169, 170, 177, 184, 186, 191, 192, 193, 196, 197, 199, 200, 201, 202, 215, 217, 221, 222, 223, 225, 227, 228], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 121, 134, 145, 146, 160, 162, 170, 171, 172, 173, 175, 177, 191, 193, 198, 201, 218, 221, 222, 225], "It": [2, 71, 75, 76, 77, 78, 87, 128, 129, 130, 131, 132, 145, 149, 177, 181, 182, 184, 185, 186, 191, 193, 196, 197, 199, 200, 201, 206, 217, 225, 226], "equival": [2, 39, 40, 41, 70, 71, 78, 92, 129, 151, 176, 177, 186, 191, 197, 199, 200, 201, 220, 225], "kei": [2, 81, 199, 222], "tupl": [2, 148, 225], "accord": [2, 35, 87, 102, 104, 105, 144, 145, 146], "commonli": [2, 196], "entri": [2, 75, 77, 80, 94, 189, 190, 193, 197, 200, 219], "row": [2, 80, 188, 193, 200, 201], "cr": [2, 72, 80], "compress": [2, 80, 201, 222], "spars": [2, 201, 206, 230], "matrix": [2, 188, 200, 201], "requir": [2, 75, 76, 77, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 136, 149, 153, 154, 155, 156, 157, 158, 169, 177, 186, 187, 189, 190, 191, 192, 193, 194, 196, 201, 202, 205, 206, 213, 215, 216, 217, 218, 221, 224, 225, 227], "extent": [2, 75, 76, 77, 78, 80, 129, 153, 155, 157, 170, 171, 172, 173, 174, 175, 176, 177, 184, 197, 201, 219, 220, 226], "version": [2, 72, 76, 84, 91, 129, 130, 131, 132, 134, 137, 138, 177, 185, 186, 192, 195, 197, 199, 202, 207, 215, 216, 217, 228], "take": [2, 76, 77, 78, 85, 87, 92, 94, 102, 104, 105, 129, 134, 135, 145, 147, 152, 171, 172, 173, 184, 185, 190, 191, 192, 196, 197, 198, 199, 201, 205, 215, 217, 219, 221, 224, 230], "object": [2, 11, 22, 30, 75, 76, 81, 86, 87, 88, 107, 131, 132, 133, 134, 135, 136, 149, 151, 173, 177, 183, 186, 190, 191, 192, 193, 197, 199, 201, 205, 226, 228], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 146, 148, 149, 150, 154, 156, 158, 173, 177, 184, 185, 189, 191, 192, 193, 196, 197, 198, 200, 201, 202, 206, 216, 217, 219, 222, 223, 224, 226], "oper": [2, 4, 11, 21, 22, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 82, 85, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 132, 135, 138, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 170, 171, 172, 173, 177, 179, 183, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 208, 211, 217, 218, 222, 227, 228, 230], "should": [2, 4, 17, 30, 55, 59, 60, 74, 75, 87, 92, 94, 118, 119, 121, 124, 129, 133, 134, 135, 144, 146, 181, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 195, 196, 200, 201, 202, 205, 212, 215, 217, 222, 228], "member": [2, 75, 77, 79, 81, 87, 94, 130, 131, 139, 144, 145, 146, 151, 153, 154, 155, 156, 163, 171, 172, 173, 178, 183, 185, 188, 190, 191, 195, 197, 201, 217, 226, 227, 228], "accept": [2, 30, 31, 36, 37, 39, 40, 41, 69, 85, 87, 148, 150, 160, 181, 182, 191, 194, 201, 215, 217, 221], "b": [2, 11, 21, 22, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 143, 144, 153, 154, 155, 156, 157, 158, 163, 169, 177, 181, 182, 183, 191, 193, 197, 199, 201, 227], "bool": [2, 13, 14, 17, 21, 28, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 74, 75, 76, 77, 79, 81, 82, 84, 87, 92, 100, 129, 130, 131, 135, 146, 158, 171, 172, 173, 177, 182, 183, 190, 192, 197, 199, 205, 222], "true": [2, 12, 13, 14, 17, 20, 21, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 82, 92, 94, 100, 129, 130, 131, 134, 135, 153, 154, 155, 156, 157, 158, 159, 170, 171, 172, 176, 177, 182, 183, 184, 186, 190, 193, 199, 201], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 129, 132, 135, 143, 144, 145, 146, 151, 160, 164, 170, 177, 178, 181, 183, 184, 186, 187, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 207, 212, 215, 217, 219, 222, 223, 228], "goe": [2, 201], "befor": [2, 35, 69, 74, 75, 76, 86, 99, 100, 101, 132, 133, 134, 151, 170, 177, 191, 193, 194, 195, 196, 197, 200, 201, 207, 222, 224, 227, 228], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 48, 67, 69, 137, 138, 139, 144, 161, 195, 197, 199, 201, 205, 208, 226, 228], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 135, 136, 137, 139, 160, 162, 171, 172, 173, 177, 181, 182, 199, 207], "preced": [2, 192, 217], "larger": [2, 74, 76, 77, 152, 173, 177, 184, 201, 204], "final": [2, 72, 76, 79, 83, 87, 130, 131, 132, 134, 144, 145, 146, 158, 170, 173, 175, 177, 181, 182, 183, 187, 189, 190, 191, 194, 197, 201, 205, 219, 222, 223, 228], "barrier": [2, 151, 198, 224], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 93, 118, 119, 124, 128, 129, 131, 135, 151, 169, 170, 178, 184, 188, 191, 193, 195, 196, 197, 198, 200, 202, 203, 215, 217, 219, 221, 223, 224, 225, 226, 228, 230], "immedi": [2, 144, 186, 194, 201, 202, 224], "after": [2, 11, 15, 17, 18, 22, 24, 33, 34, 43, 44, 47, 49, 50, 51, 52, 54, 55, 58, 60, 65, 66, 67, 68, 70, 71, 75, 77, 86, 87, 94, 131, 133, 134, 151, 170, 174, 175, 183, 184, 186, 192, 193, 194, 196, 197, 198, 200, 201, 202, 214, 215, 216, 217, 223, 224, 227], "both": [2, 72, 75, 76, 79, 82, 87, 94, 107, 116, 117, 135, 159, 160, 170, 177, 184, 185, 188, 191, 192, 193, 194, 196, 197, 199, 201, 206, 214, 215, 217, 221, 222], "global": [2, 83, 87, 149, 151, 154, 156, 158, 191, 201, 224], "scratch": [2, 76, 129, 151, 152, 177, 196, 198, 230], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 92, 93, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 143, 151, 152, 169, 171, 172, 173, 174, 175, 177, 178, 181, 186, 188, 190, 194, 195, 199, 200, 202, 203, 206, 207, 217, 222, 223, 224, 225, 227, 228, 230], "space": [2, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 95, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 158, 159, 169, 170, 174, 175, 177, 178, 188, 190, 191, 192, 193, 202, 206, 215, 217, 221, 222, 224, 226, 227, 230], "biton": 2, "algorithm": [2, 81, 87, 90, 184, 186, 191, 192, 194, 196, 197, 198, 201, 206, 217, 219, 224, 225], "stabl": 2, "mean": [2, 22, 34, 67, 68, 76, 81, 92, 94, 129, 132, 135, 143, 144, 147, 177, 179, 186, 191, 193, 196, 197, 198, 199, 200, 201, 202, 204, 207, 222, 229], "repeat": [2, 191, 215, 224, 227], "input": [2, 22, 34, 67, 68, 76, 77, 79, 94, 145, 146, 186, 188, 192, 193, 197, 201, 217, 221, 222], "correspond": [2, 76, 79, 87, 117, 121, 134, 160, 168, 171, 172, 173, 176, 177, 191, 192, 197, 198, 201, 214, 215, 226], "might": [2, 129, 165, 183, 184, 191, 192, 193, 194, 195, 196, 197, 200, 201, 221, 228, 229], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 92, 94, 97, 127, 128, 129, 131, 134, 135, 138, 144, 148, 150, 159, 165, 170, 177, 182, 185, 186, 187, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 209, 215, 217, 223, 228], "execspac": [2, 79, 129, 150, 159, 169, 170, 201], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 93, 126, 127, 128, 147, 148, 150, 159, 164, 177, 191, 192, 222], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 150, 151, 153, 155, 157, 169, 170, 174, 175, 193, 201, 220, 225], "member_typ": [2, 72, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 188, 191, 193], "10": [2, 24, 34, 48, 69, 77, 78, 82, 86, 132, 133, 134, 146, 170, 177, 186, 191, 197, 201, 203, 211, 212, 215, 217, 228], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 121, 146, 191, 193, 197, 198, 201, 223], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 94, 129, 140, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 177, 184, 191, 193, 195, 196, 197, 198, 201, 219, 220, 221, 222, 223, 224, 226, 228], "whole": [2, 151, 184, 186, 188, 200, 226], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 97, 162, 170, 173, 175, 177, 211, 221, 230], "league_rank": [2, 144, 145, 149, 151, 153, 154, 155, 156, 157, 158, 188, 191], "ahost": 2, "create_mirror_view_and_copi": [2, 169], "hostspac": [2, 72, 75, 87, 93, 169, 170, 173, 177, 190, 193, 201, 220], "cout": [2, 129], "j": [2, 80, 149, 155, 158, 159, 191, 193, 196, 197, 201, 203, 221, 224, 226], "vectorlen": 2, "vector_length_max": [2, 152], "now": [2, 87, 129, 135, 147, 159, 170, 177, 183, 185, 191, 193, 195, 196, 199, 201, 205, 219, 228], "column": [2, 80, 193, 197, 200, 201, 217], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 92, 97, 129, 135, 143, 169, 177, 184, 193, 201, 224], "na": [2, 212, 217], "9": [2, 34, 48, 69, 78, 88, 186, 200, 207, 208, 211, 212, 215, 217], "38": 2, "68": 2, "74": [2, 203], "76": 2, "83": 2, "89": 2, "91": 2, "95": 2, "19": [2, 186, 212], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 191], "13": [2, 4, 23, 24, 39, 40, 53, 56, 145, 201, 211, 215], "16": [2, 77, 186, 193, 212, 217], "17": [2, 84, 88, 132, 139, 145, 186, 212, 215], "40": [2, 78], "44": [2, 215], "54": 2, "96": [2, 193], "18": [2, 186, 202, 203, 212, 215], "77": 2, "80": [2, 173], "82": 2, "94": 2, "14": [2, 23, 88, 139, 186, 211, 212, 217], "34": [2, 53, 56, 151], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 137, 139, 146, 170, 177, 197, 207, 211, 212, 215, 230], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 130, 131, 132, 134, 137, 138, 139, 146, 148, 150, 151, 157, 168, 170, 173, 174, 175, 176, 177, 187, 188, 189, 202, 203, 204, 206, 207, 209, 211, 215, 217, 221, 225, 230], "5": [2, 11, 12, 21, 22, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 139, 148, 150, 151, 162, 163, 168, 170, 173, 176, 177, 188, 191, 200, 203, 208, 211, 212, 215, 228, 230], "20": [2, 78, 88, 89, 129, 135, 136, 137, 147, 173, 186, 202, 212, 217], "33": [2, 203], "39": 2, "60": [2, 201], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 130, 131, 132, 134, 138, 177, 186, 188, 196, 200, 202, 207, 208, 211, 212, 215, 217, 230], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 131, 134, 150, 152, 153, 155, 157, 171, 172, 173, 177, 184, 186, 192, 196, 197, 198, 201, 207, 208, 211, 212, 215, 217, 225, 230], "15": [2, 4, 21, 25, 28, 30, 35, 42, 151, 168, 176, 197, 211], "31": [2, 78], "42": [2, 129, 147, 222], "86": 2, "29": [2, 186, 212], "56": 2, "63": 2, "90": [2, 200, 220], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 144, 145, 146, 148, 150, 152, 177, 191, 196, 197, 198, 199, 201, 205, 219, 221, 224], "minimum": [3, 72, 77, 102, 104, 105, 107, 114, 115, 116, 117, 118, 119, 145, 146, 186, 187, 188, 212], "modifi": [3, 4, 11, 17, 22, 24, 28, 30, 32, 33, 35, 36, 40, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 75, 145, 146, 181, 182, 184, 185, 191, 193, 215], "sequenc": [3, 26, 61, 74, 89, 191, 196, 198], "numer": [3, 83, 137, 138, 186, 194, 196, 202, 217, 221, 226], "partit": [3, 35, 47, 205], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 205], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 121, 177, 181, 220, 225], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 144, 145, 146, 152, 169, 174, 175, 177, 196, 197, 200, 201], "qualifi": [4, 87, 205, 212, 228], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 94, 130, 195, 197, 198, 199, 201, 202, 223, 226, 228], "taken": [4, 185, 188, 215], "becaus": [4, 138, 159, 193, 195, 196, 197, 199, 201, 202, 224, 228], "we": [4, 39, 40, 41, 76, 84, 87, 94, 132, 138, 170, 177, 183, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 212, 215, 219, 220, 222, 223, 228], "chang": [4, 72, 75, 81, 132, 151, 165, 177, 185, 192, 194, 197, 199, 200, 201, 202, 213, 214, 215, 217, 223, 228], "itself": [4, 76, 77, 94, 129, 135, 147, 173, 177, 184, 186, 188, 194, 196, 200, 201, 202, 215, 226, 227], "without": [4, 72, 75, 77, 86, 87, 94, 131, 143, 145, 165, 170, 174, 175, 185, 186, 187, 199, 200, 201, 202, 205, 209, 212, 221, 223, 224, 227, 228], "dereferenc": [4, 11, 22, 30, 31, 86, 226], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 133, 134, 144, 145, 146, 148, 149, 151, 153, 154, 155, 156, 169, 174, 175, 176, 177, 185, 186, 187, 189, 190, 191, 192, 193, 196, 197, 200, 201, 202, 209, 214, 215, 216, 217, 221, 222, 224, 227], "done": [4, 37, 54, 69, 87, 94, 135, 186, 191, 192, 199, 201, 202, 215, 222], "execut": [4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 76, 79, 82, 83, 86, 87, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 126, 127, 128, 131, 133, 134, 135, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 166, 169, 170, 175, 177, 178, 183, 184, 192, 193, 194, 199, 202, 206, 207, 216, 217, 221, 225, 226, 227, 228, 230], "rank": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 131, 144, 145, 148, 151, 153, 155, 157, 170, 173, 174, 175, 176, 177, 191, 192, 201, 202, 205, 220, 221, 222], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 97, 170, 174, 175, 177, 193, 201, 221], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 97, 170, 174, 175, 177, 193, 197, 200, 201, 221], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 97, 177, 200, 201, 220], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 168], "proper": [4, 86, 186, 193, 202], "content": [4, 72, 75, 131, 145, 146, 160, 174, 175, 193, 195, 197, 201, 222, 224, 227, 228], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 103, 129, 184, 193, 196, 197, 200, 201, 223], "iteratortyp": [4, 12, 19, 20, 23, 24, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 82, 134, 167, 172, 177, 191, 192, 193, 196, 200, 201, 217], "need": [4, 28, 30, 76, 77, 84, 87, 94, 128, 129, 132, 136, 138, 145, 146, 159, 170, 177, 185, 186, 187, 191, 192, 193, 194, 195, 197, 199, 200, 202, 214, 215, 217, 222, 224], "go": [4, 86, 144, 145, 146, 148, 150, 151, 152, 185, 186, 191, 196, 200, 215], "calcul": [4, 140, 141, 142, 152, 173, 191, 193, 201, 220, 226], "neg": [4, 18, 24, 33, 63, 64, 134, 183, 184, 199], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 20, 25, 26, 27, 38, 49, 50, 53, 54, 61, 62, 71, 76, 92, 99, 100, 131, 159, 176, 177, 181, 182, 192], "stepsb": 4, "swap": [4, 59, 65, 191], "point": [4, 25, 28, 75, 76, 77, 79, 82, 87, 94, 129, 134, 135, 138, 149, 177, 185, 186, 195, 196, 199, 200, 201, 207, 217, 221, 222, 223, 228], "current": [4, 74, 76, 77, 81, 87, 94, 99, 100, 129, 135, 138, 159, 163, 177, 181, 182, 186, 191, 197, 198, 199, 200, 201, 202, 206, 217, 222], "api": [4, 17, 55, 81, 88, 133, 134, 151, 165, 192, 206, 221, 227], "doe": [4, 47, 75, 77, 81, 87, 91, 94, 126, 131, 143, 145, 146, 177, 185, 186, 191, 192, 193, 195, 196, 200, 201, 202, 212, 217], "fenc": [4, 72, 87, 90, 129, 135, 144, 145, 151, 159, 175, 177, 196, 201, 202, 224, 228], "min_el": [5, 39, 41], "max_el": 5, "minmax_el": 5, "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 92, 94, 97, 132, 135, 144, 151, 152, 159, 163, 169, 171, 172, 173, 175, 177, 187, 189, 190, 191, 193, 195, 196, 197, 202, 215, 217, 222, 224, 226, 228], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 65, 76, 77, 81, 132, 135, 151, 152, 171, 172, 173, 177, 185, 195, 218, 228], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 198], "generate_n": 6, "remov": [6, 52, 88, 134, 139, 165, 185, 192, 205, 207, 215], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 54, 55, 56, 89, 130, 131, 139, 186, 193, 197, 205, 229], "replace_if": [6, 17, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 136], "reverse_copi": 6, "rotat": [6, 60, 136], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 129, 143, 177, 186, 192, 196, 202, 230], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 182, 199], "any_of": [7, 182, 199], "none_of": [7, 182, 199], "find": [7, 28, 37, 39, 40, 41, 74, 81, 82, 87, 136, 184, 186, 187, 188, 195, 197, 202, 206, 207, 228], "find_if": [7, 29], "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 27, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 201], "search": [7, 12, 19, 20, 25, 26, 27, 35, 53, 62, 74, 81, 131, 227], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 94, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 129, 145, 146, 151, 187, 191, 194, 196, 198, 200, 201], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": 9, "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 92, 129, 135, 148, 150, 159, 170, 191, 193, 223], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 51, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 127, 131, 132, 134, 143, 144, 145, 146, 161, 177, 178, 186, 192, 201, 205, 229], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 127, 129, 135, 143, 144, 145, 146, 169, 173, 174, 175, 177, 178, 201, 205, 215, 217], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 63, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 129, 135, 191, 193, 196, 209, 214, 226], "second": [11, 36, 38, 40, 42, 72, 74, 92, 94, 134, 143, 159, 160, 167, 176, 181, 182, 183, 184, 188, 191, 192, 193, 195, 196, 197, 201, 228], "comput": [11, 22, 34, 37, 59, 67, 68, 136, 145, 186, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 220, 221, 226], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 94, 97, 170, 185, 186, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 215, 217, 222, 224, 228], "adjac": 11, "pair": [11, 22, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 91, 168, 176, 188, 200, 205, 217], "write": [11, 22, 34, 58, 66, 67, 68, 84, 94, 129, 135, 186, 187, 191, 194, 196, 197, 199, 200, 201, 206, 217], "them": [11, 58, 87, 129, 184, 185, 186, 191, 192, 193, 195, 197, 198, 199, 201, 222, 228], "binari": [11, 21, 22, 26, 27, 34, 36, 37, 39, 40, 41, 48, 61, 62, 66, 69, 70, 71, 72, 107, 121, 185, 188, 197, 201, 207, 209], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60, 65, 66, 69, 70, 71, 72, 75, 76, 79, 87, 92, 94, 129, 135, 143, 150, 152, 159, 170, 174, 175, 177, 178, 183, 185, 188, 195, 197, 200, 201, 226, 228], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 87, 92, 94, 129, 131, 135, 144, 145, 146, 147, 151, 177, 184, 185, 186, 189, 191, 196, 205, 206, 209, 217, 219, 220, 223, 228, 229], "implement": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 73, 76, 82, 85, 89, 91, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 138, 139, 145, 148, 149, 150, 154, 156, 158, 160, 162, 169, 176, 177, 181, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 201, 206, 214, 217, 220, 224, 227, 228], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 127, 144, 145, 146, 177, 185, 186, 191, 201, 206, 207, 217, 223], "purpos": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 94, 148, 150, 177, 194, 196, 198, 200, 201, 204, 206, 209], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 94, 129, 134, 135, 136, 147, 163, 176, 177, 181, 196, 199, 200, 201], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 128, 129, 131, 132, 144, 145, 146, 152, 176, 177, 178, 181, 183, 186, 191, 193, 196, 197, 198, 201], "check": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 81, 84, 88, 129, 131, 135, 136, 188, 192, 193, 201, 202, 207, 216, 217, 221], "mode": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 185, 193, 198, 199, 212, 215], "pass": [11, 17, 22, 23, 24, 26, 27, 28, 30, 35, 36, 39, 40, 41, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 72, 74, 76, 77, 78, 79, 94, 129, 130, 131, 132, 134, 176, 186, 192, 193, 194, 197, 200, 201, 202, 212, 215, 216, 217, 221, 222], "callabl": [11, 22, 48, 67, 69, 177, 181, 182, 185], "value_typ": [11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 145, 146, 163, 170, 177, 181, 182, 188, 190, 197, 222, 224], "conform": [11, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 56, 67, 69], "return_typ": [11, 22, 32, 69, 227], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 92, 121, 129, 131, 132, 135, 144, 145, 151, 152, 163, 171, 172, 173, 181, 182, 184, 192, 193, 198, 200, 201, 214, 222], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "consecut": [12, 70, 71, 136, 152, 201, 222], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 23, 25, 32, 33, 35, 45, 53, 76, 79, 87, 88, 92, 127, 128, 131, 133, 135, 139, 143, 147, 152, 169, 174, 175, 177, 181, 182, 185, 186, 191, 196, 197, 198, 201, 202, 215, 217, 223, 228], "c": [12, 13, 14, 19, 20, 25, 34, 45, 48, 69, 72, 75, 76, 77, 83, 84, 87, 89, 91, 97, 121, 129, 132, 134, 135, 136, 137, 138, 139, 144, 147, 153, 155, 157, 172, 177, 178, 181, 182, 183, 186, 187, 191, 194, 196, 197, 198, 199, 201, 202, 207, 220, 221, 224, 227, 228], "similar": [12, 13, 14, 20, 26, 27, 38, 45, 61, 62, 72, 76, 78, 82, 87, 94, 177, 185, 195, 196, 199, 217, 222, 228], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 44, 50, 51, 58, 60, 66, 71], "predic": [13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 94], "satisfi": [13, 14, 35, 45, 46, 47, 82, 145, 169, 214], "unari": [13, 14, 17, 28, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 94, 138], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [14, 17, 28, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 77, 78, 80, 82, 155, 160, 163, 169, 174, 175, 176, 193, 205, 209, 224], "least": [14, 78, 81, 87, 135, 136, 193, 199], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 94, 131, 134, 135, 136, 138, 143, 151, 153, 154, 155, 156, 159, 169, 171, 172, 174, 175, 176, 177, 181, 182, 184, 185, 186, 187, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 215, 217, 219, 220, 222, 226, 227, 228], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "first_to": [15, 17, 18, 43, 44, 50, 51, 54, 55, 58, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55, 60], "anoth": [15, 16, 17, 18, 42, 54, 55, 78, 87, 94, 136, 151, 153, 154, 155, 156, 169, 176, 184, 191, 192, 193, 198, 199, 200, 201, 217, 222, 226], "overload": [15, 16, 17, 18, 22, 23, 24, 26, 27, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 48, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 69, 70, 71, 89, 90, 134, 138, 144, 145, 185, 199, 200, 201, 205, 226], "sourc": [15, 16, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 151, 168, 177, 186, 196, 199, 202, 204, 209, 215, 217, 229], "destin": [15, 16, 17, 18, 46, 50, 54, 60, 66, 71, 76, 79, 177, 193, 222], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "last_to": 16, "rel": [16, 49, 52, 159, 186, 198], "preserv": [16, 49, 52, 78, 87, 174, 175, 192], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 51, 52, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "convert": [17, 28, 35, 36, 40, 46, 51, 52, 55, 56, 84, 92, 94, 129, 131, 134, 160, 177, 181, 182, 193, 199, 220, 221], "everi": [17, 28, 30, 35, 36, 40, 46, 51, 52, 55, 56, 70, 76, 81, 94, 151, 153, 154, 155, 156, 170, 176, 177, 184, 185, 186, 188, 191, 195, 199, 200, 201, 202, 214, 217, 223, 227, 228], "sizetyp": [18, 24, 31, 33, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "If": [18, 24, 33, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 126, 127, 128, 132, 135, 144, 145, 146, 152, 169, 170, 175, 176, 177, 184, 185, 186, 187, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 214, 215, 221, 222, 224, 226, 228], "otherwis": [18, 21, 24, 33, 35, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 92, 94, 128, 129, 131, 152, 169, 177, 185, 192, 193, 197, 201, 202, 209, 215], "count_iterator_api_default": 19, "count_view_api_default": 19, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 61, 69], "iteratortype2": [21, 26, 27, 38, 42, 61, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "fals": [21, 29, 35, 42, 74, 77, 81, 129, 131, 132, 133, 135, 169, 173, 199, 201], "via": [21, 26, 27, 37, 49, 52, 69, 85, 86, 94, 118, 119, 124, 127, 135, 144, 145, 146, 148, 149, 150, 152, 154, 156, 158, 177, 184, 186, 189, 191, 192, 193, 201, 202, 214, 215, 216, 220, 222, 227], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 39, 40, 41, 42], "valuetype2": [21, 39, 40, 41, 42], "isequalfunctor": [21, 42], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 94, 97, 159, 169, 170, 173, 176, 178, 183, 184, 185, 186, 188, 193, 196, 207, 214, 215, 216, 217, 222, 226], "p": [21, 28, 30, 42, 46, 75, 77, 79, 160, 174, 175, 186, 194, 201, 202, 205, 217, 221], "isequ": 21, "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 94, 121, 131, 191, 193, 196, 197, 200, 201, 219, 222], "openmp": [21, 23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 93, 148, 150, 152, 170, 186, 192, 194, 197, 198, 201, 202, 205, 206, 207, 212, 215, 217, 224], "enabl": [21, 25, 28, 30, 42, 86, 88, 135, 149, 154, 156, 158, 164, 186, 191, 192, 197, 198, 201, 203, 217, 223, 225, 227], "you": [21, 25, 28, 30, 42, 75, 94, 129, 132, 135, 138, 139, 147, 173, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 199, 200, 202, 203, 205, 207, 208, 215, 226, 228], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 129, 160, 177, 186, 188, 191, 192, 193, 197, 199, 200, 217], "set": [22, 23, 24, 26, 27, 31, 34, 36, 37, 39, 40, 41, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 97, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 131, 134, 138, 150, 151, 152, 160, 163, 164, 166, 167, 171, 172, 173, 177, 179, 181, 182, 183, 184, 185, 186, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 207, 212, 215, 216, 217, 220, 224, 227, 228], "valuetyp": [22, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 189, 190], "init_valu": [22, 34, 67, 68, 191], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 146, 151, 197, 200, 222], "prefix": [22, 34, 67, 68, 90, 186, 191, 192, 197, 198, 207], "sum": [22, 34, 67, 68, 72, 80, 90, 107, 121, 145, 153, 154, 155, 156, 157, 158, 187, 188, 189, 190, 191, 197], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 136, 145, 146, 152, 159, 177, 187, 188, 189, 190, 191, 193, 195, 196, 198, 200, 201, 217, 220, 221, 227, 228, 229], "scan": [22, 34, 67, 68, 72, 74, 146, 151, 152, 191, 196, 198, 201, 222], "combin": [22, 34, 87, 102, 104, 105, 121, 135, 145, 146, 177, 188, 191, 194, 198, 201, 212, 215, 227], "th": [22, 34, 67, 68, 74, 176], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 94, 129, 135, 185, 186, 191, 192, 193, 198, 199, 201], "22": [23, 212, 217], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 143, 147, 181, 182, 184, 186, 195, 196, 226, 228], "newvalu": [24, 53, 56], "forward": [25, 74, 132, 185, 193, 198, 215, 222], "find_iterator_api_default": 25, "find_view_api_default": 25, "found": [25, 28, 37, 74, 78, 81, 84, 102, 105, 121, 184, 185, 186, 195, 196, 198, 199, 217, 228], "cbegin": [25, 35], "cend": [25, 35], "host": [25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 129, 131, 135, 138, 164, 169, 170, 177, 186, 191, 192, 193, 195, 197, 198, 201, 202, 217, 218, 222, 223, 227, 228], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "occurr": [26, 61], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 30, 35, 48], "evalu": [28, 42, 76, 129, 177, 193, 197, 217, 221], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 138], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 144, 145, 146, 197, 221], "incrementvalsfunctor": 30, "increment": [30, 37, 184, 193, 196, 201], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": [32, 33], "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 94, 129, 131, 133, 145, 146, 183, 194, 196, 198, 201, 209, 216, 224, 227], "being": [32, 87, 89, 94, 121, 139, 140, 141, 142, 152, 161, 176, 184, 191, 196, 199, 201, 229], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "11": [34, 41, 48, 69, 78, 185, 186, 197, 211, 212, 215, 217], "12": [34, 48, 69, 72, 170, 186, 202, 203, 211, 212, 222], "inclus": [34, 68, 146, 197, 200], "op": [34, 72, 79, 84, 98, 121, 170, 184, 201], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 136, 177, 184, 201, 222], "don": [35, 72, 75, 87, 169, 177, 184, 185, 197, 212, 215], "empti": [35, 39, 40, 41, 75, 82, 205, 227], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 94, 131, 135, 151, 177, 191, 192, 200, 201, 202], "re": [35, 39, 40, 41, 87, 94, 129, 135, 147, 163, 186, 195, 197, 201, 227, 228], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "examin": [36, 40, 47, 70, 217], "less": [36, 38, 39, 40, 41, 63, 64, 87, 136, 159, 187, 192, 199, 201, 212, 221, 222], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 94, 129, 131, 135, 136, 152, 176, 177, 184, 186, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 212, 221, 226], "your": [36, 40, 75, 129, 185, 186, 187, 192, 197, 199, 201, 202, 204, 222, 228], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 107, 109, 110, 111, 177, 184, 186, 188, 191, 196, 198, 199, 201, 227], "largest": [37, 39, 41, 79, 82, 136, 198], "comparison": [37, 54, 72, 138, 184, 187], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 139, 168, 169, 170, 176, 200], "algoritm": [37, 81], "last2": [38, 42], "lexicograph": 38, "lexicographical_compare_iterator_api_defaul": 38, "lexicographical_compare_view_api_default": 38, "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "case": [39, 40, 41, 75, 76, 87, 91, 94, 145, 147, 169, 170, 177, 186, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 219, 222, 224, 225, 226], "sever": [39, 40, 41, 87, 89, 186, 196, 197, 206, 214, 217, 223], "custom": [39, 40, 41, 76, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 177, 191, 197, 201, 211, 214, 221, 230], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 185, 193, 197, 198, 229], "smallest": [40, 41, 136], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 93, 94, 138, 147, 184, 186, 187, 188, 191, 193, 194, 195, 196, 198, 200, 201, 202, 206, 207, 217, 220, 221, 222, 223, 228], "cpp": [42, 131, 186, 205], "mismatchfunctor": 42, "mismatch_index": 42, "outputiter": [43, 44, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 170, 190], "move_iterator_api_default": 43, "move_view_api_default": 43, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "to_first_tru": 46, "to_first_fals": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "view_tru": 46, "view_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 151, 159, 197, 209, 215], "contain": [46, 49, 52, 74, 75, 81, 94, 131, 134, 144, 145, 146, 151, 165, 169, 171, 172, 173, 174, 175, 177, 178, 185, 186, 188, 191, 192, 193, 195, 196, 199, 206, 217, 222, 226, 228, 229], "locat": [47, 75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 135, 177, 186, 191, 196, 198, 201, 202, 207, 217, 220, 225], "alreadi": [47, 76, 78, 81, 85, 87, 170, 177, 185, 194, 197, 215, 219], "is_part": 47, "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "elment": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 151, 152, 188, 189, 190, 191, 196, 198, 205, 211, 224, 230], "account": [48, 68, 152], "join": [48, 69, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 187, 188, 190, 191, 196, 205, 217, 222], "dure": [48, 86, 121, 150, 152, 176, 184, 191, 192, 193, 198, 201, 202, 214, 217, 219, 222, 226], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 94, 127, 128, 129, 131, 132, 150, 177, 185, 198, 199, 201, 202, 228], "associ": [48, 69, 72, 76, 94, 107, 121, 129, 133, 135, 147, 151, 159, 176, 177, 188, 191, 196, 197, 201, 222, 224, 226], "commut": [48, 69, 121], "shift": [49, 52, 63, 64, 102, 105], "remain": [49, 52, 87, 128, 196], "physic": [49, 52, 74, 152, 191, 195, 198, 201, 228], "size": [49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 127, 128, 135, 140, 141, 142, 148, 150, 152, 171, 172, 173, 177, 181, 182, 191, 193, 197, 198, 199, 201, 221, 222, 225, 227], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "target": [49, 50, 72, 75, 94, 129, 144, 186, 193, 194, 196, 198, 206, 207, 217], "new": [49, 50, 51, 52, 59, 60, 70, 74, 75, 79, 87, 89, 94, 99, 100, 101, 104, 106, 128, 129, 131, 132, 135, 139, 147, 159, 169, 173, 174, 175, 176, 179, 184, 185, 188, 191, 193, 194, 195, 196, 197, 201, 202, 208, 214, 215, 216, 223, 227, 228], "ther": [50, 57], "omit": [50, 51, 75, 76, 126, 127, 128, 177], "those": [50, 51, 74, 75, 78, 92, 94, 145, 160, 177, 185, 186, 191, 193, 200, 201, 215, 219, 222], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 99, 100, 101, 102, 105], "new_valu": [53, 54, 55, 56, 99, 100, 101, 106], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135], "explanatori": [53, 54, 161], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 188, 190, 201], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "n_first": [59, 60], "n_locat": [59, 60], "wai": [59, 60, 75, 81, 83, 84, 87, 94, 179, 184, 185, 186, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 209, 221, 222, 225, 226, 228], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 143, 151, 186, 191, 195, 202, 217, 219, 228], "about": [59, 60, 85, 87, 88, 92, 129, 135, 138, 147, 148, 150, 159, 177, 185, 195, 196, 197, 198, 199, 201, 202, 205, 225, 228], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 176, 200, 227], "toward": [63, 64, 194, 196], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "iterator1": 65, "iterator2": 65, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "unaryoper": 66, "unary_op": [66, 67, 68], "d_first": 66, "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "first_from1": 66, "last_from1": 66, "first_from2": 66, "binary_op": [66, 67, 68], "source1": 66, "source2": 66, "store": [66, 72, 75, 76, 77, 80, 81, 94, 99, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 132, 145, 177, 184, 187, 188, 191, 196, 197, 198, 199, 201, 219, 221, 222, 225], "last_from2": 66, "transform_iterator_api_default": 66, "transform_view_api_default": 66, "tranform": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 127, 129, 132, 133, 134, 135, 160, 185, 197, 201, 202, 217], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 177, 188, 191, 195, 200, 201, 209, 221, 228], "along": [69, 87, 200, 220], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 177], "group": [70, 191, 196, 198, 217], "unique_iterator_api_default": 70, "unique_ranges_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_ranges_view_api_default": 71, "librari": [72, 84, 87, 89, 91, 131, 136, 138, 139, 160, 184, 185, 186, 192, 194, 196, 201, 202, 217, 222, 225, 226, 229, 230], "categori": [72, 179, 184, 186, 194, 196, 216, 217], "descript": [72, 73, 83, 85, 88, 90, 97, 107, 121, 122, 129, 131, 184, 186, 192, 207, 215, 217], "rand": 72, "plu": [72, 122, 124, 127, 184, 191, 197, 221], "random_xorshift1024_pool": 72, "1024": [72, 77, 151, 189, 190, 191], "random_xorshift1024": 72, "sampl": [72, 189, 190], "fit": [72, 94, 191, 198, 209], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 129, 144, 145, 146, 159, 166, 186, 188, 196, 197, 198, 227], "dualview": [72, 73, 82, 87, 88, 179, 230], "mirror": [72, 73, 75, 78, 169], "dynamicview": [72, 73, 179], "dynam": [72, 76, 77, 85, 88, 94, 131, 148, 150, 152, 174, 175, 177, 196, 201, 202, 227], "dynrankview": [72, 73, 170, 179], "determin": [72, 73, 76, 88, 148, 152, 155, 176, 177, 181, 182, 186, 191, 192, 196, 197, 198, 201, 202, 207, 214, 221, 222, 227], "runtim": [72, 73, 76, 78, 79, 85, 129, 131, 148, 150, 152, 177, 188, 191, 193, 198, 201, 207, 226, 228], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 94, 129, 131, 132, 135, 138, 181, 182, 185, 186, 187, 191, 193, 197, 199, 201, 202, 207, 217, 222, 224, 230], "error": [72, 138, 161, 177, 193, 196, 200, 201, 202, 208, 212, 215, 217, 226], "record": [72, 87], "code": [72, 77, 87, 88, 90, 94, 129, 135, 151, 170, 177, 184, 185, 186, 187, 189, 191, 196, 197, 198, 200, 201, 202, 206, 207, 209, 211, 212, 214, 217, 218, 221, 222, 225, 226, 227, 229], "offsetview": [72, 73, 87, 179, 205], "indici": [72, 117, 184], "scatterview": [72, 73, 179, 218, 230], "transpart": 72, "replic": [72, 184, 193, 217], "strategi": [72, 87, 94, 131, 184, 228], "scatter": [72, 79, 184], "staticcrsgraph": [72, 73, 201], "resiz": [72, 75, 77, 79, 82, 97, 174, 193], "graph": [72, 80, 83, 94, 230], "semant": [72, 76, 78, 82, 94, 177, 185, 191, 193, 197, 201, 206, 222], "unorderedmap": [72, 73, 201], "map": [72, 73, 76, 80, 81, 177, 191, 192, 193, 198, 201, 219, 221, 222], "optim": [72, 88, 150, 184, 186, 191, 193, 194, 196, 198, 201, 202, 207, 222, 228], "insert": [72, 198, 201], "interfac": [72, 82, 87, 93, 94, 149, 154, 156, 158, 179, 185, 191, 193, 194, 196, 200, 201, 220, 226, 228], "abort": [72, 96], "util": [72, 83, 129, 160, 186, 191, 196, 217, 220, 225], "caus": [72, 138, 161, 185, 193, 196, 201, 208, 209], "abnorm": [72, 161], "program": [72, 82, 92, 94, 97, 133, 134, 135, 147, 161, 192, 193, 194, 195, 199, 200, 201, 203, 207, 217, 219, 222, 227, 228, 229], "termin": [72, 132, 133, 134, 161], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 148, 162, 171, 172, 173, 174, 175, 176, 178, 191, 193, 220, 221], "atomic_exchang": [72, 98, 184], "exchang": [72, 99, 100, 101, 184, 218], "old": [72, 75, 79, 81, 132, 175, 184, 197, 201], "atomic_compare_exchang": [72, 98, 184], "match": [72, 75, 76, 78, 82, 97, 144, 145, 146, 148, 160, 169, 171, 172, 177, 184, 186, 191, 201], "atomic_compare_exchange_strong": [72, 98, 184], "atomic_load": [72, 98, 184], "load": [72, 76, 87, 94, 131, 177, 184, 191, 197, 198, 199, 215, 217], "atomic_": [72, 98, 184], "anyth": [72, 94, 165, 184, 185], "atomic_fetch_": [72, 98, 184], "variou": [72, 75, 83, 184, 186, 216, 217], "_fetch": [72, 98, 184], "atomic_stor": [72, 98, 184], "band": [72, 107, 121, 188, 191], "bor": [72, 107, 121, 188, 191], "Or": [72, 107, 227], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 92, 129, 134, 135, 145, 146, 160, 170, 177, 186, 192, 193, 195, 201, 208, 211, 220, 228], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 91, 121, 129, 132, 138, 143, 144, 145, 146, 148, 150, 152, 160, 170, 177, 182, 184, 185, 186, 188, 191, 193, 196, 197, 198, 199, 200, 201, 212, 215, 217, 218, 221, 222, 223, 226], "create_mirror": [72, 97, 201], "create_mirror_view": [72, 169, 170, 193, 201, 205, 224], "cudaspac": [72, 87, 88, 93, 177, 193, 201, 205, 224], "primari": [72, 84, 94, 185, 186, 192, 212, 215, 217], "cudauvmspac": [72, 87, 88, 93, 193, 195, 201, 202, 205, 228], "unifi": [72, 87, 135, 207], "page": [72, 94, 121, 129, 135, 147, 186, 201, 203, 207], "migrat": [72, 135, 223], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 92, 94, 97, 125, 126, 127, 128, 129, 135, 152, 159, 169, 171, 172, 173, 175, 177, 178, 184, 186, 191, 194, 195, 196, 198, 199, 201, 202, 222, 223, 224, 225, 228], "cudahostpinnedspac": [72, 93, 177, 201], "memrori": 72, "pin": [72, 135, 186], "gpu": [72, 76, 88, 91, 131, 135, 169, 177, 186, 191, 192, 193, 194, 196, 198, 199, 201, 202, 205, 207, 217, 222, 223, 225], "executionpolici": [72, 95, 144, 145, 146], "concept": [72, 83, 94, 95, 107, 121, 129, 135, 145, 147, 151, 171, 172, 173, 185, 187, 190, 191, 194, 196, 198, 203, 230], "hpx": [72, 85, 87, 88, 93, 148, 150, 192, 205, 206, 207], "system": [72, 87, 94, 129, 135, 185, 191, 192, 196, 198, 201, 202, 203, 216, 217, 226], "mechan": [72, 87, 147, 191, 193, 194, 198, 201], "initargu": [72, 131, 132, 134, 192, 205], "programmat": [72, 130, 131, 134], "how": [72, 76, 85, 121, 129, 135, 147, 148, 177, 184, 185, 186, 187, 191, 192, 193, 194, 196, 197, 198, 199, 202, 222], "deprec": [72, 77, 87, 88, 130, 131, 134, 206, 207, 223], "initializationset": [72, 130, 132, 134, 164, 166, 205], "is_array_layout": [72, 87, 205], "trait": [72, 75, 76, 77, 83, 84, 89, 92, 129, 137, 138, 150, 168, 177, 191, 225], "detect": [72, 83, 95, 139, 171, 172, 173, 202], "model": [72, 92, 94, 95, 153, 154, 155, 156, 157, 158, 171, 172, 173, 186, 193, 194, 197, 199, 201, 203, 207, 211, 222], "layout": [72, 75, 76, 77, 78, 79, 95, 97, 169, 171, 172, 173, 174, 175, 193, 194, 196, 200], "is_execution_polici": [72, 205], "is_execution_spac": [72, 87, 129, 205], "is_memory_spac": [72, 87, 135, 205], "memoryspac": [72, 76, 92, 95, 126, 127, 128, 129, 135, 177, 201], "is_memory_trait": [72, 205], "memorytrait": [72, 75, 76, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 177, 184, 191, 201, 225], "is_reduc": [72, 205], "is_spac": [72, 129, 205], "fortran": [72, 76, 97, 171, 177, 186, 200, 201, 212, 218, 230], "arbitrari": [72, 76, 85, 97, 148, 150, 173, 177, 187, 190, 191, 198, 200, 201], "stride": [72, 75, 76, 77, 79, 97, 173, 193, 200, 220], "kokkos_fre": [72, 125, 127, 128, 193, 223], "delloc": 72, "previous": [72, 99, 101, 125, 126, 128, 135, 177, 186, 187, 191, 198, 229], "kokkos_malloc": [72, 125, 126, 128, 193, 195, 223, 228], "kokkos_realloc": [72, 125, 126, 193], "expand": [72, 94, 125, 192], "block": [72, 94, 125, 127, 143, 159, 186, 191, 193, 194, 200, 224], "land": [72, 107, 108, 109, 111, 121, 188, 191, 217], "built": [72, 76, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 177, 186, 187, 190, 191, 192, 201, 217], "lor": [72, 107, 121, 188, 191], "maxloc": [72, 107, 118, 121, 124, 188, 191], "index": [72, 74, 76, 77, 78, 81, 82, 107, 113, 115, 116, 117, 118, 122, 124, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 171, 172, 176, 177, 183, 184, 188, 191, 193, 195, 197, 200, 228], "u": [72, 160, 181, 183, 186, 209], "mdrangepolici": [72, 76, 85, 87, 144, 145, 177, 205, 218, 230], "multidimension": [72, 76, 83, 85, 97, 148, 171, 172, 173, 188, 191, 193, 200, 211, 221], "min": [72, 102, 105, 107, 113, 115, 116, 117, 118, 119, 121, 122, 124, 139, 145, 184, 188, 191, 205, 229], "minloc": [72, 107, 118, 121, 188, 191], "minmax": [72, 107, 119, 121, 187, 188, 191, 205], "minmaxloc": [72, 107, 118, 121, 188, 191], "openmptarget": [72, 87, 88, 93, 186, 192], "targetoffload": 72, "analogu": 72, "bulk": [72, 198], "item": [72, 85, 129, 146, 148, 150, 152, 191, 196, 222, 226], "parallelfortag": [72, 90, 152], "tag": [72, 76, 85, 87, 140, 141, 142, 145, 148, 150, 152, 171, 172, 173, 177, 190, 191, 199, 215, 216, 218, 222], "team_siz": [72, 151, 152, 191], "contribut": [72, 79, 145, 146, 184, 188, 191, 206, 214, 219, 224], "parallelreducetag": [72, 90, 152], "parallel_scan": [72, 90, 142, 143, 158, 191, 197, 198, 222, 223], "simpl": [72, 121, 129, 167, 184, 188, 191, 193, 196, 197, 198, 199, 200, 201, 202, 220, 221, 222, 226], "pre": [72, 146, 159, 181, 182, 186, 219], "postfix": [72, 198], "depend": [72, 88, 94, 135, 152, 153, 157, 184, 185, 186, 187, 191, 196, 197, 198, 199, 202, 221, 223, 224, 228], "parallelscantag": [72, 90], "partition_spac": [72, 93], "split": [72, 85, 149, 153, 154, 155, 156, 157, 158, 159, 191, 197, 227], "exist": [72, 75, 81, 84, 87, 88, 143, 145, 151, 159, 170, 174, 175, 185, 186, 192, 196, 198, 199, 200, 201, 214, 217, 222], "multipl": [72, 87, 88, 94, 107, 145, 184, 186, 191, 192, 193, 196, 197, 199, 201, 202, 206, 207, 217, 222, 226], "perteam": [72, 151, 152, 153, 154, 155, 156, 158, 188, 191], "singl": [72, 94, 145, 149, 150, 153, 154, 155, 156, 158, 181, 182, 188, 193, 194, 196, 197, 198, 200, 201, 202, 221], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 134, 135, 167, 171, 172, 173, 174, 175, 177, 183, 187, 191, 193, 196, 197, 199, 200], "indic": [72, 76, 78, 79, 80, 81, 87, 107, 118, 122, 129, 140, 141, 142, 177, 184, 188, 191, 198, 200, 201, 221, 227], "per": [72, 94, 152, 188, 191, 192, 193, 197, 198, 200, 201, 219, 222], "perthread": [72, 152, 158, 191], "prod": [72, 107, 121, 188, 191], "rangepolici": [72, 85, 87, 129, 144, 145, 146, 147, 159, 191, 193, 197, 201, 224, 226], "1d": [72, 76, 144, 145, 146, 150, 152, 177, 193, 201, 220], "realloc": [72, 75, 79, 97, 127, 128, 175, 201], "maintain": [72, 87, 185], "reducerconcept": [72, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 190], "cpu": [72, 88, 129, 135, 169, 184, 186, 191, 192, 198, 199, 205, 207, 212, 215, 217], "scopeguard": [72, 134, 205], "aggreg": [72, 86, 191], "spaceaccess": [72, 92, 129, 135, 169, 170, 201, 205], "facil": [72, 89, 97, 136, 139, 169, 179], "queri": [72, 75, 131, 151, 152, 201, 205], "rule": [72, 77, 185], "multi": [72, 76, 144, 145, 177, 188, 194, 202], "dimension": [72, 76, 144, 145, 177, 200, 201], "arrai": [72, 75, 76, 77, 78, 79, 80, 82, 94, 97, 132, 134, 145, 148, 171, 172, 173, 177, 184, 188, 189, 190, 191, 193, 200, 205, 211, 217, 218, 219, 222], "crate": [72, 217], "slice": [72, 97, 225, 230], "teamhandl": [72, 149, 153, 154, 155, 156, 157, 158], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 157], "teamvectorrang": [72, 85, 157, 158], "threadvectormdrang": [72, 85], "timer": [72, 96, 143], "basic": [72, 76, 87, 138, 147, 177, 186, 193, 194, 202, 203, 223], "like": [72, 75, 76, 87, 94, 97, 129, 135, 144, 147, 170, 177, 184, 185, 186, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 219, 226, 228], "act": [72, 87, 194, 200], "comment": [73, 186], "offset": [73, 78, 191, 198, 201], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 193, 196, 197, 198, 201], "fix": [74, 81, 86, 185, 193, 201, 214, 215, 225], "run": [74, 88, 94, 134, 135, 144, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 201, 202, 207, 215, 217, 223, 224, 228], "time": [74, 75, 76, 85, 87, 88, 92, 94, 129, 148, 150, 152, 167, 177, 181, 182, 184, 185, 186, 191, 196, 197, 198, 199, 200, 201, 202, 207, 214, 215, 217, 221, 223, 226], "paramet": [74, 75, 76, 77, 81, 85, 94, 97, 99, 100, 101, 102, 121, 126, 127, 128, 129, 131, 132, 135, 147, 151, 159, 178, 186, 188, 192, 197, 199, 201, 202, 205, 212, 217, 221, 224, 226], "constant": [74, 78, 83, 89, 129, 136, 138, 139, 162, 177, 181, 182, 197], "bit_scan_revers": 74, "1u": [74, 200], "mask": [74, 182, 183, 192, 199], "direct": [74, 138, 169, 191, 192, 199, 200, 201, 208, 209, 217], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 94, 148, 150, 159, 177], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "when": [74, 78, 81, 82, 86, 87, 91, 94, 129, 134, 135, 145, 149, 152, 171, 172, 173, 183, 184, 185, 186, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 207, 212, 217, 220, 221, 223, 224, 227, 228, 229], "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 177, 185, 193, 201, 207], "wa": [74, 75, 81, 88, 94, 128, 130, 131, 132, 169, 177, 181, 182, 186, 188, 191, 192, 193, 201, 202, 215, 221, 223], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 132, 134, 144, 151, 152, 163, 169, 171, 172, 173, 174, 175, 189, 190, 191, 197, 200, 201, 205], "arg_siz": 74, "reset": [74, 75, 79, 167, 186], "clear": [74, 81, 82, 87, 185], "test": [74, 88, 138, 143, 186, 193, 197, 201, 202, 206, 207, 212, 214, 215], "max_hint": 74, "happen": [74, 76, 77, 94, 99, 100, 177, 184, 191, 192, 193, 195, 201, 215, 217, 228], "occur": [74, 91, 170, 192, 196, 202, 220, 221, 223], "smaller": [74, 76, 77, 176, 177, 193, 217], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 177], "rh": [74, 76, 77, 118, 119, 124, 177, 181, 182, 189, 190, 224], "dstdevic": 74, "srcdevic": 74, "dst": [74, 87, 145, 197], "src": [74, 75, 79, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 145, 163, 169, 170, 186, 189, 190, 197, 221], "kokkos_dualview": [75, 205], "refer": [75, 76, 77, 79, 82, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 138, 139, 152, 170, 176, 177, 181, 182, 183, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 200, 202, 206, 208, 217, 226], "capabl": [75, 83, 135, 186, 191, 192, 193, 198, 199, 214], "well": [75, 76, 87, 92, 94, 121, 143, 148, 150, 151, 177, 185, 186, 188, 191, 193, 194, 196, 197, 198, 200, 201, 215, 217, 222], "flag": [75, 129, 134, 177, 181, 183, 186, 197, 202, 207, 212, 215, 217], "respons": [75, 192, 193, 196, 199, 214], "manual": [75, 186, 202, 215, 221], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 186, 190, 196, 197, 199, 201, 205, 221, 228], "synchron": [75, 82, 135, 149, 159, 170, 191, 196, 198, 224], "conveni": [75, 79, 84, 129, 193, 197, 200], "capac": [75, 81, 191, 196], "appropri": [75, 80, 94, 121, 186, 191, 196, 197, 198, 200, 201, 202, 214, 217], "underli": [75, 76, 77, 78, 82, 94, 159, 177, 184, 193, 194, 196, 198, 201, 225], "four": [75, 201, 207, 215], "separ": [75, 87, 184, 186, 192, 197, 201, 215, 225, 226], "intend": [75, 84, 87, 89, 160, 186, 191, 195, 201, 228], "pleas": [75, 129, 135, 138, 139, 147, 185, 186, 201, 203, 204, 217], "document": [75, 87, 91, 129, 135, 144, 145, 147, 168, 181, 182, 185, 186, 195, 209, 214, 221, 222, 228], "suffic": 75, "most": [75, 76, 87, 94, 129, 134, 135, 136, 138, 147, 169, 173, 177, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 201, 202, 203, 212, 215, 217, 219, 221, 224, 228], "m": [75, 87, 149, 150, 154, 156, 158, 177, 183, 188, 193, 200, 217, 224], "d_view": [75, 170], "execution_spac": [75, 76, 81, 87, 92, 129, 135, 150, 151, 152, 159, 170, 177, 191, 193, 197, 201, 222, 225], "host_mirror_spac": [75, 76, 169, 177, 205], "h_view": [75, 170], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 177], "t_dev": 75, "hostmirror": [75, 76, 77, 169, 177, 193, 224], "t_host": 75, "const_data_typ": [75, 76, 77, 177], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 129, 170, 171, 172, 173, 174, 175, 177, 201], "randomaccess": [75, 76, 177, 201], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 190, 220], "t_dev_um": 75, "unmanag": [75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 173, 177, 178, 191, 193, 220, 230], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 148, 153, 155, 157, 162, 168, 171, 172, 173, 174, 175, 176, 177, 200, 201], "kokkos_impl_ctor_default_arg": [75, 174, 175], "n1": [75, 76, 79, 148, 153, 155, 157, 159, 162, 168, 171, 172, 173, 174, 175, 176, 177, 200, 201], "n2": [75, 76, 79, 148, 153, 155, 157, 159, 168, 171, 172, 173, 174, 175, 176, 177, 201], "n3": [75, 76, 79, 153, 155, 157, 159, 171, 172, 173, 174, 175, 177, 201], "n4": [75, 76, 79, 171, 172, 173, 174, 175, 177], "n5": [75, 76, 79, 171, 172, 173, 174, 175, 177], "n6": [75, 76, 79, 171, 172, 173, 174, 175, 177], "n7": [75, 76, 79, 171, 172, 173, 174, 175, 177], "analog": [75, 94, 170], "benefit": [75, 212], "nonzero": 75, "impl": [75, 79, 87, 149, 152, 169, 174, 175, 185, 205, 225], "viewctorprop": [75, 79, 169, 174, 175], "arg_prop": [75, 79, 169, 174, 175], "enable_if": 75, "has_point": 75, "wrap": [75, 76, 177, 178, 186, 193, 201], "up": [75, 87, 94, 133, 136, 171, 172, 173, 177, 185, 186, 191, 192, 197, 198, 201, 216, 217, 227], "viewctor": 75, "thing": [75, 87, 129, 179, 185, 186, 193, 195, 196, 198, 199, 201, 228], "ctor": 75, "ss": 75, "ls": [75, 151, 227], "ds": 75, "ms": [75, 129, 135], "shallow": [75, 193, 197, 201], "sd": 75, "s1": [75, 129, 135, 173], "s2": [75, 129, 135, 173], "s3": [75, 173], "arg0": 75, "arg": [75, 76, 77, 84, 132, 148, 150, 152, 159, 168, 176, 177, 178, 192], "d_view_": 75, "h_view_": 75, "caller": [75, 129], "sure": [75, 186, 191, 197, 201, 202], "ensur": [75, 86, 132, 133, 134, 185, 186, 192, 196, 199, 201], "mark": [75, 197, 201, 228], "if_c": 75, "is_sam": [75, 84, 92, 169, 170, 193, 200, 201], "memory_spac": [75, 76, 81, 87, 92, 126, 127, 128, 129, 135, 169, 170, 177, 178, 193, 201, 223], "get_device_sid": 75, "specif": [75, 85, 87, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 143, 150, 151, 152, 159, 170, 181, 182, 184, 186, 189, 190, 191, 192, 193, 194, 196, 197, 199, 201, 202, 203, 204, 209, 217, 219], "afraid": 75, "express": [75, 83, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 136, 183, 186, 198, 199, 200, 202, 209, 223], "That": [75, 76, 87, 143, 177, 191, 192, 193, 197, 200, 201, 202], "tell": [75, 94, 191, 196, 197, 200, 202, 225, 228], "what": [75, 88, 121, 129, 131, 135, 179, 181, 182, 185, 193, 195, 196, 197, 199, 215, 222, 226], "els": [75, 94, 145, 146, 201, 204, 222, 227], "suppos": [75, 84, 199, 200, 222], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 201], "dual": [75, 82, 207], "want": [75, 84, 184, 195, 196, 197, 199, 222, 228], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 170], "non_const_data_typ": [75, 76, 77, 177], "need_sync": 75, "been": [75, 87, 88, 91, 186, 191, 193, 194, 196, 199, 200, 201, 217, 219, 226, 227], "In": [75, 76, 86, 87, 88, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 145, 147, 149, 154, 156, 158, 170, 177, 179, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 216, 217, 219, 220, 221, 222, 224, 226, 228], "discard": [75, 79], "modif": [75, 194, 209, 224], "doesn": [75, 143, 145, 169, 186, 191, 197, 202], "know": [75, 185, 186, 187, 193, 195, 200, 202, 228], "whether": [75, 76, 77, 82, 87, 88, 99, 129, 131, 135, 147, 152, 177, 188, 195, 196, 197, 200, 201, 207, 209, 214, 222, 227, 228], "inlin": [75, 77, 84, 150, 152, 191, 193, 205], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 177, 186, 191, 196, 207, 223], "referenc": [75, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 176, 177, 193, 201], "address": [75, 76, 79, 99, 100, 101, 102, 103, 104, 105, 106, 177, 181, 185, 186, 191, 194, 196, 198, 217], "null": [75, 76, 77, 79, 82, 126, 128, 132, 134, 177], "pointer": [75, 76, 77, 79, 81, 82, 94, 126, 127, 128, 129, 132, 134, 151, 169, 173, 174, 175, 177, 178, 184, 193, 197, 199, 205, 222, 226], "span": [75, 76, 77, 82, 177], "span_is_contigu": [75, 76, 77, 170, 177], "contigu": [75, 76, 77, 85, 170, 171, 172, 177, 181, 200, 201, 222, 225], "ityp": [75, 76, 77, 154, 156, 158, 176, 177], "stride_": 75, "is_integr": [75, 154, 156, 158, 176], "r": [75, 170, 176, 177, 199, 203, 209, 221, 224], "extent_int": [75, 76, 77, 177], "integr": [75, 76, 77, 88, 136, 139, 176, 177, 215, 217], "kokkos_dynrankview": [76, 205], "potenti": [76, 77, 81, 88, 94, 135, 144, 145, 149, 151, 170, 177, 184, 190, 191, 194, 196, 197, 202, 226], "compil": [76, 85, 87, 88, 92, 129, 136, 138, 148, 150, 170, 177, 181, 182, 184, 185, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 211, 216, 221, 222, 225, 226, 228, 229], "Its": [76, 177, 193], "shared_ptr": [76, 177], "upper": [76, 201], "bound": [76, 77, 81, 85, 88, 148, 150, 191, 193, 201, 207, 217, 220], "layouttyp": [76, 77, 177], "fundament": [76, 84, 85, 94, 129, 135, 147, 177, 181, 182, 183, 194, 196, 198, 222], "mandatori": [76, 193], "scalartyp": [76, 177, 189, 190], "storag": [76, 80, 107, 126, 127, 128, 152, 173, 177, 196, 198, 199, 225], "come": [76, 87, 177, 184, 186, 192, 194, 195, 197, 198, 200, 201, 202, 221, 223, 226, 228], "some": [76, 94, 127, 129, 136, 143, 151, 152, 153, 154, 155, 156, 159, 173, 177, 186, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 217, 219, 221, 222, 224, 226, 228], "ones": [76, 130, 177, 185, 191, 192, 196, 226], "right": [76, 136, 148, 177, 192, 196, 197, 199, 200, 201, 209, 221], "left": [76, 94, 136, 148, 177, 200, 201, 221], "laid": [76, 177, 193], "out": [76, 86, 133, 171, 172, 173, 177, 185, 186, 193, 197, 199, 201, 209, 215, 221, 228], "control": [76, 126, 127, 128, 134, 150, 151, 177, 186, 191, 196, 197, 198, 199, 201, 202, 207, 217, 225], "finer": 76, "grain": [76, 201], "manner": [76, 91, 177], "trigger": [76, 135, 177], "textur": [76, 177, 201], "fetch": [76, 177, 201, 217], "restrict": [76, 77, 149, 168, 174, 175, 176, 177, 193, 196, 197, 198, 201, 202, 217], "There": [76, 81, 87, 94, 129, 134, 135, 147, 159, 177, 179, 184, 185, 186, 193, 198, 199, 202, 215, 221, 222, 224], "alias": [76, 81, 151, 177, 185, 192, 201], "scope": [76, 86, 133, 134, 177, 185, 197, 198, 201, 208, 226, 228], "enforc": [76, 177, 191, 199, 202], "specifi": [76, 77, 79, 82, 85, 87, 88, 92, 121, 126, 127, 129, 130, 144, 145, 148, 150, 151, 152, 168, 169, 176, 177, 186, 190, 191, 192, 193, 198, 202, 216, 217, 225, 228], "rank_dynam": [76, 177], "reference_type_is_lvalue_refer": [76, 77, 177], "lvalu": [76, 77, 177, 201], "scalar_array_typ": [76, 177], "properli": [76, 91, 177, 195, 217, 228], "specialis": [76, 177, 201], "sacado": [76, 177], "fad": [76, 177], "const_scalar_array_typ": [76, 177], "non_const_scalar_array_typ": [76, 177], "strip": [76, 177], "const_value_typ": [76, 177], "non_const_value_typ": [76, 145, 170, 177], "certain": [76, 87, 88, 129, 135, 147, 150, 170, 177, 184, 186, 193, 198, 202, 209, 228], "compound": [76, 177], "memory_trait": [76, 177], "non_const_typ": [76, 77, 177], "const_typ": [76, 77, 177], "handl": [76, 77, 81, 94, 144, 145, 146, 149, 151, 154, 156, 158, 177, 191, 193, 195, 197, 199, 201, 222, 228], "reference_typ": [76, 77, 177], "pointer_typ": [76, 77, 177], "size_typ": [76, 82, 87, 177, 197, 201, 222], "partial": [76, 87, 145, 146, 177, 184, 197], "No": [76, 77, 165, 177], "made": [76, 77, 87, 177, 193, 195, 196, 202, 228], "nullptr": [76, 132], "dt": [76, 79, 177], "prop": [76, 177], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 177], "is_regular": [76, 177], "standard": [76, 77, 81, 83, 87, 89, 91, 136, 138, 139, 177, 185, 186, 194, 197, 199, 204, 207, 216, 228], "profil": [76, 77, 127, 143, 144, 145, 146, 177, 206, 230], "allocproperti": [76, 177], "view_alloc": [76, 79, 97, 169, 174, 175, 177, 201], "ptr": [76, 87, 126, 128, 135, 173, 177, 201], "required_allocation_s": [76, 177], "nr": [76, 177], "wrapper": [76, 152, 177, 186, 202], "TO": [76, 209], "BE": [76, 209], "scratchspac": [76, 177, 191], "sizeof": [76, 159, 176, 177, 191, 193, 195, 201, 223, 228], "typic": [76, 135, 177, 184, 186, 191, 192, 193, 195, 197, 201, 217, 219, 222, 228], "team_handl": [76, 149, 151, 154, 156, 158, 177], "i0": [76, 77, 144, 145, 153, 155, 157, 176, 177], "i1": [76, 153, 155, 157, 176, 177], "i2": [76, 153, 155, 157, 176, 177], "i3": [76, 153, 155, 157, 177], "i4": [76, 177], "i5": [76, 177], "i6": [76, 177], "beyond": [76, 87, 151, 177, 186, 196, 202, 221], "kokkos_debug": [76, 177, 186], "dim": [76, 77, 79, 177, 220], "architectur": [76, 77, 83, 177, 181, 182, 184, 186, 191, 194, 196, 198, 201, 202, 206, 217, 221, 224, 225], "effici": [76, 77, 81, 177, 194, 200, 201], "cast": [76, 77, 177, 201], "applic": [76, 77, 177, 185, 186, 187, 192, 193, 194, 196, 197, 198, 200, 201, 202, 206, 217, 220, 224, 226, 227, 230], "stride_0": [76, 77, 177], "stride_1": [76, 77, 177], "stride_2": [76, 77, 177], "stride_3": [76, 77, 177], "stride_4": [76, 77, 177], "stride_5": [76, 77, 177], "stride_6": [76, 77, 177], "stride_7": [76, 77, 177], "lowest": [76, 127, 139, 177], "highest": [76, 129, 177, 192, 194], "due": [76, 177, 193, 194, 195, 199, 201, 228], "pad": [76, 169, 177, 178, 196, 198, 199, 201], "belong": [76, 177], "n8": [76, 177], "byte": [76, 127, 128, 135, 136, 152, 177, 201], "use_count": [76, 77, 177], "aim": [76, 177, 201], "legal": [76, 78, 149, 151, 153, 154, 155, 156, 177, 191, 197, 198, 201], "intercept": [76, 177], "illeg": [76, 177, 191, 201], "dsttype": [76, 177], "srctype": [76, 177], "dst_view": [76, 177], "src_view": [76, 177], "scrtype": [76, 177], "met": [76, 177, 209, 214, 216], "is_const": [76, 177], "memoryspaceaccess": [76, 87, 177], "furthermor": [76, 177, 184, 191, 192, 193, 197, 198, 201, 212, 214, 223], "neither": [76, 144, 145, 146, 177, 199, 209], "nor": [76, 144, 145, 146, 177, 199, 209], "k": [76, 87, 94, 129, 149, 150, 155, 158, 170, 177, 191, 200, 201], "hold": [76, 177, 201, 226], "cstdio": [76, 144, 145, 146, 170, 177, 181, 182, 183, 228], "atoi": [76, 121, 144, 145, 146, 170, 177], "inita": [76, 177], "initb": [76, 177], "const_a": [76, 177], "const_b": [76, 177], "setc": [76, 177], "kokkos_dynamicview": 77, "variabl": [77, 79, 84, 102, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 171, 172, 185, 186, 187, 188, 191, 197, 202, 217, 224], "parent": [77, 200, 227], "array_typ": [77, 189, 190], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 135, 150, 152, 191, 197, 223], "rais": [77, 194, 205], "nearest": [77, 138], "power": [77, 136, 138, 193, 194, 215, 217], "resize_seri": 77, "reserv": [77, 82, 192, 201], "amount": [77, 87, 129, 184, 191, 197, 198], "suffici": [77, 185, 197, 201, 219], "chunk_siz": [77, 87, 150, 152], "outsid": [77, 94, 186, 191, 193, 196, 201, 215, 229], "region": [77, 85, 143, 144, 145, 146, 191, 192, 193, 195, 196, 201, 228], "allocation_ext": 77, "noexcept": [77, 151, 164, 166], "multipli": [77, 102, 105, 120, 163, 191], "alwai": [77, 87, 94, 181, 182, 191, 199, 201, 223], "until": [77, 86, 87, 94, 132, 134, 151, 177, 184, 199, 207, 223, 224, 227], "greater": [77, 131, 136, 201], "initializedata": 77, "kokkos_offsetview": [78, 205], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 87, 88, 129, 130, 132, 134, 135, 136, 137, 138, 139, 164, 166, 167, 170, 177, 184, 186, 191, 193, 194, 197, 199, 200, 201, 207, 223, 226], "ov": 78, "initializer_list": [78, 148], "instead": [78, 81, 129, 130, 131, 135, 138, 177, 191, 192, 197, 199, 201, 208], "obtain": [78, 191, 192, 193, 201, 217, 222], "begin0": 78, "end0": 78, "exactli": [78, 87, 135, 199, 201], "drop": [78, 132, 186, 193], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 160, 200], "21": [78, 186, 212], "assert_eq": 78, "deep": [78, 92, 135, 170, 193, 224], "sens": [78, 147, 195, 196, 199, 201, 228], "similarli": [78, 94, 228], "kokkos_scatterview": [79, 205], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 127, 128, 159], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 222], "exec_spac": [79, 170, 178], "scatteraccess": 79, "accumul": [79, 196, 197, 227], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 135, 138, 146, 192, 195, 196, 201, 203, 224, 228], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 144, 145, 159, 177, 197, 201], "bar": 79, "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 205], "simplifi": [80, 189], "manipul": [80, 89, 127, 128, 138, 177], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 205], "design": [81, 82, 94, 186, 193, 194, 196, 199, 206, 217, 222, 224, 226, 227], "ten": [81, 191], "thousand": [81, 222], "consequ": [81, 191, 197, 199], "significantli": [81, 184], "unordered_map": 81, "fail": [81, 127, 170, 199, 201, 215, 217, 226, 228, 229], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 94, 143, 159, 170, 184, 186, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 219, 221, 226, 228], "cach": [81, 135, 152, 184, 186, 191, 193, 196, 198, 201], "friendli": [81, 83, 84, 139, 201, 225], "pod": [81, 145, 146, 191], "plain": [81, 181, 182, 201], "trivial": [81, 94], "copyabl": 81, "capacity_hint": 81, "enough": [81, 87, 215, 221], "requested_capac": 81, "lower": [81, 191], "o": [81, 186, 196], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": 81, "key_at": 81, "value_at": 81, "hashmap": 81, "success": [81, 127, 128, 217], "successfulli": [81, 214], "present": [81, 87, 131, 183, 185, 196, 217], "did": [81, 188], "report": [81, 217], "impli": [81, 143, 150, 159, 209], "exhaust": 81, "restart": 81, "pattern": [81, 85, 87, 92, 121, 129, 147, 149, 150, 184, 191, 201, 203, 221, 230], "umap": 81, "kokkos_vector": [82, 205], "overcom": [82, 94], "issu": [82, 83, 138, 151, 170, 177, 186, 191, 193, 196, 197, 199, 201, 204, 206, 212, 215, 217], "reli": [82, 177, 196, 199], "heavili": [82, 186, 202], "grant": 82, "mani": [82, 87, 88, 94, 129, 185, 186, 194, 196, 197, 198, 199, 201, 202, 217, 225, 226, 228], "limit": [82, 87, 94, 139, 152, 183, 185, 186, 191, 194, 196, 199, 201, 209, 212, 215, 227], "below": [82, 87, 91, 94, 121, 131, 132, 136, 138, 139, 144, 145, 150, 177, 186, 189, 201, 202, 207, 217, 223], "synopsi": [82, 138], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": 82, "pop_back": 82, "max_siz": 82, "front": [82, 191], "back": [82, 94, 184, 186, 191, 192, 196, 198, 224], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 179, 196], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 94, 127, 129, 199, 207], "buffer": [82, 135, 191, 222], "relat": [83, 186, 191, 202, 222], "dispatch": [83, 85, 94, 143, 144, 145, 146, 147, 152, 157, 158, 159, 191, 193, 196, 211, 221, 226, 230], "task": [83, 85, 184, 196, 198, 218, 230], "common": [83, 86, 87, 89, 129, 135, 137, 139, 147, 169, 170, 175, 186, 187, 188, 191, 193, 197, 198, 199, 202, 222], "mathemat": [83, 89, 138, 139, 199, 217], "style": [83, 134, 186, 202, 216], "port": [83, 198, 201], "hardwar": [83, 135, 159, 184, 186, 191, 192, 194, 196, 197, 198, 217], "idiom": [83, 94], "recogn": [83, 84, 134, 179, 191, 193, 199, 202], "sfina": [83, 84, 139], "macro": [83, 91, 144, 186, 193, 197, 201, 217, 229], "etc": [83, 135, 151, 185, 186, 201], "kokkos_detectionidiom": [84, 205], "extens": [84, 165, 186, 203, 206, 216, 217], "iso": [84, 87, 181, 182, 183, 199, 201], "iec": 84, "ts": [84, 151, 227], "19568": 84, "2017": [84, 215], "draft": [84, 87], "origin": [84, 102, 104, 105, 128, 159, 184, 199, 200, 201, 203, 215, 217, 226], "propos": [84, 181, 182, 183, 199, 206], "void_t": 84, "detector": 84, "exposit": 84, "convien": 84, "metafunct": 84, "leverag": [84, 186, 202], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 139], "true_typ": [84, 139], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 132, 173, 201], "is_detect": 84, "alia": [84, 129, 135, 168, 181, 182, 200, 201, 223], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 94, 121, 182, 185, 191, 193, 194, 197, 199, 200, 202, 214], "is_detected_convert": 84, "To": [84, 94, 127, 128, 135, 144, 169, 170, 186, 187, 191, 194, 195, 197, 200, 201, 202, 204, 207, 214, 217, 220, 228], "is_convert": 84, "later": [84, 129, 185, 188, 195, 197, 199, 201, 208, 228], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": 84, "copy_assign_t": 84, "declval": [84, 200], "Then": [84, 186, 200, 201, 202], "easili": [84, 195, 201, 227, 228], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 135, 176, 201], "diff_t": 84, "declar": [84, 138, 145, 185, 197, 201, 208], "our": [84, 195, 196, 198, 217, 220, 228], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 94, 121, 129, 135, 147, 181, 182, 191, 194, 198, 199, 206], "place": [85, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 128, 129, 135, 146, 147, 191, 192, 193, 195, 197, 198, 199, 215, 217, 222, 228], "nestedpolici": 85, "summari": [85, 215, 217], "setter": [85, 148, 150, 191], "hip": [85, 87, 88, 93, 135, 148, 150, 159, 170, 186, 192, 201, 206, 207, 217], "sycl": [85, 87, 88, 93, 135, 138, 148, 150, 159, 186, 192, 206, 207, 212], "schedul": [85, 87, 148, 150, 152, 191, 227], "through": [85, 94, 144, 145, 146, 148, 150, 151, 184, 186, 188, 191, 194, 195, 196, 197, 199, 200, 201, 203, 204, 217, 219, 222, 228], "steal": [85, 148, 150], "queue": [85, 148, 150, 159, 227], "machin": [85, 148, 150, 186, 194, 198, 199, 202, 211, 215, 217], "backend": [85, 86, 87, 131, 135, 138, 148, 150, 153, 155, 157, 159, 164, 185, 186, 192, 193, 202, 206, 212, 215, 223, 224, 228], "indextyp": [85, 87, 148, 149, 150, 152, 191], "travers": [85, 148, 150], "launchbound": [85, 87, 148, 150], "maxthread": [85, 148, 150], "minblock": [85, 148, 150], "launch": [85, 92, 94, 143, 148, 150, 151, 152, 191, 201, 217, 224, 226, 227], "worktag": [85, 145, 146, 148, 150, 190, 205], "someclass": [85, 148, 150], "detail": [86, 87, 91, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 135, 139, 144, 162, 176, 185, 186, 187, 190, 192, 194, 197, 201, 202, 214, 216, 217], "shutdown": 86, "resourc": [86, 133, 135, 150, 159, 191, 192, 195, 196, 197, 198, 206, 224, 227, 228], "destruct": [86, 87], "thu": [86, 145, 149, 151, 177, 183, 186, 191, 192, 193, 195, 197, 198, 201, 215, 223, 224, 227, 228, 229], "context": [86, 87, 94, 133, 134, 153, 154, 155, 156, 157, 158, 177, 220, 221, 224, 228], "automat": [86, 121, 131, 135, 186, 192, 193, 197, 199, 201, 216, 221, 223], "aid": 86, "mistak": 86, "live": [86, 201], "my_view": [86, 132, 133, 134, 171, 172], "destructor": [86, 132, 133, 134, 151, 201], "switch": [86, 184, 193, 215], "subsequ": [86, 94, 134, 152, 222], "driven": 87, "essenti": [87, 199, 217], "incept": 87, "recent": [87, 215], "readili": 87, "fact": [87, 226], "hasn": 87, "realli": [87, 132, 186, 195, 202], "even": [87, 94, 128, 129, 132, 133, 135, 145, 185, 186, 190, 193, 196, 198, 200, 201, 209, 219, 222, 226, 229], "agre": [87, 214], "merg": [87, 215, 216, 217], "languag": [87, 88, 91, 129, 135, 147, 185, 194, 196, 197, 199, 200, 201, 202, 203, 220], "featur": [87, 88, 129, 135, 147, 165, 185, 186, 191, 193, 197, 199, 201, 202, 204, 207, 214, 215, 217], "consid": [87, 179, 184, 185, 191, 195, 199, 200, 201, 214, 226, 228], "formal": [87, 92, 129, 135, 147, 179, 196], "rapid": [87, 207], "expans": 87, "demand": [87, 223], "lack": [87, 197, 198], "harden": 87, "acut": 87, "ever": [87, 129, 135, 147, 191, 201], "project": [87, 185, 186, 196, 202, 204, 214, 217], "horizon": 87, "resili": [87, 206], "few": [87, 94, 129, 186, 191, 201, 217], "best": [87, 181, 182, 185, 192, 201, 224, 227], "core": [87, 88, 184, 186, 191, 192, 194, 196, 198, 204, 206, 216, 217, 225], "addition": [87, 92, 129, 169, 177, 188, 201], "promot": [87, 129, 135, 137, 209, 217], "plan": [87, 94, 197], "good": [87, 94, 129, 184, 185, 191, 197, 198, 201, 204, 209, 225, 226], "holist": 87, "interact": [87, 160, 186, 214, 223, 226], "experi": [87, 194, 198, 201, 217], "garner": 87, "year": [87, 185, 203, 214, 215], "particip": [87, 200], "executor": 87, "effort": [87, 185, 186, 201, 206, 217], "2011": [87, 196, 197], "sutton": 87, "stroustrup": 87, "guid": [87, 147, 194, 197, 206], "particular": [87, 118, 119, 124, 129, 184, 186, 191, 192, 193, 197, 198, 201, 202, 209, 212, 217, 222, 226], "constraint": [87, 191], "axiom": 87, "philosophi": 87, "focus": 87, "balanc": [87, 94], "flexibl": [87, 129, 193], "eas": 87, "learn": [87, 129, 197], "far": [87, 94, 196, 201, 226], "though": [87, 135, 186, 229], "pure": [87, 193, 194, 228], "veri": [87, 94, 186, 196, 197, 199, 202, 222], "slightli": [87, 193], "By": [87, 186, 191, 196, 197, 198, 199, 201], "minim": [87, 185, 188, 192, 197], "cognit": 87, "perhap": 87, "import": [87, 186, 191, 193, 196, 197, 200, 201, 217, 221, 224], "subsumpt": 87, "hierarchi": [87, 129, 191, 198, 206], "branch": [87, 151, 153, 154, 155, 156, 191, 198, 204, 212, 215, 216, 217], "width": [87, 199, 215], "roughli": [87, 191, 214], "speak": [87, 94, 228], "high": [87, 94, 152, 185, 191, 194, 196, 198, 199, 201, 202, 203], "major": [87, 88, 185, 193, 199, 201, 206, 216, 217], "visibl": [87, 129, 135], "minor": [87, 88, 185], "memorylayout": 87, "taskschedul": [87, 94], "treat": [87, 135, 196, 197, 217], "kokkos_concept": 87, "enumer": [87, 185], "iterationpattern": 87, "question": [87, 194, 209, 214], "friend": [87, 94], "rather": [87, 94, 129, 135, 192, 202], "alik": 87, "extern": [87, 94, 186, 201, 204, 230], "off": [87, 196, 201, 207, 227], "look": [87, 129, 192, 195, 197, 199, 200, 201, 228], "ex": [87, 92, 129], "copyconstruct": 87, "defaultconstruct": 87, "is_integral_v": 87, "scratch_memory_spac": [87, 129, 151, 191], "ostream": [87, 129], "ostr": [87, 129], "in_parallel": [87, 129], "print_configur": [87, 129, 131], "ve": [87, 195, 228], "extrapol": 87, "progress": [87, 196, 198, 214, 215], "eventu": [87, 185], "further": [87, 145, 186, 191, 195, 199, 201, 217, 222, 227, 228], "cannot": [87, 129, 130, 134, 136, 143, 178, 192, 199, 227], "constrain": [87, 198], "known": [87, 138, 196, 200, 206, 215, 222], "decid": [87, 196, 197, 217], "argu": 87, "around": [87, 173, 186, 193, 195, 201, 212, 219, 222, 224, 228, 229], "wherebi": 87, "meet": [87, 92, 129, 149, 151, 169, 176, 214, 216], "definit": [87, 121, 179, 196, 197, 221, 222, 226, 229], "practic": [87, 94, 129, 135, 138, 147, 159, 177, 194, 199, 201, 224, 226], "converg": [87, 194], "relev": [87, 102, 104, 105, 206, 222], "togeth": [87, 197, 198, 222], "site": [87, 217], "artifact": 87, "assess": [87, 214], "intent": [87, 185, 201, 220], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 201], "kokkos_parallel": 87, "technic": [87, 201, 202], "correct": [87, 90, 94, 186, 191, 195, 197, 200, 201, 214, 217, 228], "rvalu": 87, "wouldn": [87, 188], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 151, 191, 197], "implexecutionspaceof": 87, "exclud": [87, 185, 197], "uniquetoken": 87, "add": [87, 121, 123, 144, 179, 184, 185, 186, 189, 191, 193, 196, 199, 201, 202, 219, 226, 227], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "sleep": 87, "wake": 87, "unclear": 87, "concret": [87, 196], "teampolicyintern": [87, 205], "nice": [87, 199], "could": [87, 185, 188, 195, 196, 198, 200, 201, 228], "refactor": 87, "noth": [87, 126, 129, 135, 147, 196, 197, 201], "mind": [87, 201], "close": [87, 191, 197, 199, 204], "semiregular": 87, "todo": [87, 195, 228], "openmptargetspac": 87, "hbwspace": [87, 88, 201], "mem": [87, 181, 183], "dealloc": [87, 125, 126, 127, 128, 135, 177, 193, 200, 201, 225], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 92], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 217], "exec": 87, "think": [87, 94, 132, 201, 219, 228], "achiev": [87, 135, 191, 193, 201, 217, 221], "signific": [87, 136, 201, 224, 226], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 149], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 147, 150, 152], "cours": 87, "execution_polici": [87, 150, 167], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 150, 152], "complic": [87, 197, 201], "pretti": [87, 94, 129], "straightforward": [87, 169, 221, 222], "iteratetil": 87, "seem": [87, 202], "duplic": [87, 199], "kokkos_openmp_parallel": 87, "were": [87, 129, 137, 139, 183, 195, 196, 217, 228], "conceptu": [87, 196, 225], "surfac": 87, "area": [87, 128], "Of": [87, 196, 207], "d": [87, 153, 157, 173, 176, 185, 189, 190, 191, 195, 196, 197, 199, 200, 201, 221, 228], "still": [87, 88, 159, 184, 185, 188, 191, 199, 201, 224], "shortcut": [87, 129, 147], "probabl": [87, 94, 191, 197, 199], "teach": [87, 197], "advanc": [87, 129, 197, 217, 230], "ax": [87, 224], "me": 87, "why": [87, 192, 224], "axi": 87, "extend": [87, 194], "overhead": [87, 94, 143, 197, 199, 201, 221], "describ": [87, 94, 121, 129, 135, 147, 152, 183, 187, 194, 195, 196, 198, 199, 203, 204, 207, 216, 217, 224, 225, 227, 228], "isn": [87, 94, 129, 195, 228], "concern": [87, 194, 196, 222, 226], "simplest": [87, 191, 192, 222], "But": [87, 187, 191, 195, 201, 226], "kokkos_vers": 88, "patch": 88, "10000": [88, 197, 201], "kokkos_enable_debug": [88, 207], "kokkos_enable_debug_bounds_check": [88, 207], "kokkos_enable_debug_dualview_modify_check": [88, 207], "kokkos_enable_deprecated_code_3": 88, "kokkos_enable_deprecation_warn": 88, "warn": [88, 131, 177, 185, 201, 202, 205, 207, 212, 215], "kokkos_enable_hbwspac": 88, "kokkos_enable_memkind": [88, 207], "kokkos_enable_tun": [88, 207], "bind": [88, 192, 206, 207, 220], "tune": [88, 186, 202, 207, 221, 230], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 127, 178, 199, 201, 216, 225], "kokkos_enable_aggressive_vector": [88, 207], "assumpt": [88, 192], "ignor": [88, 94, 191, 192, 199], "aggress": [88, 201, 207], "ifdef": [88, 193], "kokkos_enable_seri": [88, 186, 207], "kokkos_enable_openmp": [88, 186, 207], "kokkos_enable_openmptarget": [88, 207], "kokkos_enable_thread": [88, 186, 207], "kokkos_enable_cuda": [88, 186, 207], "kokkos_enable_hip": [88, 186, 207], "kokkos_enable_hpx": [88, 207], "kokkos_enable_sycl": [88, 186, 207], "kokkos_enable_cuda_constexpr": [88, 207], "kokkos_enable_cuda_lambda": [88, 207], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": [88, 207], "intrins": [88, 121, 136, 181, 182, 187, 193, 199, 201, 207, 220], "kokkos_enable_cuda_relocatable_device_cod": [88, 207], "relocat": [88, 202, 207], "kokkos_enable_cuda_uvm": [88, 207, 218], "kokkos_enable_hip_multiple_kernel_instanti": [88, 207], "instanti": [88, 185, 196, 198, 199, 201, 207], "improv": [88, 185, 194, 197, 198, 207, 212, 214, 221], "kokkos_enable_hip_relocatable_device_cod": [88, 207], "latest": [88, 91, 185, 212], "path": [88, 131, 185, 186, 207, 217, 222], "expos": [88, 129, 190, 191, 198, 221], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 121, 185, 187, 192, 196, 198, 201, 202, 214, 217, 219, 222, 225, 228], "libari": 88, "kokkos_enable_hwloc": [88, 186, 207], "libhwloc": [88, 186], "numa": [88, 192], "kokkos_enable_librt": [88, 207], "link": [88, 91, 177, 186, 202, 206, 217, 221], "posix": 88, "librt": [88, 186, 207], "backward": [88, 134, 211], "memkind": [88, 207], "heap": 88, "kokkos_enable_libdl": [88, 207], "linker": [88, 186, 202], "libdl": [88, 207], "kokkos_enable_libquadmath": 88, "gcc": [88, 186, 202, 208, 212, 215], "quad": 88, "precis": [88, 186, 195, 220, 222, 226, 228], "math": [88, 89, 199, 206, 230], "kokkos_arch_sse42": 88, "sse": 88, "kokkos_arch_armv80": [88, 207], "armv8": [88, 186, 207], "kokkos_arch_armv8_thunderx": [88, 207], "cavium": [88, 217], "thunderx": [88, 186, 217], "kokkos_arch_armv81": [88, 207], "kokkos_arch_armv8_thunderx2": [88, 207], "thunderx2": 88, "kokkos_arch_amd_avx2": 88, "avx2": 88, "zen": [88, 207], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": 88, "avx512": 88, "kokkos_arch_knc": [88, 207], "intel": [88, 186, 191, 199, 207, 212, 215, 217], "knight": [88, 217], "corner": 88, "xeon": [88, 186, 217], "phi": [88, 137, 186], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power7": [88, 207], "ibm": [88, 186, 212, 215], "power7": [88, 186, 207], "kokkos_arch_power8": [88, 207], "power8": [88, 186, 207, 215], "kokkos_arch_power9": [88, 207], "power9": [88, 207], "kokkos_arch_intel_gen": [88, 207], "kokkos_arch_intel_dg1": [88, 207], "iri": [88, 207], "xemax": [88, 207], "kokkos_arch_intel_gen9": [88, 207], "gen9": [88, 207], "kokkos_arch_intel_gen11": [88, 207], "gen11": [88, 207], "kokkos_arch_intel_gen12lp": [88, 207], "gen12lp": [88, 207], "kokkos_arch_intel_xehp": [88, 207], "xe": [88, 207], "hp": [88, 207], "kokkos_arch_intel_pvc": [88, 207], "pont": [88, 207], "vecchio": [88, 207], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 186, 191, 198, 199, 207, 217, 222], "kepler": [88, 186], "kokkos_arch_kepler30": [88, 207], "cc": [88, 186, 207, 220], "kokkos_arch_kepler32": [88, 207], "kokkos_arch_kepler35": [88, 207], "kokkos_arch_kepler37": [88, 207], "kokkos_arch_maxwel": 88, "maxwel": [88, 186], "kokkos_arch_maxwell50": [88, 207], "kokkos_arch_maxwell52": [88, 207], "kokkos_arch_maxwell53": [88, 207], "kokkos_arch_navi": 88, "amd": [88, 207], "navi": 88, "kokkos_arch_navi1030": [88, 207], "v620": [88, 207], "w6800": [88, 207], "gfx1030": [88, 207], "kokkos_arch_pasc": 88, "pascal": 88, "kokkos_arch_pascal60": [88, 207], "kokkos_arch_pascal61": [88, 207], "kokkos_arch_volta": 88, "volta": 88, "kokkos_arch_volta70": [88, 207], "kokkos_arch_volta72": [88, 207], "kokkos_arch_turing75": [88, 207], "ture": 88, "kokkos_arch_amper": 88, "amper": [88, 207], "kokkos_arch_ampere80": [88, 207], "kokkos_arch_ampere86": [88, 207], "kokkos_arch_ada89": [88, 207], "ada": [88, 207], "kokkos_arch_hopp": 88, "hopper": [88, 207], "kokkos_arch_hopper90": [88, 207], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": [88, 207], "kokkos_arch_amd_zen3": 88, "zen3": [88, 207], "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 207], "mi25": [88, 207], "gfx900": [88, 207], "kokkos_arch_vega906": [88, 207], "mi50": [88, 207], "mi60": [88, 207], "gfx906": [88, 207], "kokkos_arch_vega908": [88, 207], "mi100": [88, 207], "gfx908": [88, 207], "kokkos_arch_vega90a": [88, 207], "mi200": [88, 207], "seri": [88, 194, 207, 217], "gfx90a": [88, 207], "kokkos_mathematicalconst": [89, 137, 205], "backport": 89, "sqrt2": [89, 137], "kokkos_mathematicalfunct": [89, 138, 205], "consist": [89, 138, 186, 191, 196, 198, 199, 222], "portabl": [89, 129, 184, 193, 194, 196, 197, 199, 203, 220, 221, 223, 225, 230], "fab": [89, 138], "sqrt": [89, 138, 181, 183, 199, 208], "sin": [89, 137, 138, 181], "kokkos_numerictrait": [89, 139, 205], "ad": [89, 102, 104, 105, 139, 183, 185, 186, 191, 199, 202, 227, 228], "23": [89, 139, 203, 206], "numeric_limit": [89, 139], "kokkos_bitmanipul": [89, 136], "individu": [89, 94, 138, 139, 193, 202, 217, 226], "compos": [90, 222], "team_size_max": [90, 152], "team_size_recommend": [90, 140, 141, 142, 152], "strive": [91, 199], "howev": [91, 94, 129, 159, 191, 193, 194, 195, 196, 197, 198, 199, 201, 209, 212, 217, 221, 228], "deviat": 91, "approach": [91, 94, 184, 194, 196, 197, 199, 201, 226, 230], "section": [91, 186, 191, 193, 195, 196, 197, 201, 207, 215, 217, 228], "usag": [91, 93, 131, 133, 134, 143, 144, 153, 155, 157, 158, 160, 168, 181, 182, 183, 186, 193, 198, 200, 201, 202, 220], "guidanc": [91, 181, 204], "relationship": [92, 94, 159, 191, 201], "entiti": [92, 94, 185, 196], "msp1": 92, "msp2": 92, "v2": [92, 217], "retriev": [92, 94, 150, 188, 227], "v1": [92, 217], "word": [92, 129, 135, 147, 186, 199], "shape": 92, "attribut": [92, 198, 199, 201, 205], "intercessori": 92, "executionspaceconcept": [93, 143, 169], "defaulthostexecutionspac": [93, 166, 192, 193], "hipspac": [93, 201, 205], "hiphostpinnedspac": [93, 201], "hipmanagedspac": 93, "sycldeviceusmspac": 93, "syclhostusmspac": 93, "syclsharedusmspac": 93, "sharedspac": [93, 218], "sharedhostpinnedspac": [93, 223], "memoryspaceconcept": [93, 169], "lightweight": 94, "substanti": 94, "futur": [94, 129, 192, 194, 196, 198, 201, 211, 215, 227], "Not": [94, 192, 201], "too": [94, 143, 201, 212, 228], "small": [94, 134, 135, 197, 227], "inher": 94, "plenti": 94, "scale": [94, 129, 186, 217], "easier": [94, 197, 223, 225], "hierarch": [94, 153, 154, 155, 156, 157, 158, 196, 197, 198, 211, 227, 230], "ordinari": [94, 197], "portion": [94, 199], "haev": 94, "addit": [94, 129, 138, 170, 187, 192, 194, 196, 197, 199, 201, 221, 226, 228], "output": [94, 129, 173, 184, 190, 192, 198, 217, 221], "mytask": 94, "produc": [94, 194, 197, 199, 222, 224], "task_spawn": [94, 227], "host_spawn": 94, "tasksingl": [94, 227], "taskteam": [94, 144, 145, 146], "former": [94, 186, 197, 201, 217], "worker": [94, 145, 227], "spawn": [94, 227], "basicfutur": [94, 227], "when_al": [94, 227], "scheduler_typ": 94, "discuss": [94, 191, 196, 199, 201, 214], "fut": 94, "mytaskfunctor": 94, "readi": [94, 185, 201], "earliest": 94, "fut2": 94, "myothertaskfunctor": 94, "my_funct": [94, 129], "sched": 94, "my_result_typ": 94, "my_task_result": 94, "ff": [94, 215], "better": [94, 186, 191, 201, 202, 224], "never": [94, 129, 185, 186, 199, 201, 202], "share": [94, 151, 184, 186, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 206, 221, 222, 228], "transit": [94, 207], "undefin": [94, 127, 128, 131, 177, 193, 201, 229], "worst": 94, "kind": [94, 196, 197, 200, 217], "bug": [94, 129, 185, 195, 212, 214, 215, 228], "segfault": [94, 202], "hour": [94, 185], "is_nul": 94, "attempt": [94, 196], "poll": 94, "is_readi": [94, 227], "forbidden": 94, "anywher": 94, "abil": [94, 144, 196, 199, 220], "yet": [94, 128, 165, 179, 185, 194, 196, 199, 200, 215], "extrem": [94, 195, 196, 201, 228], "expens": [94, 200], "sledgehamm": 94, "sparingli": 94, "alon": [94, 186], "pend": 94, "decis": [94, 191, 222], "piec": 94, "help": [94, 186, 189, 192, 194, 197, 201, 202, 228], "cost": [94, 184, 194, 200, 201], "tradit": [94, 135], "reus": [94, 191, 226], "successor": 94, "respawn": [94, 227], "future_typ": [94, 227], "got": 94, "redund": [94, 222], "lead": [94, 129, 185, 191, 195, 201, 202, 223, 228], "lazi": 94, "third": [94, 186, 191, 193, 196, 200, 202, 221], "serv": [94, 129], "observ": [94, 143, 192, 228], "effect": [94, 129, 143, 177, 185, 186, 191, 197, 198, 199, 226, 228], "taskprior": 94, "regular": [94, 201], "low": [94, 184, 194, 197, 199, 201], "boolean": [95, 129, 171, 172, 173, 197, 199], "device_id": [96, 130, 131, 166, 192], "num_thread": [96, 130, 131, 164, 192], "critic": [97, 196], "_view": 97, "awar": [97, 191, 196, 201, 203, 221], "bundl": [97, 178], "loos": [97, 169, 179], "behav": [97, 170, 179, 199, 200, 201], "old_val": [99, 101], "ptr_to_valu": [99, 100, 101, 102, 103, 104, 105, 106], "comparison_valu": [99, 100], "was_exchang": 100, "update_valu": [102, 104, 105], "previou": [102, 134, 137, 138, 152, 175, 191, 205, 215], "atomic_fetch_add": [102, 104, 184, 191], "tmp": [102, 191, 221], "atomic_fetch_and": 102, "atomic_fetch_div": 102, "divid": [102, 105, 144, 145, 146, 163, 189, 190, 219, 224], "atomic_fetch_lshift": 102, "atomic_fetch_max": 102, "atomic_fetch_min": 102, "atomic_fetch_mul": 102, "atomic_fetch_mod": 102, "atomic_fetch_or": 102, "atomic_fetch_rshift": 102, "atomic_fetch_sub": [102, 104], "substract": [102, 105], "atomic_fetch_xor": 102, "atomic_add": [104, 184], "atomic_and": 104, "atomic_assign": 104, "atomic_decr": 104, "atomic_incr": [104, 184], "atomic_max": 104, "atomic_min": 104, "atomic_or": 104, "atomic_sub": 104, "subtract": 104, "atomic_add_fetch": 105, "atomic_and_fetch": 105, "atomic_div_fetch": 105, "atomic_lshift_fetch": 105, "atomic_max_fetch": 105, "atomic_min_fetch": 105, "atomic_mul_fetch": 105, "atomic_mod_fetch": 105, "atomic_or_fetch": 105, "atomic_rshift_fetch": 105, "atomic_sub_fetch": 105, "atomic_xor_fetch": 105, "conjunct": [107, 149, 184, 186, 191, 192], "bitwis": [108, 109, 136, 201], "AND": [108, 110, 209], "remove_cv": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "result_view_typ": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 190], "value_": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 190], "local": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 135, 145, 146, 186, 191, 192, 196, 197, 198, 200, 201, 207, 208, 215, 217, 223], "reduction_ident": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 187, 189, 197], "resid": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 135, 198, 223], "customtyp": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123], "OR": [109, 111, 209], "_min": [112, 113, 116, 117], "vallocscalar": [113, 115, 122, 191], "loc": [113, 115, 124, 188], "_max": [113, 114, 115, 116, 117], "minmaxscalar": [116, 122, 191], "min_val": [116, 117, 118, 119, 188], "max_val": [116, 117, 118, 119, 188], "minmaxlocscalar": [117, 122, 191], "min_loc": [117, 118, 188], "max_loc": [117, 118, 188], "minvalu": [118, 119], "maxvalu": [118, 119], "hypothet": 121, "brief": 121, "build": [121, 129, 170, 185, 191, 192, 194, 197, 206, 207, 215, 217, 230], "monoid": 121, "val1": 121, "val2": 121, "ident": [121, 150, 152, 169, 189, 191, 196, 197, 201, 219], "el": 121, "under": [121, 170, 185, 186, 197, 201, 204, 209, 217], "reducesum": 121, "lval": 121, "l": [121, 138, 155, 196, 215], "resultvalu": 124, "resultindex": 124, "shrink": [125, 174, 175], "throw": [126, 127, 128, 152, 193, 201], "runtime_error": 126, "failur": [126, 127, 128, 152, 177, 215], "uniniti": [127, 148, 150, 152, 169, 174, 175, 201], "metadata": 127, "succe": 127, "suitabl": [127, 185, 197, 221], "rawmemoryallocationfailur": [127, 128], "thrown": 127, "memadvis": [127, 128, 177], "tool": [127, 131, 144, 145, 146, 185, 206, 207, 230], "kokkosp": 127, "On": [127, 128, 184, 186, 191, 200, 207, 228], "avoid": [127, 128, 129, 185, 191, 200, 201, 202, 208, 215, 228], "leak": [127, 128, 201], "freed": [128, 191, 201], "new_siz": 128, "invalid": [128, 201], "rare": [129, 135], "offload": 129, "talk": [129, 135, 147, 195, 228], "theoret": [129, 135, 147], "treatment": [129, 135, 147], "disclaim": [129, 135, 147, 209], "term": [129, 135, 147, 196, 201, 204, 209, 226], "anyon": [129, 135, 147, 204], "who": [129, 135, 147, 194, 201, 214, 222, 225], "knew": [129, 135, 147], "confus": [129, 135, 147, 201], "often": [129, 135, 147, 177, 184, 191, 193, 194, 196, 197, 199, 201, 217, 222], "shini": [129, 135, 147], "pramet": 129, "surpris": 129, "answer": [129, 191, 201], "ll": [129, 195, 201, 228], "nowher": 129, "intermedi": [129, 197], "static_assert": [129, 170, 200, 223], "incompat": [129, 186], "prefer": [129, 185, 192, 197, 201, 202, 208, 229], "explicit": [129, 138, 144, 171, 172, 173, 191, 197, 198, 208], "simpli": [129, 186, 191, 193, 195, 199, 202, 220, 221, 222, 226, 228], "mental": 129, "exercis": [129, 217], "translat": [129, 195, 228], "tend": [129, 184, 198], "verbos": 129, "much": [129, 144, 185, 190, 194, 196, 197, 199, 201], "risk": [129, 185], "lose": 129, "caution": [129, 186], "necessarili": [129, 170, 191, 193, 198, 201], "strengthen": 129, "unspecifi": [129, 162, 177, 198], "care": [129, 185, 199], "print": [129, 131, 161, 173, 192, 207], "arraylayout": 129, "recommend": [129, 152, 191, 197, 199, 201, 212, 217], "scratchmemoryspac": 129, "ex2": 129, "ex1": 129, "usabl": [129, 136, 201], "shorthand": [129, 135], "typetrait": [129, 135], "num_numa": [130, 192], "ndevic": [130, 192], "skip_devic": [130, 192], "disable_warn": [130, 131, 192], "favor": [130, 195, 228], "One": [130, 152, 184, 186, 188, 191, 193, 199, 201, 221, 222, 226, 228], "distinguish": [130, 139, 197], "kokkoscor": 131, "set_num_thread": [131, 132, 134], "set_device_id": 131, "set_disable_warn": [131, 134], "initializ": 131, "introduc": [131, 191, 197, 198, 216, 223], "unset": 131, "let": [131, 151, 186, 191, 193, 195, 196, 197, 200, 201, 222, 228], "tabl": [131, 186, 192, 201, 217], "set_parameter_nam": 131, "parameter_typ": 131, "parameter_nam": 131, "has_parameter_nam": 131, "get_parameter_nam": 131, "summar": 131, "id": [131, 164, 166, 191, 192, 193], "minu": 131, "map_device_id_bi": 131, "mpi_rank": 131, "round": [131, 138, 192, 196], "robin": [131, 192], "mpi": [131, 133, 134, 184, 186, 192, 194, 200, 202, 218, 225, 230], "disabl": [131, 186, 197], "messag": [131, 192, 194, 200, 215, 217], "configur": [131, 192, 199, 207, 215, 216, 217, 223], "tune_intern": 131, "autotun": 131, "heurist": 131, "tools_lib": 131, "full": [131, 179, 181, 184, 186, 192, 193, 195, 198, 199, 216, 228], "ld_library_path": 131, "tools_help": 131, "command": [131, 132, 134, 186, 202, 217], "line": [131, 132, 134, 135, 184, 186, 201, 229], "tools_arg": 131, "set_print_configur": 131, "set_map_device_id_bi": [131, 132, 134], "environ": [131, 133, 134, 135, 164, 166, 186, 192, 193, 197, 201, 202, 215, 217], "thats": 132, "correctli": [132, 186, 197, 202], "presenc": [132, 139, 208], "unhandl": 132, "charact": 132, "uncondition": 132, "precondit": 132, "is_initi": [132, 133, 134], "unique_ptr": 132, "make_opt": 132, "nullopt": 132, "regardless": [132, 196], "clean": [133, 215], "is_fin": [133, 134, 146], "detroi": 133, "ill": 133, "mpi_fin": [133, 192], "erron": 134, "pars": [134, 186], "whenev": 134, "seen": [134, 185, 194, 217], "decrement": [134, 177, 184, 201], "implicitli": [134, 169], "multibyt": 134, "mpi_init": [134, 192], "side": [135, 143, 177, 191, 197, 198, 200, 214], "virtual": [135, 201, 211, 218], "xnack": 135, "unit": [135, 186, 191, 193, 194, 196, 214], "movement": 135, "os": 135, "driver": [135, 217, 223], "moment": [135, 186, 201], "preprocessor": [135, 186, 202, 229], "kokkos_has_shared_spac": 135, "has_shared_spac": [135, 223], "correspoind": 135, "stai": 135, "availab": 135, "event": [135, 149, 191, 209, 217], "nevertheless": [135, 191, 196, 201, 228], "kokkos_has_shared_host_pinned_spac": 135, "has_shared_host_pinned_spac": 135, "bit_cast": 136, "byteswap": 136, "has_single_bit": 136, "bit_ceil": 136, "bit_floor": 136, "bit_width": 136, "rotl": 136, "rotr": 136, "countl_zero": 136, "countl_on": 136, "countr_zero": 136, "countr_on": 136, "popcount": 136, "reinterpret": 136, "represent": [136, 199, 201], "counterpart": 136, "_builtin": 136, "suffix": [136, 138], "magic": 136, "log2": [137, 138], "log10": [137, 138, 181], "inv_pi": 137, "inv_sqrtpi": 137, "ln2": 137, "ln10": 137, "sqrt3": 137, "inv_sqrt3": 137, "egamma": 137, "pi_v": 137, "motiv": [138, 194, 199, 225], "borrow": 138, "llvm": 138, "doc": 138, "compilecudawithllvm": 138, "html": [138, 159], "clang": [138, 186, 202, 212, 215, 216, 230], "ok": [138, 177, 201], "everyth": [138, 199, 201], "__device__": [138, 193, 208], "nvcc": [138, 186, 212, 215], "overrid": [138, 186, 202, 228], "sinf": 138, "goal": [138, 191, 193, 194, 217, 221, 225], "cmath": 138, "sqrtf": 138, "sqrtl": 138, "integraltyp": 138, "arithmet": [138, 139], "reader": [138, 185, 186, 194, 196], "cpprefer": 138, "com": [138, 203, 206, 214, 215, 216], "fmod": 138, "remaind": 138, "remquo": 138, "fma": [138, 181], "fmax": 138, "fmin": 138, "fdim": 138, "nan": 138, "exp": [138, 181], "exp2": [138, 181], "expm1": 138, "log": [138, 181, 215], "log1p": 138, "exponenti": 138, "pow": [138, 181], "cbrt": [138, 181], "hypot": [138, 181], "co": [138, 181, 185], "tan": [138, 181], "asin": [138, 181], "aco": [138, 181], "atan": [138, 181], "atan2": [138, 181], "trigonometr": 138, "sinh": [138, 181], "cosh": [138, 181], "tanh": [138, 181], "asinh": [138, 181], "acosh": [138, 181], "atanh": [138, 181], "hyperbol": 138, "erf": [138, 181], "erfc": [138, 181], "tgamma": [138, 181], "lgamma": [138, 181], "gamma": 138, "ceil": 138, "floor": 138, "trunc": 138, "lround": 138, "llround": 138, "nearbyint": 138, "rint": 138, "lrint": 138, "llrint": 138, "frexp": 138, "ldexp": 138, "modf": 138, "scalbn": 138, "scalbln": 138, "ilog": 138, "logb": 138, "nextaft": 138, "nexttoward": 138, "copysign": [138, 181], "fpclassifi": 138, "isfinit": 138, "isinf": 138, "isnan": 138, "isnorm": 138, "signbit": 138, "isgreat": 138, "isgreaterequ": 138, "isless": 138, "islessequ": 138, "islessgreat": 138, "isunord": 138, "classif": 138, "open": [138, 148, 150, 152, 193, 204, 206, 214, 217], "4767": 138, "feel": [138, 203], "keep": [138, 200, 201, 225], "track": [138, 206, 214], "bewar": 138, "unqualifi": [138, 208], "qualif": [138, 208], "p1841": 139, "break": [139, 177, 185, 195, 202, 228], "monolith": 139, "apart": [139, 184, 185, 201], "denot": [139, 152, 177], "infin": 139, "finite_min": 139, "finite_max": 139, "epsilon": 139, "round_error": 139, "norm_min": 139, "denorm_min": 139, "reciprocal_overflow_threshold": 139, "quiet_nan": 139, "signaling_nan": 139, "characterist": [139, 196, 198, 201, 217, 227], "digit": 139, "digits10": 139, "max_digits10": 139, "radix": 139, "min_expon": 139, "min_exponent10": 139, "max_expon": 139, "max_exponent10": 139, "finite_min_v": 139, "floatingpoint": 139, "norm_min_v": 139, "finite_max_v": 139, "epsilon_v": 139, "round_error_v": 139, "infinity_v": 139, "quiet_nan_v": 139, "signaling_nan_v": 139, "denorm_min_v": 139, "digits_v": 139, "digits10_v": 139, "max_digits10_v": 139, "radix_v": 139, "min_exponent_v": 139, "min_exponent10_v": 139, "max_exponent_v": 139, "max_exponent10_v": 139, "absenc": 139, "has_infin": 139, "enable_if_t": 139, "legacy_std_numeric_limits_infin": 139, "kokkos_execpolici": [140, 141, 142], "policytyp": [140, 141, 142], "recommended_team_s": [140, 141, 142], "outstand": [143, 170, 196], "exec1": 143, "exec2": 143, "stuff": [143, 199], "touch": [143, 201], "wait": [143, 151, 159, 191, 197, 227], "finish": [143, 144, 170, 184, 197, 201], "asynchron": [144, 145, 170, 196, 201, 224, 230], "calle": 144, "execpolici": [144, 145, 146], "functortyp": [144, 145, 146, 152], "hook": [144, 145, 146, 192], "integertyp": [144, 145, 146], "work_tag": [144, 145, 146, 150, 152], "iN": [144, 145], "captur": [144, 191, 197, 201, 220, 226], "loop1": [144, 145, 146], "greet": 144, "taga": 144, "implicit": [144, 149, 154, 156, 158, 177, 191, 197, 220, 224], "tagb": 144, "thread_rank": 144, "loop2": [144, 145], "deduc": [145, 168, 200, 228], "reducerargu": 145, "reducerargumentnonconst": 145, "fullfil": 145, "handletyp": [145, 146], "reducervaluetyp": 145, "value_count": [145, 197], "length": [145, 148, 149, 152, 153, 154, 155, 156, 157, 158, 174, 175, 177, 188, 193, 201, 225], "overwritten": [145, 146, 151, 201], "neutral": [145, 146], "lsum": [145, 149, 153, 154, 155, 156, 157, 158, 191], "lf": [145, 188], "lmin": [145, 188], "tagmax": 145, "tagmin": 145, "lmax": 145, "team_rank": [145, 151, 191, 193], "post": [146, 226], "returntyp": 146, "return_valu": 146, "postfix_sum": 146, "prefix_sum": 146, "partial_sum": 146, "li": 146, "domin": [147, 194], "elsewher": 147, "parallel_pattern": 147, "hand": [147, 184, 191, 199, 207, 228], "wavi": 147, "beginn": 147, "tile": [148, 201, 221], "interv": [148, 150, 152], "outer": [148, 191, 201, 221], "inner": [148, 191, 201], "ot": 148, "IT": 148, "tt": 148, "policy_1": [148, 150, 152, 191], "policy_2": [148, 150, 152, 191], "t0": 148, "t1": [148, 160, 163], "t2": [148, 160, 163], "teammembertyp": [149, 154, 156, 158], "threadvectorrangeboundariesstruct": 149, "threadsinglestruct": 149, "vectorsinglestruct": 149, "team_barri": [149, 151, 153, 154, 155, 156, 157, 158, 191], "encount": [149, 173, 208, 227], "thread_sum": 149, "team_sum": [149, 154, 156, 158, 191], "a_rowsum": [149, 153, 154, 155, 156, 158], "inherit": [150, 170, 217], "policytrait": 150, "schedule_typ": [150, 152], "iteration_pattern": [150, 152], "launch_bound": [150, 152], "work_spac": 150, "work_begin": 150, "work_end": 150, "discret": [150, 188, 221], "chunk_size_": 150, "init_arg": 150, "chunksiz": 150, "workgroup": 150, "policy_3": [150, 152, 191], "policy_4": [150, 152], "policy_6": 150, "policy_7": 150, "teamtask": 151, "subject": [151, 165, 185, 201], "leagu": [151, 152, 191, 198, 227], "league_s": [151, 152, 191], "workitem": 151, "team_shmem": [151, 191], "team_scratch": [151, 191], "thread_scratch": 151, "lexic": [151, 185], "arriv": [151, 191], "team_broadcast": 151, "source_team_rank": 151, "var": 151, "broadcast": [151, 191], "reducertyp": 151, "team_reduc": 151, "accross": [151, 199], "team_scan": 151, "teampolcii": 151, "policy_typ": 151, "set_scratch_s": [151, 152, 191], "4096": 151, "tid": 151, "lid": 151, "scratch_memory_typ": 151, "vector_length": [152, 205, 225], "auto_t": 152, "lazili": 152, "perteamvalu": 152, "per_team": 152, "perthreadvalu": 152, "per_thread": 152, "closest": 152, "bandwidth": [152, 191, 198, 199, 201], "twice": [152, 201], "overwrit": [152, 186, 197], "scratch_size_max": 152, "maxim": [152, 193], "scratch_siz": 152, "team_size_": 152, "team_scratch_s": 152, "thread_scratch_s": 152, "policy_5": 152, "extent1": [153, 155, 157], "extent2": [153, 155, 157], "extentn": [153, 155, 157], "extent_i": [153, 155, 157], "leaguerank": [153, 155, 157], "teamsum": [153, 155, 157], "threadsum": [153, 157, 158], "leaguesum": [153, 155], "itype1": [154, 156, 158], "itype2": [154, 156, 158], "teamtyp": 155, "vectorsum": [155, 157], "tsum": 158, "weight": 159, "fraction": 159, "is_arithmetic_v": 159, "n_partit": 159, "discreet": 159, "3rd": 159, "stream": [159, 170, 198, 201, 230], "otherparam": 159, "param": 159, "f1": [159, 227], "f2": [159, 227], "functor1": 159, "functor2": 159, "f3": 159, "functor3": 159, "kokkos_pair": [160, 205], "fulli": [160, 222, 228], "std_pair": 160, "int_float": 160, "converted_std_pair": 160, "converted_kokkos_pair": 160, "to_std_pair": 160, "first_typ": 160, "second_typ": 160, "kokkos_defaulted_funct": [160, 228], "kokkos_forceinline_funct": [160, 189], "wise": [160, 171, 172, 173], "whose": [160, 185, 197, 200, 201, 221, 225], "msg": 161, "imag": 163, "real": [163, 220], "imaginari": 163, "im": 163, "convers": [163, 177, 193, 199, 220, 226], "realtyp": 163, "nodiscard": [164, 166], "anounc": 165, "measur": [167, 196], "time1": 167, "time2": 167, "impl_detail": [168, 176], "subset": [168, 176, 183, 184, 186, 200, 217], "subviewhold": 168, "deal": [169, 195, 200, 228, 229, 230], "host_mirror": 169, "a_view": 169, "host_mirror_view": 169, "host_mirror_view_spac": 169, "withoutiniti": [169, 174, 175, 178, 201, 205], "implmirrortyp": 169, "viewctorarg": [169, 174, 175], "conduct": 169, "circumst": 170, "viewdest": 170, "viewsrc": [170, 177], "copy_spac": 170, "submit": [170, 191, 217], "cudamemcpyasync": 170, "d_a": [170, 193], "d_a_2": 170, "d_a_5": 170, "h_a": [170, 193, 224], "h_a_2": 170, "d_a_2_5": 170, "deviceview": 170, "temporari": [170, 188, 198, 201], "h_view_tmp": 170, "kokkos_layout": [171, 172, 173], "lai": [171, 172, 173], "convent": [171, 172, 198, 201], "signifi": [171, 172, 173], "is_extent_construct": [171, 172, 173], "full_mesh": 173, "mesh": [173, 219], "mesh_subcompon": 173, "z": [173, 181, 199], "frequent": 173, "noncontigu": [173, 201], "array_layout_max_rank": 173, "s0": 173, "s4": 173, "s5": 173, "s6": 173, "s7": 173, "order_dimens": 173, "itypeord": 173, "itypedimen": 173, "dimen": 173, "3d": [173, 193, 220], "grow": [174, 175, 194], "subext": 175, "191": 176, "arg_r": 176, "remove_const_t": [176, 200], "assert": [176, 199], "s3415": 176, "star": 177, "bracket": 177, "2d": [177, 188, 193, 220], "5d": 177, "Their": [177, 225], "integral_const": [177, 181, 182], "nullari": 177, "encourag": [177, 186, 191, 202, 204], "akin": [177, 221], "_dyman": 177, "yield": [177, 229], "sign": [177, 192, 201], "msvc": [177, 186, 212], "i7": 177, "is_assign": 177, "assign_data": 177, "arg_data": 177, "anywai": [177, 193], "viewdst": 177, "dynamic_rank": 177, "a1": [177, 201, 227], "a2": [177, 227], "a3": [177, 227], "a4": 177, "a5": 177, "a6": 177, "a7": 177, "a8": 177, "a9": 177, "a10": 177, "a11": 177, "a12": 177, "a13": 177, "kokkos_view": 178, "viewstr": 178, "view_wrap": 178, "pointer_to_wrapping_memori": 178, "bypass": 178, "allowpad": 178, "impl_defin": 178, "notabl": 179, "simd_mask": [180, 181, 183, 199], "where_express": 180, "kokkos_simd": [181, 182, 183, 199], "abi": [181, 182, 183, 199], "simd_abi": [181, 182], "fallback": [181, 182], "nativ": [181, 182, 201], "extract": [181, 182, 193, 221], "mask_typ": [181, 182, 199], "abi_typ": [181, 182], "element_aligned_tag": [181, 183, 199], "copy_from": [181, 183, 199], "copy_to": [181, 183, 199], "lh": [181, 182], "mag": 181, "sgn": 181, "native_simd": [181, 183, 199], "simd_typ": [181, 182, 183, 199], "zu": [181, 228], "simd": [182, 183, 206, 211, 230], "iff": 182, "native_simd_mask": [182, 199], "regist": [183, 184, 191, 199], "basi": [183, 186, 221], "const_where_express": 183, "scatter_to": 183, "gather_from": 183, "safer": 183, "domain": [183, 203], "chapter": [184, 186, 191, 193, 196, 197, 198, 200, 201, 217], "understand": [184, 186, 193, 195, 196, 200, 201, 228], "resolv": 184, "histogram": 184, "create_histogram": 184, "try": [184, 192, 196, 201, 202, 204], "lost": 184, "race": [184, 193, 196, 219], "situat": [184, 187, 196, 199, 226], "particl": [184, 225, 226], "neighbour": 184, "forc": [184, 186, 191, 196, 198, 199, 226], "compute_forc": 184, "forceloop": 184, "neighbor": [184, 226], "particle_id": 184, "neighbour_id": 184, "some_contribut": 184, "colour": 184, "ii": [184, 193, 220], "iii": 184, "disadvantag": 184, "transfer": [184, 201], "fall": [184, 191, 194, 201, 216, 227], "uninterrupt": 184, "cycl": [184, 186, 214, 217], "hinder": 184, "throughput": [184, 194], "createhistogram": 184, "scheme": 184, "find_indici": 184, "findindici": 184, "div": 184, "lshift": 184, "mod": 184, "mul": 184, "rshift": 184, "sub": [184, 200], "xor": 184, "histogram_atom": 184, "transpar": 184, "clever": 185, "constitut": [185, 191, 217], "tension": 185, "freedom": 185, "frustrat": [185, 199], "pain": 185, "deliber": 185, "accident": 185, "breakag": 185, "unless": [185, 186, 197, 199, 201, 229], "kokkos_": [185, 207], "chanc": 185, "inadvert": 185, "broken": 185, "kokkos_impl_": 185, "notic": [185, 209, 222, 223, 228], "period": 185, "hous": 185, "prime": 185, "incomplet": 185, "newer": [185, 186, 212], "particularli": [185, 221], "problemat": [185, 229], "obei": 185, "interfer": [185, 196], "collison": 185, "prefac": 185, "myproject_": 185, "disambigu": 185, "cap": 185, "usual": [185, 186, 193, 196, 197, 201, 215], "syntact": 185, "revis": 185, "behind": [185, 199, 220, 224], "publish": 185, "drive": [185, 192, 199], "advantag": [185, 199, 224, 226], "workaround": [185, 215], "older": 185, "recompil": 185, "against": [185, 186, 191, 202, 204, 215, 216, 229], "occasion": [185, 212], "overal": [185, 201, 217, 224], "migratori": 185, "evolutionari": 185, "ideal": 185, "wrong": [185, 200, 201], "wast": [185, 201], "continu": [185, 186, 193, 194, 202, 217, 222], "subdirectori": [185, 186], "union": 185, "fashion": [185, 200], "sole": [185, 194], "invok": [185, 196, 201, 207], "explain": [186, 191, 196, 201], "embed": [186, 194], "mix": [186, 193, 196, 201, 202, 212], "advic": 186, "mainli": [186, 201], "directori": [186, 215, 217], "protect": [186, 191, 193, 194, 196, 199, 229], "prevent": [186, 191, 193, 201, 219], "kokkoscore_config": 186, "h": [186, 203, 218, 224], "mention": [186, 217], "compliant": [186, 228], "date": [186, 215], "nightli": [186, 217], "readm": [186, 215, 217], "github": [186, 195, 204, 206, 214, 215, 216, 228], "repositori": [186, 215, 216], "At": [186, 192, 195, 197, 199, 201, 217, 228], "88": [186, 212], "nvc": [186, 212], "rocm": [186, 212, 228], "xl": [186, 212, 215], "fujitsu": [186, 212], "arm": [186, 212], "linkag": [186, 212], "affect": [186, 201, 212], "fopenmp": 186, "hwloc": [186, 192, 207, 217], "As": [186, 187, 191, 194, 196, 197, 199, 202, 217, 222, 228], "robust": [186, 202], "strongli": [186, 201, 202], "cmakelist": [186, 202], "txt": [186, 202], "find_packag": [186, 202, 207], "target_link_librari": [186, 202], "mytarget": [186, 202], "processor": [186, 191, 194, 196, 198, 217], "dkokkos_root": [186, 202], "lib64": 186, "especi": [186, 196, 197, 199, 214, 217, 223], "nvcc_wrapper": 186, "dcmake_cxx_compil": [186, 202], "bin": 186, "cmake_cxx_flag": 186, "propag": [186, 202], "illustr": [186, 191, 201, 202, 220], "toolchain": 186, "add_subdirectori": [186, 202], "dir": [186, 207], "include_directori": 186, "kokkos_include_dirs_ret": 186, "arch": 186, "mkdir": [186, 215], "cd": [186, 215], "srcdir": [186, 202], "dcmake_install_prefix": [186, 202], "my_install_fold": 186, "dkokkos_enable_openmp": [186, 202], "parti": [186, 193, 196, 202], "tpl": [186, 202], "altern": [186, 193, 199, 202, 207, 217], "download": [186, 202, 217], "env": [186, 202], "folder": [186, 202], "setup": [186, 202, 217, 224], "sh": [186, 202, 217], "variant": [186, 197, 201, 202], "deactiv": [186, 202], "chosen": [186, 202], "exact": [186, 202], "info": [186, 202, 206, 207], "hash": [186, 201, 202], "human": [186, 202], "readabl": [186, 199, 202], "spec": [186, 202], "dii": 186, "wish": [186, 192], "downstream": [186, 202], "almost": [186, 194, 199, 219], "myproject": 186, "myvers": 186, "idiosyncrasi": 186, "annoi": 186, "dspack_workaround": 186, "spack_workaround": 186, "spack_cxx": 186, "cmake_cxx_compil": 186, "cxx": [186, 220], "endif": [186, 193], "technolog": [186, 194, 209], "orient": [186, 226], "softwar": [186, 194, 199, 209], "framework": [186, 196, 203], "solut": [186, 194, 195, 199, 209, 217, 221, 228], "larg": [186, 199, 201, 202, 207, 221, 227], "multiphys": 186, "scientif": [186, 194, 201], "problem": [186, 193, 194, 214, 217, 223], "organ": [186, 207, 214, 226], "stand": 186, "trilinos_enable_kokko": 186, "tpetra": 186, "infer": [186, 200], "trilinos_enable_openmp": 186, "ON": [186, 202, 207, 209], "autogener": 186, "cmake_c_compil": 186, "cmake_fortran_compil": 186, "kokkos_arch_": 186, "archcod": 186, "kokkos_arch_hsw": [186, 207], "haswel": [186, 217], "uvm": [186, 193, 195, 198, 201, 222, 228], "export": 186, "cuda_launch_block": [186, 202], "cuda_managed_force_device_alloc": [186, 202], "aris": [186, 209], "stabil": 186, "symbol": 186, "ln": 186, "kokkos_source_dir_overrid": 186, "kokkoskernel": 186, "kokkoskernels_source_dir_overrid": 186, "script": [186, 202, 215, 216], "ompi_cxx": 186, "openmpi": 186, "digest": 186, "matter": [186, 196], "meta": 186, "kokkos_link_depend": 186, "kokkos_cpp_depend": 186, "kokkos_cppflag": 186, "kokkos_cxxflag": 186, "kokkos_ldflag": 186, "kokkos_lib": 186, "tutori": [186, 194, 206], "absolut": 186, "shell": [186, 202, 217], "kokkos_path": [186, 215], "IN": [186, 209], "root": [186, 199, 207], "cuda_path": 186, "toolkit": [186, 215], "kokkos_devic": 186, "kokkos_arch": [186, 199], "knl": [186, 207, 215], "knc": [186, 207], "snb": [186, 207], "hsw": [186, 207], "bdw": [186, 207], "kepler30": [186, 207], "kepler35": [186, 207], "kepler37": [186, 207], "maxwell50": [186, 207], "pascal60": [186, 207], "pascal61": [186, 207], "armv81": [186, 207], "bgq": [186, 207], "kokkos_use_tpl": 186, "experimental_memkind": 186, "kokkos_opt": 186, "aggressive_vector": 186, "kokkos_cuda_opt": [186, 197], "force_uvm": 186, "use_ldg": 186, "rdc": [186, 207], "enable_lambda": [186, 197], "hwloc_path": 186, "ye": 186, "kokkos_cxx_standard": 186, "lib": 186, "cxxflag": [186, 217], "emb": 186, "metaprogram": [186, 201], "shortcom": 186, "prepend": 186, "xcompil": 186, "analyz": [186, 217], "ccbin": 186, "edit": [186, 196, 215, 217], "nvcc_wrapper_default_compil": 186, "peopl": [186, 195, 228], "modul": [186, 198, 215, 217, 220, 230], "icpc": 186, "pgc": 186, "attach": [186, 192, 213, 217, 227], "degrad": 186, "accommod": 187, "click": 187, "head": [187, 227], "summat": 188, "parabl": 188, "minreduc": 188, "min_reduc": 188, "minloc_typ": 188, "minlocreduc": 188, "lminloc": 188, "minloc_reduc": 188, "reducer_typ": 188, "team_typ": 188, "team_minmaxloc": 188, "row_minmaxloc": 188, "thread_minmaxloc": 188, "gui": [188, 197, 230], "hurt": 188, "team_minmax": 188, "fulfil": [189, 190], "resolut": [189, 214, 226], "the_arrai": 189, "tr": [189, 190], "upd": [189, 190], "ndx": [189, 190], "myarrai": 190, "summyarrai": 190, "references_scalar": 190, "arraysumresult": 190, "exploit": [191, 221], "syntax": [191, 197, 200, 201, 207], "parallel_": [191, 198, 201, 205], "node": [191, 192, 194, 196, 198, 206, 217, 218, 227], "modern": [191, 202], "character": [191, 198], "higher": [191, 194], "orthogon": [191, 196], "heterogen": [191, 192, 198, 217, 225], "cluster": [191, 222], "multicor": [191, 194, 196, 198], "hyper": 191, "instruct": [191, 199], "socket": [191, 202], "network": [191, 217], "llc": [191, 209], "l1": 191, "l2": 191, "sm": 191, "warp": [191, 193, 201], "wave": 191, "collabor": [191, 194], "predefin": 191, "adapt": [191, 195, 198, 228], "suggest": [191, 217], "tightli": [191, 221, 230], "gather": 191, "choic": [191, 193, 196, 201, 202], "sometim": [191, 201, 202, 214, 215], "flat": [191, 227], "grid": [191, 193, 200], "inter": [191, 196], "guess": 191, "n_workset": 191, "choos": [191, 192, 197, 198, 201], "sometag": 191, "action": [191, 214, 217], "team_memb": [191, 227], "coordin": 191, "everyon": 191, "consum": 191, "indirect": [191, 209], "workset": 191, "lifetim": 191, "recycl": 191, "cell": [191, 221], "team_shmem_s": 191, "double_s": 191, "team_shared_a": 191, "get_shmem": 191, "team_shared_b": 191, "160": 191, "kilobyt": 191, "gigabyt": 191, "mostli": [191, 193], "adjust": 191, "raw": [191, 197, 205], "shared_int_2d": 191, "shared_s": 191, "shmem_siz": 191, "layer": [191, 193, 194, 199, 220], "teamthreadloop": 191, "threadvectorloop": 191, "consciou": 191, "difficult": [191, 199, 221], "claus": [191, 197, 204, 209, 226], "catch": [191, 201], "violat": [191, 197, 201, 228], "loop_count": 191, "emploi": [191, 194, 196], "prepar": [191, 215], "stage": [191, 216], "innermost": 191, "compris": [191, 196], "workset_s": 191, "vectoriz": 191, "decor": 191, "pragma": [191, 193, 197], "ivdep": 191, "repetit": [191, 199], "kokkko": 191, "bodi": [191, 201, 212, 227], "shared_arrai": 191, "somefunct": [191, 193], "global_arrai": 191, "my_offset": 191, "inner_lsum": 191, "inner_": 191, "subpackag": [192, 201], "alphabet": [192, 206], "interpret": 192, "primarili": [192, 214], "num": [192, 217], "job": [192, 217], "workstat": 192, "screen": 192, "promis": [192, 196, 197, 198], "conflict": [192, 201], "field": [192, 194, 195, 215, 221, 225, 228], "shut": 192, "down": [192, 195, 223, 228], "exit": 192, "atexit": 192, "mpi_comm_self": 192, "adopt": [193, 198], "facilit": 193, "lift": 193, "inde": [193, 201, 226], "cumbersom": 193, "enter": [193, 194, 201, 227], "__host__": [193, 208], "__cuda_arch__": 193, "blockidx": 193, "threadidx": 193, "blockdim": 193, "omp_set_num_thread": 193, "bookkeep": 193, "ask": [193, 196, 198, 201], "princip": 193, "insur": 193, "app": 193, "placement": [193, 195, 228], "150": 193, "2d_arrai": 193, "200": [193, 201], "scenario": [193, 198, 199], "receiv": [193, 217], "straight": 193, "mykokkosfunct": 193, "host_spac": 193, "t_1d_device_view": 193, "t_2d_device_view": 193, "d_b": 193, "h_b": 193, "t_team": 193, "t_1d_view": 193, "t_3d_view": 193, "had": [193, 226], "whatev": 193, "a_old": 193, "unfortun": [193, 226, 228], "leav": [193, 201, 224], "unrestrict": 193, "push": [193, 212, 215], "bring": [193, 197, 220], "massiv": 193, "penalti": [193, 201], "1000": [193, 197, 201], "uneven": 193, "polymorph": [193, 198, 203], "bla": [193, 201, 230], "matric": [193, 201], "format": [193, 201, 216], "dot": 193, "cubla": 193, "kokkos_have_cuda": 193, "call_cublas_dot": 193, "ptr_on_devic": 193, "extent_0": [193, 201], "cbla": 193, "call_cblas_dot": 193, "hpc": [194, 206, 226], "verg": 194, "era": [194, 203], "angl": 194, "rate": 194, "flop": 194, "poor": 194, "workload": 194, "challeng": 194, "energi": 194, "mid": 194, "1990": [194, 197], "enjoi": 194, "seemingli": 194, "homogen": [194, 196, 217, 225], "decad": 194, "deriv": [194, 195, 209, 228], "commun": [194, 200, 214, 222, 224], "realiz": 194, "review": [194, 217], "broad": 194, "latenc": [194, 196, 201], "medium": 194, "graphic": [194, 196], "gp": 194, "toler": 194, "degre": [194, 198], "divers": 194, "interest": [194, 199], "heritag": 194, "offer": 194, "guidelin": [194, 208], "todai": [194, 196], "cilk": 194, "tbb": 194, "linux": 194, "contemporari": [194, 196], "openacc": 194, "opencl": 194, "Such": [194, 220, 221], "varieti": [194, 217, 225], "pose": 194, "reminisc": 194, "becam": 194, "across": [194, 196, 198, 199, 206], "invest": [194, 201], "seek": 194, "isol": 194, "fluctuat": 194, "coverag": 194, "supplementari": 194, "gradual": 194, "odditi": [195, 228], "face": [195, 200, 228], "subtl": [195, 228], "classwithvirtualfunct": [195, 228], "somebas": [195, 228], "virtualfunct": [195, 228], "hostclassinst": [195, 228], "deviceclassinst": [195, 228], "cudamalloc": [195, 228], "cudamemcpi": [195, 228], "cudamemcpyhosttodevic": [195, 228], "devicekernel": [195, 228], "somecudapolici": [195, 228], "glanc": [195, 228], "fine": [195, 201, 228], "crash": [195, 228], "nomin": [195, 228], "vpointer": [195, 228], "vtabl": [195, 228], "among": [195, 217, 228], "okai": [195, 228], "rememb": [195, 197, 201, 217, 228], "amongst": [195, 228], "hidden": [195, 201, 228], "derefer": [195, 228], "credit": [195, 228], "pablo": [195, 228], "aria": [195, 228], "intro": [195, 228, 230], "faithfulli": [195, 228], "merrili": [195, 228], "pseudocod": [195, 228], "hostinst": [195, 228], "deviceinst": [195, 228], "deivc": [195, 228], "techniqu": [195, 228], "ugli": [195, 228], "repo": [195, 206, 228], "setafield": [195, 228], "somehostvalu": [195, 228], "naiv": [195, 199, 228], "wit": [195, 228], "said": [195, 200, 228], "solv": 195, "educ": [195, 228], "slack": [195, 206, 214, 228], "aspect": [196, 198, 199, 217], "programm": [196, 197, 199, 201, 222], "distinct": 196, "figur": [196, 198], "exascal": [196, 203], "consult": [196, 201], "ang": 196, "elect": 196, "show": [196, 197, 198, 201, 215], "die": [196, 198], "acceler": [196, 217, 224, 226], "reachabl": 196, "et": 196, "al": [196, 203], "proxi": 196, "sandia": [196, 209, 217], "nation": [196, 209], "laboratori": 196, "lawrenc": 196, "berkelei": 196, "consider": 196, "finit": [196, 219, 221], "packag": [196, 203, 215, 221], "slower": [196, 201], "dram": 196, "volatil": [196, 198, 201, 205], "routin": [196, 220, 221], "collis": 196, "gain": 196, "topic": [196, 197], "coher": [196, 201], "hennessi": 196, "paterson": 196, "weak": 196, "therebi": 196, "fifth": [196, 200], "quantit": 196, "morgan": 196, "kaufmann": 196, "tempt": 196, "author": [196, 203], "background": 196, "scientist": 196, "stick": 196, "proof": 196, "forbid": [196, 201], "implic": 196, "filesystem": 196, "overlap": [196, 218], "reproduc": [196, 209, 214], "earli": 196, "awai": [196, 199, 200], "wonder": 196, "great": 196, "unnecessari": [197, 201], "harmless": 197, "anonym": 197, "suppli": 197, "outermost": 197, "turn": [197, 199, 201], "surround": 197, "stack": [197, 201], "secondli": 197, "circumvent": 197, "harder": 197, "interoper": [197, 199, 211, 220, 230], "omp": [197, 217], "prior": [197, 201, 202, 209, 214, 220, 224], "faster": 197, "trip": 197, "fewer": 197, "encapsul": [197, 198, 200], "semir": 197, "maxplu": 197, "x_": 197, "inf": 197, "columnsum": 197, "Be": 197, "convinc": 197, "numrow": 197, "numcol": 197, "cs": 197, "henc": 197, "sequenti": [197, 201, 221], "blelloch": 197, "book": 197, "hi": [197, 214], "phd": 197, "dissert": [197, 199], "val_i": 197, "mit": 197, "press": 197, "necess": 197, "unus": [197, 226], "differenti": 197, "bartag": 197, "rabtag": 197, "foobar": 197, "formul": 198, "vari": [198, 201], "hybrid": 198, "pim": 198, "principl": [198, 201], "remot": [198, 206, 217, 230], "send": 198, "undetermin": 198, "prescript": 198, "primit": 198, "spin": 198, "dead": 198, "persist": 198, "diverg": 198, "inspir": 198, "vocabulari": [198, 217], "comfort": 198, "reflect": [198, 201], "rewrit": 198, "unoptim": 198, "optimis": 198, "histori": [199, 217], "struggl": 199, "blog": 199, "insight": 199, "drawback": [199, 226], "quot": 199, "stanford": 199, "tim": 199, "folei": 199, "heart": 199, "black": 199, "box": 199, "matthia": 199, "kretz": 199, "deliv": 199, "vendor": [199, 230], "fairli": 199, "pictur": 199, "clearli": 199, "odd": 199, "quirk": 199, "tag_typ": 199, "sx": 199, "sy": 199, "sz": 199, "sr": 199, "squar": 199, "emit": [199, 200], "4x": 199, "speedup": [199, 224], "skip": [199, 201], "troublesom": 199, "pitfal": [199, 201], "evenli": 199, "divis": 199, "cleaner": 199, "wide": [199, 201, 217], "reach": [199, 201], "throughout": 199, "slight": 199, "quadratic_formula": 199, "x1": 199, "x2": 199, "discrimin": 199, "sqrt_discrimin": 199, "classic": [199, 212], "familiar": [199, 201], "quadrat": 199, "formula": 199, "liter": 199, "mimic": 199, "roadmap": 199, "regard": 199, "very_expensive_funct": 199, "statement": 199, "spend": [199, 201], "lot": [199, 201, 215], "pick": [200, 201], "notat": 200, "vice": 200, "versa": 200, "cross": 200, "plane": 200, "cube": 200, "n_0": 200, "n_1": 200, "n_": 200, "a_0": 200, "a_1": 200, "a_": 200, "a_j": 200, "n_j": 200, "handi": 200, "boundari": 200, "matlab": 200, "python": [200, 206, 215, 217, 230], "colon": 200, "fourth": 200, "elabor": 200, "a_sub": 200, "won": [200, 201], "cheaper": 200, "keyword": [200, 205, 206], "easiest": [200, 202], "dens": [200, 206, 230], "inconveni": 200, "my_view_typ": 200, "my_subview_typ": 200, "my_subview_type_deduc": 200, "fast": [201, 215], "intim": 201, "factor": 201, "coder": 201, "tie": 201, "hard": 201, "evolv": 201, "reliev": 201, "burden": 201, "ty": 201, "expert": 201, "easi": [201, 202], "ellips": 201, "asterisk": 201, "typecast": 201, "a_ptr": 201, "malloc": 201, "a0": 201, "arbitrarili": 201, "unprotect": 201, "badli": 201, "therefor": [201, 229], "advis": [201, 209], "deconstructor": 201, "disallow": 201, "indirectli": 201, "novic": 201, "THE": [201, 209, 215], "FOR": [201, 209], "IS": [201, 209], "NO": [201, 209], "rag": 201, "reorgan": 201, "v_outer": 201, "assigne": 201, "wors": 201, "yourself": [201, 215], "destroi": 201, "rid": 201, "inner_view_typ": 201, "outer_view_typ": 201, "numout": 201, "numinn": 201, "to_str": 201, "device_out": 201, "dispos": 201, "nonown": 201, "a_nonconst": 201, "nonconst": 201, "a_const": 201, "readonlyfunct": 201, "skew": 201, "parenthes": 201, "enclos": 201, "comma": 201, "delimit": 201, "a_ijk": 201, "rest": 201, "slow": 201, "leftmost": 201, "exempt": 201, "unwind": 201, "incorrect": 201, "100x50x4": 201, "50": 201, "200x50x4": 201, "300x60x4": 201, "300": 201, "java": 201, "s_1": 201, "s_2": 201, "s_3": 201, "dim1": 201, "extent_2": 201, "extent_n": 201, "conserv": 201, "benefici": 201, "heavi": 201, "stringent": 201, "overflow": 201, "lapack": [201, 230], "idea": 201, "lda": 201, "morton": 201, "thereof": 201, "viewmap": 201, "renam": 201, "coalesc": 201, "callbla": 201, "callsomeblasfunct": 201, "invalid_argu": 201, "100000": 201, "biject": 201, "accessspac": 201, "viewallocatewithoutiniti": 201, "affin": 201, "memcopi": 201, "discourag": [201, 208], "circumv": 201, "defeat": 201, "polymorp": 201, "legaci": [201, 211], "legacyfunct": 201, "x_raw": 201, "len": 201, "myfunct": 201, "somelibraryfunct": 201, "reference_is_lvalu": 201, "sometrait": 201, "someothertrait": 201, "ca": 201, "a_atom": 201, "irregularli": 201, "a_ra": 201, "shorter": 201, "fault": 201, "prolifer": 201, "csr": 201, "spmatvec": 201, "ind": 201, "x_ra": 201, "y_i": 201, "accordingli": 201, "x_view": 201, "functionthattakeskokkosview": 201, "safest": 201, "tree": [202, 215, 227], "exceedingli": 202, "devil": 202, "kokkos_install_prefix": 202, "compiler_used_to_build_kokko": 202, "cmake_polici": 202, "cmp0074": 202, "cmake_build_instal": 202, "cmake_build_in_tre": 202, "kokkos_install_fold": 202, "craype_link_typ": 202, "miss": 202, "benchmark": [202, 217], "bytes_and_flop": 202, "nvlink": [202, 222], "displai": 202, "dev": [202, 215, 217], "articl": 203, "9485033": 203, "trott": [203, 209], "christian": [203, 209], "lebrun": 203, "grandi\u00e9": 203, "damien": 203, "arndt": 203, "daniel": 203, "ciesko": 203, "jan": 203, "dang": 203, "vinh": 203, "ellingwood": 203, "nathan": 203, "gayatri": 203, "rahulkumar": 203, "harvei": 203, "evan": 203, "hollman": 203, "daisi": 203, "ibanez": 203, "dan": 203, "liber": 203, "nevin": 203, "madsen": 203, "jonathan": 203, "mile": 203, "jeff": 203, "poliakoff": 203, "david": 203, "powel": 203, "ami": 203, "rajamanickam": 203, "sivasankaran": 203, "simberg": 203, "mikael": 203, "sunderland": 203, "turcksin": 203, "bruno": 203, "wilk": 203, "jeremiah": 203, "journal": 203, "ieee": 203, "transact": 203, "titl": 203, "2022": [203, 212], "volum": 203, "805": 203, "817": 203, "doi": 203, "1109": 203, "tpd": 203, "2021": [203, 212], "3097283": 203, "ecosystem": [203, 206], "9502936": 203, "berger": 203, "vergiat": 203, "luc": 203, "grandi": 203, "nader": 203, "gligor": 203, "milo": 203, "shipman": 203, "galen": 203, "womeldorff": 203, "geoff": 203, "scienc": 203, "comprehens": [203, 212, 215], "mcse": 203, "3098509": 203, "paper": 203, "carteredwards20143202": 203, "manycor": 203, "3202": 203, "3216": 203, "issn": 203, "0743": 203, "7315": 203, "1016": 203, "jpdc": 203, "07": [203, 215], "003": 203, "url": 203, "www": 203, "sciencedirect": 203, "pii": 203, "s0743731514001257": 203, "carter": 203, "edward": 203, "pull": [204, 215, 217, 227], "licens": [204, 206], "bsd": [204, 209], "commerci": 204, "req": 204, "activeexecutionmemoryspac": 205, "host_execution_spac": 205, "host_memory_spac": 205, "kokkos_restrict_execution_to_": 205, "data_spac": 205, "hip_safe_cal": 205, "create_inst": 205, "partition_mast": 205, "num_partit": 205, "partition_s": 205, "kokkos_openmp_inst": 205, "access_error": 205, "kokkos_hip_spac": 205, "hip_internal_safe_call_deprec": 205, "kokkos_hip_error": 205, "kokkos_openmp": 205, "openmpintern": 205, "validate_partit": 205, "profilingsect": 205, "getnam": 205, "kokkos_profiling_profilesect": 205, "getsectionid": 205, "kokkos_hip_parallel_team": 205, "kokkos_sycl_parallel_team": 205, "kokkos_openmptarget_exec": 205, "kokkos_cuda_parallel_team": 205, "kokkos_cudaspac": 205, "number_of_alloc": 205, "kokkos_hpx": 205, "masterlock": 205, "kokkos_attribute_nodiscard": 205, "amathfunct": 205, "clamp": 205, "is_reducer_typ": 205, "index_list_typ": 205, "always_use_kokkos_sort": 205, "finalize_al": 205, "withoutinitializing_t": 205, "wi": 205, "kokkos_thread_loc": 205, "thread_loc": 205, "is_view": 205, "cuda_internal_safe_call_deprec": 205, "cuda_safe_cal": 205, "trail": 205, "kokkosviewlabel": 205, "kokkos_macro": 205, "kokkos_atom": 205, "kokkos_arrai": 205, "kokkos_half": 205, "kokkos_tim": 205, "kokkos_sort": 205, "kokkos_bit": 205, "kokkos_errorreport": 205, "batch": [206, 230], "pykokko": 206, "checkpoint": 206, "mdspan": 206, "p0009": 206, "stdbla": 206, "p1673": 206, "kokkosteam": [206, 214], "instal": [206, 207, 217, 222], "cmake": [206, 212, 223], "video": 206, "lectur": 206, "slide": 206, "cite": 206, "sensit": 207, "recal": 207, "dkeyword_nam": 207, "kokkos_enable_compiler_warn": 207, "relax": 207, "kokkos_enable_cuda_ldg_intrins": 207, "um": 207, "kokkos_enable_deprecated_cod": 207, "kokkos_enable_exampl": 207, "kokkos_enable_large_mem_test": 207, "kokkos_enable_test": 207, "kokkos_cuda_dir": 207, "cuda_root": 207, "kokkos_hwloc_dir": 207, "hwloc_root": 207, "kokkos_memkind_dir": 207, "memkind_root": 207, "kokkos_libdl_dir": 207, "libdl_root": 207, "kokkos_librt_dir": 207, "librt_root": 207, "hpx_dir": 207, "hpx_root": 207, "config": [207, 215, 217], "kokkos_arch_n": 207, "kokkos_arch_a64fx": 207, "sve": 207, "kokkos_arch_amdavx": 207, "amdavx": 207, "armv80": 207, "armv8_thunderx": 207, "armv8_tx2": 207, "kokkos_arch_armv8_tx2": 207, "kokkos_arch_bdw": 207, "kokkos_arch_bgq": 207, "kepler32": 207, "kokkos_arch_knl": 207, "maxwell52": 207, "maxwell53": 207, "kokkos_arch_skx": 207, "skx": 207, "kokkos_arch_snb": 207, "kokkos_arch_spr": 207, "sapphir": 207, "turing75": 207, "volta70": 207, "volta72": 207, "kokkos_arch_wsm": 207, "wsm": 207, "kokkos_arch_zen": 207, "kokkos_arch_zen2": 207, "kokkos_arch_zen3": 207, "wherea": 207, "ahead": 207, "compatibilti": 208, "do_math": 208, "sqrt5": 208, "ambigu": 208, "highli": 208, "copyright": 209, "2020": 209, "ntess": 209, "contract": [209, 224], "de": 209, "na0003525": 209, "govern": 209, "retain": 209, "redistribut": 209, "permit": 209, "materi": 209, "corpor": 209, "contributor": 209, "endors": 209, "permiss": [209, 215, 217], "BY": 209, "AS": 209, "warranti": 209, "BUT": 209, "OF": 209, "merchant": 209, "shall": [209, 214], "liabl": 209, "incident": 209, "exemplari": 209, "consequenti": 209, "damag": 209, "procur": 209, "substitut": 209, "servic": 209, "loss": 209, "profit": 209, "busi": 209, "interrupt": 209, "theori": [209, 224], "liabil": 209, "strict": 209, "tort": 209, "neglig": 209, "IF": 209, "SUCH": 209, "contact": 209, "crtrott": 209, "gov": 209, "introduct": [211, 217, 230], "unawar": 212, "appleclang": 212, "intelllvm": 212, "2023": 212, "md": [212, 215], "knownissu": 212, "pthread": [212, 215, 217], "wall": [212, 215], "wunus": 212, "wshadow": [212, 215], "pedant": [212, 215], "werror": [212, 215], "wsign": [212, 215], "wtype": [212, 215], "wignor": 212, "wempti": 212, "wclobber": 212, "wuniniti": 212, "master": [212, 215, 216, 217], "rigor": 212, "feedback": 213, "workflow": [213, 219], "channel": 214, "enhanc": [214, 215, 226], "priorit": 214, "weekli": 214, "mileston": 214, "partner": 214, "slot": 214, "prioriti": 214, "usergroup": 214, "15feb18": 215, "x86": [215, 217], "043": 215, "196": 215, "128": 215, "pgi": 215, "103": 215, "174": 215, "cygwin": 215, "64bit": 215, "test_all_sandia": [215, 216, 217], "trilino": [215, 217, 221], "atdm": 215, "lammp": 215, "sparc": 215, "changelog": 215, "master_histori": 215, "snapshot": [215, 217], "clone": [215, 217], "git": [215, 216], "nohup": 215, "tail": 215, "watch": 215, "white": [215, 217], "shepard": [215, 217], "shepard_jenkins_run_script_serial_intel": [215, 217], "pristin": [215, 217], "rerun": 215, "token": [215, 230], "oldtag": 215, "newtag": 215, "04": 215, "00": 215, "rubi": 215, "gitthub_changelog_gener": 215, "indevelop": 215, "cat": 215, "cleanup": 215, "commit": [215, 217], "owner": [215, 217, 222], "clariti": [215, 226], "noteworthi": 215, "checkout": [215, 217], "majornumb": 215, "minornumb": 215, "weekssinceminornumberupd": 215, "month": 215, "dai": 215, "sha1": 215, "append": [215, 227], "03": 215, "27": 215, "da314444": 215, "29ccb58a": 215, "amend": 215, "mm": [215, 220], "dd": 215, "yyyi": 215, "sem": [215, 217], "checkin": [215, 217], "disk": [215, 224], "ram": 215, "ceerws1113": 215, "trilinos_path": 215, "pwd": 215, "untrack": 215, "py": [215, 217], "backtrack": 215, "approv": [216, 217], "deploy": 216, "jenkin": [216, 217], "travi": 216, "institut": 216, "verif": 216, "yml": 216, "wider": 216, "role": 217, "databas": 217, "offici": 217, "fork": 217, "privileg": 217, "865": 217, "begun": 217, "conclus": 217, "haap": 217, "secondari": 217, "mainten": 217, "outag": 217, "scroll": 217, "ohpc": 217, "srn": 217, "apollo": 217, "bowman": 217, "elli": 217, "hansen": 217, "e5": 217, "2698": 217, "kokkos_dev": 217, "ride": 217, "p8": 217, "tuleta": 217, "fireston": 217, "garrison": 217, "tesla": 217, "k40": 217, "k80": 217, "p100": 217, "36": 217, "sullivan": 217, "mac": 217, "bed": 217, "submiss": 217, "connect": 217, "webcar": 217, "intranet": 217, "person": 217, "staff": 217, "leader": 217, "assist": 217, "csri": 217, "csu": 217, "administ": 217, "daili": 217, "regimen": 217, "suit": 217, "dashboard": 217, "identif": 217, "flow": 217, "terminolog": 217, "joint": 217, "simul": [217, 222, 225, 226], "qthread": 217, "briefli": 217, "generate_makefil": 217, "bash": 217, "makefil": 217, "spot": 217, "jenkins_test_driv": 217, "testing_script": 217, "server": 217, "sha": 217, "accomplish": [217, 221], "prepare_trilinos_repo": 217, "shepard_jenkins_run_script_pthread_intel": 217, "workspac": 217, "white_run_jenkins_script_cuda": 217, "white_run_jenkins_script_omp": 217, "test_kokkos_master_develop_promot": 217, "checkintest": 217, "flavor": 217, "speed": 217, "central": 217, "equat": 217, "viz": 217, "accuraci": 217, "replica": 217, "nearli": 217, "hundr": 217, "unit_test": 217, "performance_test": 217, "perf_test": 217, "scrutini": 217, "inadequaci": 217, "defici": 217, "halo": 218, "averag": 218, "interop": [218, 230], "cabana": 218, "window": 218, "demonstr": [219, 220, 221, 224], "quantiti": 219, "ratio": 219, "ultim": 219, "count_adjacent_el": 219, "elements_to_nod": 219, "number_of_nod": 219, "elements_per_nod": 219, "scatter_elements_per_nod": 219, "create_scatter_view": 219, "access_elements_per_nod": 219, "node_of_el": 219, "sum_to_nod": 219, "element_valu": 219, "node_valu": 219, "scatter_node_valu": 219, "access_node_valu": 219, "average_to_nod": 219, "flcl": 220, "daxpi": 220, "ndarrai": 220, "flcl_ndarray_t": 220, "dope": 220, "flatten": [220, 221], "_flcl_nd_array_t": 220, "flcl_ndarray_max_rank": 220, "f90": 220, "nd_array_t": 220, "c_size_t": 220, "nd_array_max_rank": 220, "c_ptr": 220, "procedur": 220, "to_nd_arrai": 220, "to_nd_array_l_1d": 220, "to_nd_array_i32_1d": 220, "to_nd_array_i64_1d": 220, "to_nd_array_r32_1d": 220, "to_nd_array_r64_1d": 220, "to_nd_array_l_2d": 220, "to_nd_array_i32_2d": 220, "to_nd_array_i64_2d": 220, "to_nd_array_r32_2d": 220, "to_nd_array_r64_2d": 220, "to_nd_array_l_3d": 220, "to_nd_array_i32_3d": 220, "to_nd_array_i64_3d": 220, "to_nd_array_r32_3d": 220, "to_nd_array_r64_3d": 220, "view_from_ndarrai": 220, "axpi": 220, "flcl_mod": 220, "c_doubl": 220, "allocat": 220, "f_y": 220, "c_y": 220, "alpha": 220, "subroutin": 220, "iso_c_bind": 220, "inout": 220, "f_axpi": 220, "nd_arrai": 220, "earlier": 220, "c_axpi": 220, "nd_array_i": 220, "nd_array_x": 220, "tensor": 221, "pde": 221, "inputdata": 221, "inputfield": 221, "outputfield": 221, "tripl": 221, "paral": 221, "for_all_cel": 221, "merit": 221, "notion": 221, "natur": 221, "mdr_for_all_cel": 221, "wiki": 221, "intrepid2": 221, "intrepid2_arraytoolsdef": 221, "overview": 221, "intrepid": 221, "complementari": 222, "scalabl": 222, "walk": 222, "source_rank": 222, "destination_rank": 222, "number_of_doubl": 222, "my_rank": 222, "mpi_comm": 222, "comm": 222, "mpi_comm_world": 222, "mpi_comm_rank": 222, "mpi_send": 222, "mpi_doubl": 222, "mpi_recv": 222, "quit": 222, "pcie": 222, "unstructur": 222, "sent": 222, "redudantli": 222, "filter": 222, "subset_scann": 222, "keys_in": 222, "desired_key_in": 222, "subset_indices_in": 222, "m_kei": 222, "m_desired_kei": 222, "m_subset_indic": 222, "final_pass": 222, "is_in": 222, "find_subset": 222, "desired_kei": 222, "subset_s": 222, "local_sum": 222, "subset_indic": 222, "transmit": 222, "pack_messag": 222, "all_element_data": 222, "kokkos_enable_deprecated_code_4": 223, "tediou": 223, "appar": 223, "acess": 223, "spell": [223, 228], "myview": 223, "c_style_memori": 223, "c_style_alloc": 223, "concur": 224, "stagger": 224, "littl": 224, "hostexecspac": 224, "deviceexecspac": 224, "device_range_polici": 224, "host_range_polici": 224, "viewvectortyp": 224, "viewmatrixtyp": 224, "xval": 224, "init_src_view": 224, "p_x": 224, "p_a": 224, "init_a": 224, "init_x": 224, "h_x": 224, "h_y": 224, "nrepeat": 224, "synch": 224, "yax": 224, "temp2": 224, "ini_src_view": 224, "occupi": 224, "attent": 224, "paid": 224, "opportun": [224, 226], "range_polici": 224, "v_r": 224, "v_r1": 224, "h_v": 224, "get_initial_st": 224, "get_rhs_func": 224, "serialize_st": 224, "view_r": 224, "exhibit": 225, "cabana_soa": 225, "vectorlength": 225, "membertyp": 225, "cabana_aosoa": 225, "performancetrait": 225, "memorymanag": 225, "carri": 225, "evolut": 226, "particleinteract": 226, "particleposit": 226, "po": 226, "particleforc": 226, "particleneighbor": 226, "pairforc": 226, "parallelis": 226, "rectifi": 226, "qualiti": 226, "plai": 226, "tagphase1": 226, "tagphase2": 226, "compute1": 226, "compute2": 226, "prescrib": 227, "predetermin": 227, "surrog": 227, "roll": 227, "b1": 227, "b2": 227, "b3": 227, "fib": 227, "wait_list": 227, "a_f1": 227, "b_f1": 227, "b_f2": 227, "a_f2": 227, "tm": 227, "vertex": 227, "subteam": 227, "visit": 227, "vertic": 227, "exce": 227, "threshold": 227, "unvisit": 227, "frontier": 227, "st": 227, "edg": 227, "greatli": 227, "lookup": 228, "neccessari": 228, "myloop": 228, "kokkos_class_lambda": 228, "implementationptr": 228, "make_shar": 228, "oh": 228, "strictli": 228, "nominmax": 229, "uninterpret": 229, "redefin": 229, "dnominmax": 229, "multidim": 230, "safeti": 230, "pga": 230, "analysi": 230, "linear": 230, "algebra": 230, "solver": 230}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [177, 5, 1, "_CPPv410HostMirror", "HostMirror"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [173, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [132, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [132, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [132, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [132, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [132, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [132, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [132, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [177, 5, 1, "_CPPv412array_layout", "array_layout"], [177, 5, 1, "_CPPv415const_data_type", "const_data_type"], [177, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [177, 5, 1, "_CPPv410const_type", "const_type"], [177, 5, 1, "_CPPv416const_value_type", "const_value_type"], [177, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [177, 5, 1, "_CPPv411device_type", "device_type"], [177, 5, 1, "_CPPv49dimension", "dimension"], [177, 5, 1, "_CPPv415execution_space", "execution_space"], [177, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [177, 5, 1, "_CPPv412memory_space", "memory_space"], [177, 5, 1, "_CPPv413memory_traits", "memory_traits"], [177, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [177, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [177, 5, 1, "_CPPv414non_const_type", "non_const_type"], [177, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [177, 5, 1, "_CPPv412pointer_type", "pointer_type"], [177, 5, 1, "_CPPv414reference_type", "reference_type"], [177, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [177, 5, 1, "_CPPv49size_type", "size_type"], [177, 5, 1, "_CPPv410specialize", "specialize"], [177, 5, 1, "_CPPv410value_type", "value_type"], [108, 6, 1, "_CPPv44BAndR10value_type", "BAnd"], [108, 6, 1, "_CPPv44BAndRK16result_view_type", "BAnd"], [108, 7, 1, "_CPPv44BAndR10value_type", "BAnd::value_"], [108, 7, 1, "_CPPv44BAndRK16result_view_type", "BAnd::value_"], [109, 6, 1, "_CPPv43BOrR10value_type", "BOr"], [109, 6, 1, "_CPPv43BOrRK16result_view_type", "BOr"], [109, 7, 1, "_CPPv43BOrR10value_type", "BOr::value_"], [109, 7, 1, "_CPPv43BOrRK16result_view_type", "BOr::value_"], [75, 8, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 10, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 10, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 10, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 7, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 7, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 7, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 7, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 7, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 7, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 7, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 10, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 11, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 6, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 7, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 6, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 7, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 10, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 9, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 11, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 12, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 10, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 11, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 11, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 11, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 10, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 9, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 10, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 9, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 10, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 7, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 7, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 7, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 7, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 7, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 7, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 7, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 7, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 10, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 7, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 7, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 7, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 7, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 7, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 7, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 7, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 7, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 6, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 6, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 10, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 7, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 10, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 10, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 12, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 12, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 12, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 12, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 12, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 12, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 12, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 12, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 12, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 12, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 12, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 12, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 12, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 12, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 12, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 6, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 9, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 8, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 10, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 7, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 12, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 10, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 7, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 7, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 7, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 7, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 7, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 7, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 7, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 12, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 12, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 12, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 12, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 12, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 10, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 12, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 12, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 12, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 12, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 10, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 7, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 10, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 7, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 12, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 10, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 10, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 10, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 12, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 12, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 12, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 12, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 12, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 12, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 10, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 7, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 12, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 10, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 12, 1, "_CPPv4N11DynRankView4rankE", "DynRankView::rank"], [76, 12, 1, "_CPPv4N11DynRankView12rank_dynamicE", "DynRankView::rank_dynamic"], [76, 12, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 12, 1, "_CPPv4N11DynRankView34reference_type_is_lvalue_referenceE", "DynRankView::reference_type_is_lvalue_reference"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 10, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 7, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 12, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 12, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 10, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 10, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 12, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 10, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 7, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 10, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 10, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 10, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 10, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 10, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 10, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 10, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 10, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 10, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 12, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 8, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 10, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 7, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 7, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 7, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 7, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 7, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 12, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 6, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 12, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 6, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 12, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 6, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 6, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 6, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 7, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 10, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 10, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 12, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 6, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 7, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 7, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 12, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 12, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 11, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 10, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 7, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 6, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 6, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 6, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 6, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 6, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 6, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 6, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 6, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 6, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 6, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 6, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 6, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 12, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 6, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [131, 8, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [131, 10, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [131, 10, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [131, 7, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [131, 10, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [131, 10, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [131, 10, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [131, 7, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [170, 10, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [170, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [170, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [170, 10, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [170, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [170, 10, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [170, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [170, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [170, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [170, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [170, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [170, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [170, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [170, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [170, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [170, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [170, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [170, 7, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [170, 7, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [170, 7, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [170, 7, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [170, 7, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [170, 7, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [170, 7, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [170, 7, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [170, 7, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [170, 7, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [170, 7, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [170, 7, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [170, 7, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [170, 7, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [170, 7, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [110, 6, 1, "_CPPv44LAndR10value_type", "LAnd"], [110, 6, 1, "_CPPv44LAndRK16result_view_type", "LAnd"], [110, 7, 1, "_CPPv44LAndR10value_type", "LAnd::value_"], [110, 7, 1, "_CPPv44LAndRK16result_view_type", "LAnd::value_"], [111, 6, 1, "_CPPv43LOrR10value_type", "LOr"], [111, 6, 1, "_CPPv43LOrRK16result_view_type", "LOr"], [111, 7, 1, "_CPPv43LOrR10value_type", "LOr::value_"], [111, 7, 1, "_CPPv43LOrRK16result_view_type", "LOr::value_"], [171, 8, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [171, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [171, 10, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [171, 6, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [171, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [171, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [171, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [171, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [171, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [171, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [171, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [171, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [171, 12, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [171, 11, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [171, 11, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [171, 10, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [171, 10, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [172, 8, 1, "_CPPv411LayoutRight", "LayoutRight"], [172, 10, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [172, 10, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [172, 6, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [172, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [172, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [172, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [172, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [172, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [172, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [172, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [172, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [172, 12, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [172, 11, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [172, 11, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [172, 10, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [172, 10, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [173, 10, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [173, 10, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [173, 6, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [173, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [148, 10, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 10, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 10, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [148, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [148, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [112, 6, 1, "_CPPv43MaxR10value_type", "Max"], [112, 6, 1, "_CPPv43MaxRK16result_view_type", "Max"], [112, 7, 1, "_CPPv43MaxR10value_type", "Max::value_"], [112, 7, 1, "_CPPv43MaxRK16result_view_type", "Max::value_"], [113, 6, 1, "_CPPv46MaxLocR10value_type", "MaxLoc"], [113, 6, 1, "_CPPv46MaxLocRK16result_view_type", "MaxLoc"], [113, 7, 1, "_CPPv46MaxLocR10value_type", "MaxLoc::value_"], [113, 7, 1, "_CPPv46MaxLocRK16result_view_type", "MaxLoc::value_"], [114, 6, 1, "_CPPv43MinR10value_type", "Min"], [114, 6, 1, "_CPPv43MinRK16result_view_type", "Min"], [114, 7, 1, "_CPPv43MinR10value_type", "Min::value_"], [114, 7, 1, "_CPPv43MinRK16result_view_type", "Min::value_"], [115, 6, 1, "_CPPv46MinLocR10value_type", "MinLoc"], [115, 6, 1, "_CPPv46MinLocRK16result_view_type", "MinLoc"], [115, 7, 1, "_CPPv46MinLocR10value_type", "MinLoc::value_"], [115, 7, 1, "_CPPv46MinLocRK16result_view_type", "MinLoc::value_"], [116, 6, 1, "_CPPv46MinMaxR10value_type", "MinMax"], [116, 6, 1, "_CPPv46MinMaxRK16result_view_type", "MinMax"], [116, 7, 1, "_CPPv46MinMaxR10value_type", "MinMax::value_"], [116, 7, 1, "_CPPv46MinMaxRK16result_view_type", "MinMax::value_"], [117, 6, 1, "_CPPv49MinMaxLocR10value_type", "MinMaxLoc"], [117, 6, 1, "_CPPv49MinMaxLocRK16result_view_type", "MinMaxLoc"], [117, 7, 1, "_CPPv49MinMaxLocR10value_type", "MinMaxLoc::value_"], [117, 7, 1, "_CPPv49MinMaxLocRK16result_view_type", "MinMaxLoc::value_"], [149, 10, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [149, 7, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [149, 10, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [149, 7, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [120, 6, 1, "_CPPv44ProdR10value_type", "Prod"], [120, 6, 1, "_CPPv44ProdRK16result_view_type", "Prod"], [120, 7, 1, "_CPPv44ProdR10value_type", "Prod::value_"], [120, 7, 1, "_CPPv44ProdRK16result_view_type", "Prod::value_"], [150, 10, 1, "_CPPv411RangePolicyv", "RangePolicy"], [150, 10, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 10, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::space"], [121, 6, 1, "_CPPv47ReducerR10value_type", "Reducer"], [121, 6, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [121, 7, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [121, 7, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 8, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 10, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 10, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView"], [79, 10, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 10, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 7, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 7, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::dims"], [79, 7, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 7, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 10, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 10, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 7, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 12, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 12, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 12, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 10, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 12, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 12, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 12, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 10, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 7, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 7, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 7, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 7, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 7, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 7, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 7, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 7, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 10, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 10, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 7, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 10, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 7, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 7, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 7, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 7, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 7, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 7, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 7, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 7, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 10, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [123, 6, 1, "_CPPv43SumR10value_type", "Sum"], [123, 6, 1, "_CPPv43SumRK16result_view_type", "Sum"], [123, 7, 1, "_CPPv43SumR10value_type", "Sum::value_"], [123, 7, 1, "_CPPv43SumRK16result_view_type", "Sum::value_"], [151, 8, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [151, 10, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [151, 10, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [151, 10, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [151, 12, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [151, 6, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [151, 6, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [151, 10, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [151, 10, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [151, 12, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [151, 6, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [151, 6, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [151, 6, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [151, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [151, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [151, 7, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [151, 7, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [151, 7, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [151, 6, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [151, 6, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [151, 6, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [151, 6, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [151, 6, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [151, 6, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [151, 6, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [151, 10, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [152, 8, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [152, 9, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [152, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [152, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [152, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [152, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [152, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [152, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [152, 10, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 7, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 10, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [152, 12, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [152, 12, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [152, 12, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [152, 12, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [152, 10, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [152, 12, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [152, 12, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [152, 10, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [152, 7, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [152, 7, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [152, 10, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [152, 7, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [152, 10, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [152, 7, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [152, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [152, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [152, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [152, 10, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 7, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 10, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [152, 7, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [152, 10, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [152, 10, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [152, 10, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [152, 7, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [152, 7, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [152, 10, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [152, 10, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [152, 7, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [152, 7, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [152, 10, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [152, 7, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [152, 10, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [152, 12, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [149, 10, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [149, 10, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [149, 10, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [149, 10, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 8, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 10, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 7, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 6, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 10, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 6, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 7, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 6, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 7, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 6, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value", "UnorderedMap::insert"], [81, 6, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value", "UnorderedMap::insert::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value", "UnorderedMap::insert::value"], [81, 6, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 6, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 7, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 10, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 7, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 10, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 6, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 7, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 6, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 7, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 8, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 6, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 6, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 6, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 6, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [177, 10, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [177, 10, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [177, 10, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [177, 10, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [177, 10, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View"], [177, 10, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View"], [177, 10, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [177, 10, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [177, 10, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [177, 10, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [177, 10, 1, "_CPPv44ViewRR4View", "View"], [177, 10, 1, "_CPPv44Viewv", "View"], [177, 7, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [177, 7, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [177, 7, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [177, 7, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::indices"], [177, 7, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [177, 7, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [177, 7, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [177, 7, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::layout"], [177, 7, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [177, 7, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [177, 7, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [177, 7, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::prop"], [177, 7, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::prop"], [177, 7, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [177, 7, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [177, 7, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [177, 7, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [177, 7, 1, "_CPPv44ViewRR4View", "View::rhs"], [177, 7, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [177, 7, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [177, 10, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [177, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [177, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [177, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [177, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [177, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [177, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [177, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [177, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [173, 12, 1, "_CPPv412array_layout", "array_layout"], [177, 10, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [177, 7, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [104, 10, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [104, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [104, 7, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [104, 7, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [105, 10, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [104, 10, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [104, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [104, 7, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [104, 7, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [105, 10, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [104, 10, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign"], [104, 9, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::T"], [104, 7, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::ptr_to_value"], [104, 7, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::value"], [99, 10, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange"], [99, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::T"], [99, 7, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::comparison_value"], [99, 7, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::new_value"], [99, 7, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::ptr_to_value"], [100, 10, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong"], [100, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::T"], [100, 7, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::comparison_value"], [100, 7, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::new_value"], [100, 7, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::ptr_to_value"], [104, 10, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [104, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [104, 7, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [105, 10, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [101, 10, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange"], [101, 9, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::T"], [101, 7, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::new_value"], [101, 7, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::ptr_to_value"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [102, 10, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [102, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [102, 7, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [102, 7, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [102, 10, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [102, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [102, 7, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [102, 7, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [102, 10, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [102, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [102, 7, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [102, 7, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [102, 10, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [102, 7, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [104, 10, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [104, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [104, 7, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [103, 10, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load"], [103, 9, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::T"], [103, 7, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::ptr_to_value"], [105, 10, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [105, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [105, 7, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [104, 10, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [104, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [104, 7, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [104, 7, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [105, 10, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [104, 10, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [104, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [104, 7, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [104, 7, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [105, 10, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [105, 10, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [105, 10, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [104, 10, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [104, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [104, 7, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [104, 7, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [105, 10, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [105, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [105, 7, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [105, 10, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [105, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [105, 7, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [106, 10, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store"], [106, 9, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::T"], [106, 7, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::new_value"], [106, 7, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::ptr_to_value"], [104, 10, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [104, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [104, 7, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [104, 7, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [105, 10, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [105, 10, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [105, 7, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [105, 7, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [4, 6, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [4, 7, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 6, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 7, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 6, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 7, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [163, 8, 1, "_CPPv4I0E7complex", "complex"], [163, 9, 1, "_CPPv4I0E7complex", "complex::Scalar"], [163, 10, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [163, 6, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [163, 6, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [163, 6, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [163, 6, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [163, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [163, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [163, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [163, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [163, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [163, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [163, 7, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [163, 7, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [163, 7, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [163, 6, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [163, 6, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [163, 6, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [163, 7, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [163, 10, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [163, 10, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [163, 6, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [163, 6, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [163, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [163, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [163, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [163, 7, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [163, 7, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [163, 7, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [163, 10, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [163, 6, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [163, 6, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [163, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [163, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [163, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [163, 7, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [163, 7, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [163, 7, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [163, 10, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [163, 6, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [163, 6, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [163, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [163, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [163, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [163, 7, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [163, 7, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [163, 7, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [163, 10, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [163, 6, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [163, 6, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [163, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [163, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [163, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [163, 7, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [163, 7, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [163, 7, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [163, 10, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [163, 6, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [163, 6, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [163, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [163, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [163, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [163, 7, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [163, 7, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [163, 7, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [163, 6, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [163, 6, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [163, 6, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [163, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [163, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [163, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [163, 10, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [163, 6, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [163, 6, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [163, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [163, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [163, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [163, 7, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [163, 7, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [163, 7, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [163, 6, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [163, 6, 1, "_CPPv4N7complex4realEv", "complex::real"], [163, 6, 1, "_CPPv4NK7complex4realEv", "complex::real"], [163, 7, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [163, 12, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 10, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 7, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 7, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [169, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [169, 10, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [169, 10, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror"], [169, 10, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [169, 10, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [169, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [169, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [169, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewCtorArgs"], [169, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [169, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [169, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewType"], [169, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [169, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [169, 7, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::arg_prop"], [169, 7, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [169, 7, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [169, 7, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [169, 7, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [169, 7, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::v"], [169, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [169, 10, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [169, 10, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view"], [169, 10, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [169, 10, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [169, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [169, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [169, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewCtorArgs"], [169, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [169, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [169, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewType"], [169, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [169, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [169, 7, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::arg_prop"], [169, 7, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [169, 7, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [169, 7, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [169, 7, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::src"], [169, 7, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [169, 7, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [169, 10, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [169, 10, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy"], [169, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [169, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewCtorArgs"], [169, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [169, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewType"], [169, 7, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::arg_prop"], [169, 7, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [169, 7, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::src"], [177, 10, 1, "_CPPv4NK4dataEv", "data"], [173, 11, 1, "_CPPv49dimension", "dimension"], [4, 6, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 7, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 7, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [4, 6, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [4, 7, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [177, 10, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [177, 7, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [177, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [177, 10, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [177, 7, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [177, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [108, 6, 1, "_CPPv4NK4initER10value_type", "init"], [109, 6, 1, "_CPPv4NK4initER10value_type", "init"], [110, 6, 1, "_CPPv4NK4initER10value_type", "init"], [111, 6, 1, "_CPPv4NK4initER10value_type", "init"], [112, 6, 1, "_CPPv4NK4initER10value_type", "init"], [113, 6, 1, "_CPPv4NK4initER10value_type", "init"], [114, 6, 1, "_CPPv4NK4initER10value_type", "init"], [115, 6, 1, "_CPPv4NK4initER10value_type", "init"], [116, 6, 1, "_CPPv4NK4initER10value_type", "init"], [117, 6, 1, "_CPPv4NK4initER10value_type", "init"], [120, 6, 1, "_CPPv4NK4initER10value_type", "init"], [121, 6, 1, "_CPPv4NK4initER10value_type", "init"], [123, 6, 1, "_CPPv4NK4initER10value_type", "init"], [108, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [109, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [110, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [111, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [112, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [113, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [114, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [115, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [116, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [117, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [120, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [121, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [123, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [177, 10, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [177, 10, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [177, 7, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [173, 11, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 10, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 7, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 7, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [108, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [109, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [110, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [111, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [112, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [113, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [114, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [115, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [116, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [117, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [120, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [121, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [123, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [108, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [109, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [110, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [111, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [112, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [113, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [114, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [115, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [116, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [117, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [120, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [121, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [123, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [108, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [109, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [110, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [111, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [112, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [113, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [114, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [115, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [116, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [117, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [120, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [121, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [123, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [126, 10, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [126, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [126, 7, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [127, 10, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [127, 10, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [127, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [127, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [127, 7, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [127, 7, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [127, 7, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [128, 10, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [128, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [128, 7, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [128, 7, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [177, 10, 1, "_CPPv4NK5labelEv", "label"], [177, 10, 1, "_CPPv4NK6layoutEv", "layout"], [177, 10, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [177, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [177, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [177, 10, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [177, 7, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [173, 10, 1, "_CPPv4aSRK12LayoutStride", "operator="], [173, 10, 1, "_CPPv4aSRR12LayoutStride", "operator="], [177, 10, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [177, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [177, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [173, 6, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [173, 7, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [173, 7, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [173, 7, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [159, 10, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [159, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [159, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [159, 7, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [159, 7, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [177, 10, 1, "_CPPv44rankv", "rank"], [177, 10, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [108, 6, 1, "_CPPv4NK9referenceEv", "reference"], [109, 6, 1, "_CPPv4NK9referenceEv", "reference"], [110, 6, 1, "_CPPv4NK9referenceEv", "reference"], [111, 6, 1, "_CPPv4NK9referenceEv", "reference"], [112, 6, 1, "_CPPv4NK9referenceEv", "reference"], [113, 6, 1, "_CPPv4NK9referenceEv", "reference"], [114, 6, 1, "_CPPv4NK9referenceEv", "reference"], [115, 6, 1, "_CPPv4NK9referenceEv", "reference"], [116, 6, 1, "_CPPv4NK9referenceEv", "reference"], [117, 6, 1, "_CPPv4NK9referenceEv", "reference"], [120, 6, 1, "_CPPv4NK9referenceEv", "reference"], [121, 6, 1, "_CPPv4NK9referenceEv", "reference"], [123, 6, 1, "_CPPv4NK9referenceEv", "reference"], [177, 10, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [177, 10, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [177, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [177, 7, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [177, 10, 1, "_CPPv4NK4sizeEv", "size"], [177, 10, 1, "_CPPv4NK4spanEv", "span"], [177, 10, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [177, 10, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [177, 10, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [173, 11, 1, "_CPPv46stride", "stride"], [177, 7, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [177, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [177, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [177, 7, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [177, 10, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [177, 10, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [177, 10, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [177, 10, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [177, 10, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [177, 10, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [177, 10, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [177, 10, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [176, 10, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [176, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [176, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [176, 7, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [176, 7, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [177, 10, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 8, 1, "_CPPv4I00E6vector", "vector"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 10, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 7, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 7, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 10, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 10, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 10, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 10, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 12, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 12, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 12, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 10, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 10, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 10, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 10, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 10, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 7, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 10, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 10, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 10, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 10, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 10, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 12, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 10, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 7, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 7, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 7, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 10, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 10, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 10, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 6, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 7, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 6, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 7, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 12, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 10, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 10, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 7, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 12, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 10, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 7, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 10, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 10, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 7, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 7, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 7, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 10, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 7, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 10, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 10, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 12, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 10, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 10, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 7, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 7, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [108, 6, 1, "_CPPv4NK4viewEv", "view"], [109, 6, 1, "_CPPv4NK4viewEv", "view"], [110, 6, 1, "_CPPv4NK4viewEv", "view"], [111, 6, 1, "_CPPv4NK4viewEv", "view"], [112, 6, 1, "_CPPv4NK4viewEv", "view"], [113, 6, 1, "_CPPv4NK4viewEv", "view"], [114, 6, 1, "_CPPv4NK4viewEv", "view"], [115, 6, 1, "_CPPv4NK4viewEv", "view"], [116, 6, 1, "_CPPv4NK4viewEv", "view"], [117, 6, 1, "_CPPv4NK4viewEv", "view"], [120, 6, 1, "_CPPv4NK4viewEv", "view"], [121, 6, 1, "_CPPv4NK4viewEv", "view"], [123, 6, 1, "_CPPv4NK4viewEv", "view"], [178, 10, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc"], [178, 9, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::Args"], [178, 7, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::args"], [178, 10, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap"], [178, 9, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::Args"], [178, 7, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::args"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:kokkosinlinefunction", "7": "cppkokkos:functionParam", "8": "cppkokkos:class", "9": "cppkokkos:templateParam", "10": "cppkokkos:function", "11": "cppkokkos:member", "12": "cppkokkos:type"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "7": ["cppkokkos", "functionParam", "C++ function parameter"], "8": ["cppkokkos", "class", "C++ class"], "9": ["cppkokkos", "templateParam", "C++ template parameter"], "10": ["cppkokkos", "function", "C++ function"], "11": ["cppkokkos", "member", "C++ member"], "12": ["cppkokkos", "type", "C++ type"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 180, 185], "algorithm": [0, 3, 72, 205, 227], "random": [1, 201], "number": [1, 219], "rand": 1, "gener": [1, 32, 88, 129, 186], "synopsi": [1, 2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 135, 140, 141, 142, 149, 150, 154, 156, 158, 160, 167], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 121, 130, 131, 132, 133, 134, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 167, 168, 170, 173, 174, 175, 176, 177, 181, 182, 183, 189, 190, 192, 197, 199, 218, 224, 227], "sort": [2, 10], "nest": [2, 84, 85, 191], "polici": [2, 85, 90, 94, 148, 150, 191, 198], "team": [2, 90, 185, 191, 198], "thread": [2, 191, 193, 196], "level": [2, 85], "addit": [2, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "inform": [2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 186], "sampl": 2, "output": 2, "std": [3, 193], "iter": [4, 81], "kokko": [4, 86, 87, 94, 129, 135, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 185, 186, 193, 195, 196, 201, 202, 203, 205, 206, 212, 215, 216, 217, 220, 221, 227, 229], "experiment": [4, 129, 135, 165, 181, 182, 183], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 132, 136, 137, 138], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 134, 143, 144, 145, 146, 148, 150, 170, 177, 181, 182, 183, 225], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 121, 133, 134, 143, 144, 145, 146, 159, 170, 212, 214, 223], "distanc": 4, "return": [4, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": 5, "maximum": 5, "modifi": [6, 7], "sequenc": [6, 7, 227], "non": [7, 74, 129, 135, 193, 225], "numer": [8, 89, 139], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 99, 100, 101, 102, 103, 104, 105, 106, 126, 127, 128, 132, 149, 151, 152, 153, 154, 155, 156, 157, 158, 163, 168, 169, 171, 172, 173, 174, 175, 176, 178], "adjacent_find": 12, "all_of": 13, "any_of": 14, "copi": [15, 129, 143, 170, 201], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 201], "count_if": 20, "equal": 21, "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 223], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 107, 121, 188, 189, 190, 197], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 201, 205], "core": [72, 83, 205], "bitset": 74, "class": [74, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 140, 141, 142, 148, 150, 160, 167, 177, 205], "interfac": [74, 78, 130, 131, 133, 134, 143, 144, 145, 146, 148, 153, 155, 157, 159, 170, 177, 181, 182, 183], "constbitset": 74, "member": [74, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 135, 140, 141, 142, 148, 150, 160, 167, 177, 205, 225], "function": [74, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 125, 129, 135, 138, 140, 141, 142, 147, 160, 177, 181, 183, 184, 195, 197, 201, 205, 208, 225, 228], "dualview": 75, "usag": [75, 76, 80, 82, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 132, 140, 141, 142, 145, 146, 148, 149, 150, 152, 154, 156, 159, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 221, 224, 227], "dynrankview": 76, "assign": [76, 118, 119, 124, 160, 177, 183, 199], "rule": [76, 177, 201], "dynamicview": 77, "offsetview": 78, "construct": [78, 129, 201], "scatterview": [79, 184, 219], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "vector": [82, 191, 193, 199], "detect": [84, 129], "idiom": [84, 201], "an": [84, 87, 147, 197, 199, 214], "express": 84, "typedef": [84, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 140, 141, 142, 160, 177, 181, 182], "execut": [85, 88, 90, 129, 148, 150, 186, 191, 196, 197, 198, 201, 224], "top": [85, 227], "common": [85, 138, 148, 150], "argument": [85, 148, 150, 192], "all": [85, 129, 148, 150, 162], "initi": [86, 134, 192, 201, 221], "final": [86, 133, 192], "scopeguard": [86, 132], "concept": 87, "introduct": [87, 194], "approach": 87, "overview": 87, "The": [87, 195, 199, 206, 223, 228], "executionspac": 87, "implement": [87, 221], "deviceexecutionspac": 87, "some": [87, 170], "de": 87, "facto": 87, "design": 87, "thought": 87, "memoryspac": 87, "executionpolici": [87, 147], "teammemb": 87, "functor": [87, 94, 197, 227], "A": [87, 200, 215], "deleg": 87, "macro": [88, 185, 205], "version": [88, 212], "set": 88, "space": [88, 92, 93, 129, 135, 186, 196, 197, 198, 201], "backend": [88, 207, 217], "option": [88, 150, 207], "c": [88, 125, 185, 193, 200, 206, 226], "standard": [88, 201, 206], "third": [88, 207], "parti": [88, 207], "librari": [88, 193, 199, 206, 207], "architectur": [88, 207], "parallel": [90, 94, 191, 197, 221], "dispatch": [90, 197], "pattern": [90, 94, 198, 224, 227], "tag": [90, 197, 226], "calcul": 90, "stl": 91, "compat": [91, 185], "issu": [91, 202, 208, 213, 214], "access": [92, 177, 181, 182, 201], "task": [94, 227], "Will": 94, "work": [94, 195, 206, 224, 227, 228], "my": [94, 195, 228], "problem": [94, 195, 201, 221, 228], "basic": [94, 191, 199], "predecessor": 94, "schedul": 94, "wait": 94, "aggreg": 94, "prioriti": 94, "trait": [95, 139, 184, 198, 201], "is_array_layout": 95, "is_execution_polici": 95, "is_memory_spac": 95, "is_memory_trait": 95, "is_reduc": 95, "is_spac": 95, "util": 96, "view": [97, 170, 177, 179, 193, 200, 201], "relat": [97, 206], "atom": [98, 184, 201], "atomic_compare_exchang": 99, "atomic_compare_exchange_strong": 100, "atomic_exchang": 101, "atomic_fetch_": 102, "op": [102, 104, 105], "atomic_load": 103, "atomic_": [104, 105], "_fetch": 105, "atomic_stor": 106, "built": [107, 121, 188, 189], "band": 108, "public": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 148, 150, 160, 167, 177, 205], "constructor": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 140, 141, 142, 148, 150, 160, 167, 177, 181, 182], "bor": 109, "land": 110, "lor": 111, "max": [112, 181], "maxloc": 113, "min": [114, 181], "minloc": 115, "minmax": 116, "minmaxloc": 117, "minmaxlocscalar": 118, "variabl": [118, 119, 124], "oper": [118, 119, 124, 181, 182, 184, 199, 220, 221, 224, 226], "minmaxscalar": 119, "prod": 120, "reducerconcept": 121, "In": [121, 188, 189], "reduct": [122, 182, 187, 197, 199], "scalar": [122, 189], "type": [122, 179, 189, 199, 200, 201, 205], "sum": [123, 219], "vallocscalar": 124, "style": 125, "memori": [125, 135, 184, 191, 193, 196, 198, 201], "manag": [125, 193, 201, 217], "kokkos_fre": 126, "kokkos_malloc": 127, "kokkos_realloc": 128, "cuda": [129, 186, 193, 202, 222], "hip": [129, 208], "sycl": 129, "hpx": 129, "openmp": [129, 193], "openmptarget": 129, "serial": [129, 221, 224], "executionspaceconcept": 129, "alias": [129, 205], "base": 129, "configur": [129, 186, 202], "defaultexecutionspac": 129, "defaulthostexecutionspac": 129, "veri": 129, "simplest": 129, "us": [129, 143, 186, 197, 201, 202, 218, 220, 221, 223, 227], "Not": 129, "Being": 129, "more": 129, "default": [129, 201], "facil": [129, 135], "initargu": 130, "see": [130, 131, 132, 134, 137, 138], "also": [130, 131, 132, 134, 137, 138], "initializationset": 131, "semant": [133, 134, 143, 144, 145, 146, 159, 170], "cudaspac": 135, "cudahostpinnedspac": 135, "cudauvmspac": 135, "hipspac": 135, "hiphostpinnedspac": 135, "hipmanagedspac": 135, "sycldeviceusmspac": 135, "syclhostusmspac": 135, "syclsharedusmspac": 135, "hostspac": 135, "sharedspac": [135, 223], "sharedhostpinnedspac": 135, "memoryspaceconcept": 135, "bit": 136, "manipul": 136, "mathemat": [137, 208], "constant": 137, "math": 138, "parallelfortag": 140, "parallelreducetag": 141, "parallelscantag": 142, "fenc": 143, "time": 143, "kernel": [143, 191, 224], "asynchron": 143, "deep": [143, 201], "parallel_for": 144, "parallel_reduc": 145, "parallel_scan": 146, "what": [147, 201, 228], "mdrangepolici": [148, 221], "specif": 148, "nestedpolici": 149, "list": [149, 186], "perteam": 149, "perthread": 149, "teamthreadrang": [149, 154], "teamthreadmdrang": [149, 153], "teamvectorrang": [149, 156], "teamvectormdrang": [149, 155], "threadvectorrang": [149, 158], "threadvectormdrang": [149, 157], "rangepolici": [150, 221], "initarg": 150, "teamhandleconcept": 151, "teampolici": 152, "partition_spac": 159, "pair": 160, "convers": [160, 201], "abort": 161, "complex": 163, "device_id": 164, "num_thread": 166, "timer": 167, "subview": [168, 176, 200], "create_mirror": 169, "_view": 169, "deep_copi": 170, "thing": 170, "you": [170, 201], "can": [170, 201], "cannot": 170, "do": [170, 201, 228], "how": [170, 195, 200, 201, 228], "get": [170, 201], "layout": [170, 177, 198, 201], "incompat": 170, "layoutleft": 171, "layoutright": 172, "layoutstrid": 173, "realloc": 174, "resiz": [175, 201], "enum": 177, "data": [177, 193, 201], "dimens": [177, 200, 201], "stride": [177, 201], "other": [177, 185, 201, 205], "nonmemb": 177, "view_alloc": 178, "like": 179, "simd": [180, 181, 199], "templat": [181, 182, 183, 225, 226], "width": [181, 182], "load": [181, 183], "store": [181, 183], "method": [181, 182, 183], "valu": [181, 182, 219], "arithmet": 181, "comparison": [181, 182], "cmath": 181, "global": [181, 182], "simd_mask": 182, "boolean": 182, "where_express": 183, "where": 183, "gather": 183, "scatter": 183, "10": 184, "1": [184, 186, 188, 191, 192, 193, 194, 196, 197, 198, 200, 201, 224], "write": 184, "conflict": 184, "Their": 184, "resolut": 184, "With": 184, "2": [184, 186, 189, 191, 192, 193, 196, 197, 198, 200, 201, 224], "free": [184, 205], "3": [184, 186, 190, 191, 192, 193, 196, 197, 198, 200, 201, 205, 212, 227], "4": [184, 186, 191, 192, 193, 197, 198, 201, 212], "12": [185, 193], "backward": 185, "futur": 185, "user": 185, "defin": 185, "abi": 185, "deprec": [185, 205], "header": [185, 192, 205], "right": 185, "reserv": 185, "miscellan": 185, "proof": 185, "compil": [186, 212, 215, 217], "cmake": [186, 202, 207], "build": [186, 202, 212], "system": [186, 212], "instal": [186, 202], "packag": [186, 202], "tree": 186, "generate_makefil": 186, "bash": 186, "spack": [186, 202], "develop": [186, 202], "keyword": [186, 207], "trilino": 186, "branch": 186, "gnu": 186, "makefil": [186, 202], "5": [186, 192, 197, 198, 201], "6": [186, 198, 201], "restrict": [186, 191], "9": [187, 188, 189, 190], "custom": [187, 189, 190], "8": 191, "hierarch": 191, "motiv": [191, 196], "creat": [191, 201], "instanc": [191, 196], "scratch": 191, "pad": 191, "loop": [191, 197], "barrier": 191, "singl": [191, 222], "executor": 191, "0": 192, "includ": 192, "command": 192, "line": 192, "struct": 192, "code": [192, 193, 195, 199, 223, 224, 228], "13": 193, "interoper": 193, "legaci": 193, "structur": [193, 220, 225], "raw": [193, 201, 202], "alloc": [193, 220], "through": [193, 227], "extern": 193, "fundament": 193, "own": 193, "call": 193, "14": 195, "virtual": [195, 228], "v": [195, 228], "tabl": [195, 228], "pointer": [195, 201, 228], "eri": [195, 228], "annoi": [195, 228], "gpu": [195, 228], "Then": [195, 228], "why": [195, 201, 228], "doesn": [195, 228], "t": [195, 201, 228], "fix": [195, 228], "thi": [195, 201, 228], "complic": [195, 228], "question": [195, 206, 228], "follow": [195, 228], "up": [195, 228], "machin": 196, "model": [196, 198, 206], "abstract": 196, "program": [196, 198, 206, 211, 220], "safeti": 196, "7": [197, 201, 205], "specifi": [197, 201], "bodi": 197, "lambda": 197, "should": 197, "i": [197, 201, 228], "join": 197, "init": 197, "arrai": [197, 201, 220, 221, 225], "result": 197, "scan": 197, "name": [197, 202], "rang": 198, "15": 199, "background": 199, "idea": 199, "deal": [199, 226], "remaind": 199, "condit": [199, 227], "ternari": 199, "perform": [199, 206, 217, 224], "11": 200, "slice": 200, "take": 200, "deduct": 200, "degener": 200, "obtain": 200, "multidimension": [201, 220], "need": [201, 228], "mai": 201, "make": 201, "probabl": 201, "don": 201, "want": 201, "s": 201, "realli": [201, 228], "const": 201, "entri": 201, "index": 201, "refer": [201, 221], "lifetim": 201, "depend": 201, "explicitli": 201, "placement": 201, "hostmirror": 201, "unmanag": 201, "special": 201, "philosophi": 202, "known": [202, 208], "knownissu": 202, "crai": 202, "fortran": [202, 220], "inlin": 202, "vs": 202, "uvm": 202, "cite": 203, "contribut": 204, "x": [205, 212], "namespac": 205, "updat": 205, "portabl": [206, 228], "websit": 206, "content": 206, "devic": [207, 224, 228], "enabl": 207, "tpl": 207, "licens": 209, "guid": 211, "test": [213, 216, 217], "track": 213, "feedback": 214, "report": 214, "attach": 215, "identif": 215, "support": 215, "b": 215, "file": 215, "promot": 215, "txt": 215, "process": 216, "chang": 216, "pull": 216, "request": 216, "nightli": 216, "integr": 216, "releas": 216, "workflow": 217, "compon": 217, "softwar": 217, "git": 217, "repositori": 217, "platform": 217, "batch": 217, "queue": 217, "comput": [217, 219, 224], "account": 217, "script": 217, "unit": 217, "case": [218, 220, 221, 227, 228], "averag": 219, "element": 219, "node": 219, "adjac": 219, "full": 219, "interop": 220, "multi": 221, "dimension": 221, "formul": 221, "mpi": 222, "halo": 222, "exchang": 222, "send": 222, "messag": 222, "awar": 222, "separ": 222, "out": 222, "identifi": 222, "subset": 222, "indic": 222, "extract": 222, "from": 223, "kokkos_enable_cuda_uvm": 223, "altern": 223, "transit": 223, "overlap": 224, "host": 224, "actor": [224, 227], "subject": [224, 227], "assumpt": [224, 227], "constraint": [224, 227], "precondit": [224, 227], "while": 224, "cabana": 225, "soa": 225, "aosoa": 225, "pre": 226, "17": 226, "post": 227, "recurs": 227, "fibonacci": 227, "flow": 227, "n": 227, "divid": 227, "graph": 227, "down": 227, "bf": 227, "But": 228, "side": 228, "doe": 228, "nvcc": 228, "solv": 228, "window": 229, "h": 229, "video": 230, "lectur": 230, "slide": 230}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})