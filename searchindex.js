Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/complex", "API/core/utilities/device_id", "API/core/utilities/experimental", "API/core/utilities/num_threads", "API/core/utilities/printf", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "deprecation_page", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "requirements", "templates/class_api", "templates/index", "testing-and-issue-tracking", "testing-and-issue-tracking/Kokkos-Project-Planning", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/VirtualFunctions", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.rst", "API/algorithms/Sort.rst", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.rst", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.md", "API/algorithms/std-algorithms/all/StdAllOf.md", "API/algorithms/std-algorithms/all/StdAnyOf.md", "API/algorithms/std-algorithms/all/StdCopy.md", "API/algorithms/std-algorithms/all/StdCopyBackward.md", "API/algorithms/std-algorithms/all/StdCopyIf.md", "API/algorithms/std-algorithms/all/StdCopy_n.md", "API/algorithms/std-algorithms/all/StdCount.md", "API/algorithms/std-algorithms/all/StdCountIf.md", "API/algorithms/std-algorithms/all/StdEqual.md", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.md", "API/algorithms/std-algorithms/all/StdFindEnd.md", "API/algorithms/std-algorithms/all/StdFindFirstOf.md", "API/algorithms/std-algorithms/all/StdFindIf.md", "API/algorithms/std-algorithms/all/StdFindIfNot.md", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.md", "API/algorithms/std-algorithms/all/StdGenerate_n.md", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.md", "API/algorithms/std-algorithms/all/StdIsSorted.md", "API/algorithms/std-algorithms/all/StdIsSortedUntil.md", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.md", "API/algorithms/std-algorithms/all/StdMinElement.md", "API/algorithms/std-algorithms/all/StdMinMaxElement.md", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.md", "API/algorithms/std-algorithms/all/StdMoveBackward.md", "API/algorithms/std-algorithms/all/StdNoneOf.md", "API/algorithms/std-algorithms/all/StdPartitionCopy.md", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.md", "API/algorithms/std-algorithms/all/StdRemoveCopy.md", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.md", "API/algorithms/std-algorithms/all/StdRemoveIf.md", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.md", "API/algorithms/std-algorithms/all/StdReverseCopy.md", "API/algorithms/std-algorithms/all/StdRotate.md", "API/algorithms/std-algorithms/all/StdRotateCopy.md", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.md", "API/algorithms/std-algorithms/all/StdShiftRight.md", "API/algorithms/std-algorithms/all/StdSwapRanges.md", "API/algorithms/std-algorithms/all/StdTransform.md", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.md", "API/algorithms/std-algorithms/all/StdUniqueCopy.md", "API/alphabetical.rst", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.rst", "API/containers/DynRankView.rst", "API/containers/DynamicView.rst", "API/containers/Offset-View.rst", "API/containers/ScatterView.rst", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.rst", "API/containers/vector.rst", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_compare_exchange.rst", "API/core/atomics/atomic_compare_exchange_strong.rst", "API/core/atomics/atomic_exchange.rst", "API/core/atomics/atomic_fetch_op.rst", "API/core/atomics/atomic_load.rst", "API/core/atomics/atomic_op.rst", "API/core/atomics/atomic_op_fetch.rst", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.rst", "API/core/c_style_memory_management/malloc.rst", "API/core/c_style_memory_management/realloc.rst", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.rst", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.rst", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.rst", "API/core/policies/TeamPolicy.rst", "API/core/policies/TeamThreadMDRange.rst", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.rst", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.rst", "API/core/policies/ThreadVectorRange.rst", "API/core/spaces/partition_space.rst", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/complex.rst", "API/core/utilities/device_id.rst", "API/core/utilities/experimental.md", "API/core/utilities/num_threads.rst", "API/core/utilities/printf.rst", "API/core/utilities/timer.rst", "API/core/view/Subview_type.rst", "API/core/view/create_mirror.rst", "API/core/view/deep_copy.rst", "API/core/view/layoutLeft.rst", "API/core/view/layoutRight.rst", "API/core/view/layoutStride.rst", "API/core/view/realloc.rst", "API/core/view/resize.rst", "API/core/view/subview.rst", "API/core/view/view.rst", "API/core/view/view_alloc.rst", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.md", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.rst", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.md", "building.md", "citation.rst", "contributing.rst", "deprecation_page.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "requirements.rst", "templates/class_api.rst", "templates/index.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Kokkos-Project-Planning.md", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.rst", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/VirtualFunctions.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code>", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScopeGuard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_space</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::device_id</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::num_threads</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::printf</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::where_expression</span></code>", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Deprecation for Kokkos-3.x", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Requirements", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CoolerView</span></code>", "Documentation Templates", "Kokkos Planning and Testing", "Kokkos Project Planning", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Virtual Functions", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 131, 132, 134, 135, 178, 199], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 89, 121, 127, 129, 131, 132, 134, 136, 137, 144, 151, 159, 163, 164, 166, 168, 178, 182, 183, 185, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 209, 219, 220, 225, 226, 229, 231], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 94, 134, 135, 148, 150, 182, 183, 185, 186, 189, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 213, 217, 219, 221], "sort": [0, 3, 36, 37, 82, 206], "nest": [0, 77, 87, 92, 94, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 172, 173, 186, 189, 196, 197, 198, 199, 225, 230, 232, 234], "polici": [0, 72, 83, 87, 140, 141, 142, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 187, 191, 193, 194, 198, 206, 225, 228, 230], "team": [0, 72, 85, 87, 94, 140, 141, 142, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 189, 194, 196, 197, 198, 205, 217, 218, 220, 221, 231, 232], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 92, 94, 129, 131, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 166, 185, 187, 188, 189, 193, 195, 198, 199, 202, 203, 207, 208, 221, 228, 231, 234], "level": [0, 87, 88, 94, 144, 149, 151, 152, 186, 187, 192, 195, 198, 202, 203, 204, 207, 221], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 89, 91, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 129, 131, 132, 138, 139, 143, 144, 145, 146, 148, 154, 156, 158, 159, 160, 163, 167, 169, 170, 171, 177, 178, 179, 182, 183, 184, 200, 201, 202, 206, 229, 232], "header": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 187, 210, 214, 229, 233], "file": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 193, 208, 214, 220, 225, 233], "kokkos_cor": [1, 2, 76, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 186, 191, 193, 206, 209, 214, 227, 232, 233], "hpp": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 191, 193, 200, 206, 209, 214, 224, 225, 227, 229, 232, 233], "kokkos_complex": [1, 206], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 135, 136, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 169, 170, 171, 175, 176, 177, 178, 179, 180, 186, 187, 189, 190, 191, 192, 194, 198, 200, 202, 205, 214, 224, 225, 227], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 91, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 139, 144, 145, 146, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 214, 215, 226, 229, 230, 232], "struct": [1, 2, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 48, 51, 52, 56, 67, 69, 72, 81, 84, 94, 118, 119, 121, 124, 129, 130, 132, 134, 135, 140, 141, 142, 144, 145, 160, 169, 172, 173, 186, 189, 190, 191, 192, 194, 198, 202, 206, 224, 229, 231, 232], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 51, 52, 56, 75, 77, 79, 81, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 163, 172, 173, 174, 190, 191, 192, 194, 198, 202, 226], "static": [1, 74, 75, 76, 77, 85, 87, 148, 150, 152, 172, 173, 174, 178, 182, 183, 190, 192, 195, 202, 203, 206, 214, 234], "gen_func_typ": 1, "max": [1, 72, 74, 88, 102, 105, 107, 113, 116, 117, 118, 119, 121, 122, 124, 139, 145, 153, 155, 157, 185, 189, 192, 198, 200, 206, 208, 233], "return": [1, 2, 13, 14, 19, 20, 29, 38, 42, 45, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 94, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 139, 144, 150, 151, 152, 154, 156, 158, 159, 160, 163, 164, 166, 167, 168, 169, 170, 171, 177, 178, 182, 183, 184, 185, 186, 190, 191, 192, 194, 197, 200, 202, 206, 214, 223, 224, 225, 226, 227, 228, 231], "type_valu": 1, "draw": [1, 72], "gen": [1, 182, 183], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 134, 135, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 189, 190, 191, 192, 194, 196, 198, 200, 201, 206, 214, 224, 225, 226, 228, 230, 232], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 94, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 177, 192, 197, 198, 201, 202, 220, 221, 225], "start": [1, 18, 24, 33, 50, 51, 60, 66, 69, 71, 72, 74, 82, 94, 129, 135, 136, 144, 145, 146, 148, 149, 150, 152, 168, 182, 186, 189, 192, 193, 194, 198, 202, 203, 217, 221, 224, 226, 228, 231], "end": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 133, 134, 136, 145, 146, 148, 149, 150, 152, 154, 156, 158, 187, 193, 202, 224, 225, 231, 233], "function": [1, 2, 4, 30, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 133, 134, 136, 137, 139, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 163, 168, 169, 170, 174, 186, 187, 190, 191, 192, 193, 194, 195, 199, 200, 201, 208, 212, 217, 222, 223, 224, 225, 226, 228, 230], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 169, 170, 178, 182, 183, 188, 190, 192, 198, 200, 201, 210, 214, 224, 229], "all": [1, 2, 13, 25, 30, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 75, 76, 77, 78, 86, 87, 92, 94, 96, 121, 132, 133, 135, 136, 137, 143, 144, 147, 151, 152, 169, 171, 174, 177, 178, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 213, 217, 219, 220, 221, 225, 227, 231, 232], "list": [1, 2, 72, 82, 97, 138, 139, 148, 177, 179, 180, 185, 193, 195, 197, 202, 203, 210, 213, 217, 218, 219, 220, 221, 225, 226, 231], "here": [1, 39, 40, 41, 72, 84, 87, 129, 133, 134, 135, 144, 147, 152, 185, 192, 193, 196, 197, 198, 200, 202, 205, 213, 220, 221, 226, 228, 232], "ar": [1, 2, 4, 19, 21, 36, 37, 38, 39, 40, 41, 42, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 94, 97, 107, 116, 117, 121, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 153, 155, 157, 164, 165, 166, 169, 170, 171, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 213, 215, 217, 218, 219, 220, 221, 223, 224, 226, 228, 230, 231, 232, 233], "part": [1, 72, 83, 87, 97, 121, 129, 135, 151, 163, 165, 185, 186, 187, 194, 195, 199, 200, 202, 217, 219, 221, 230], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 95, 96, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 157, 159, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 205, 208, 209, 210, 212, 214, 218, 222, 223, 226, 227, 228, 229, 230, 232, 234], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 136, 137, 138, 139, 159, 162, 165, 182, 183, 184, 186, 190, 191, 194, 201, 202, 209], "char": [1, 2, 76, 86, 87, 121, 129, 132, 133, 134, 135, 144, 145, 146, 161, 167, 171, 174, 178, 182, 183, 184, 190, 191, 193, 202, 214, 219, 229, 232], "short": [1, 144, 198], "127": 1, "0xff": 1, "256": [1, 200, 231], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 121, 129, 130, 131, 132, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 166, 169, 171, 174, 177, 178, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 196, 198, 200, 202, 206, 214, 223, 225, 226, 227, 228, 229, 230, 231, 232], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 121, 138, 187, 195, 197, 198, 202, 217], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 137, 138, 139, 160, 172, 173, 174, 197, 198, 200, 226, 229], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 104, 110, 120, 121, 130, 131, 132, 134, 136, 144, 145, 146, 149, 151, 152, 154, 156, 158, 159, 160, 163, 164, 166, 171, 174, 177, 178, 182, 183, 184, 188, 190, 191, 200, 203, 208, 209, 210, 212, 213, 214, 219, 221, 223, 224, 225, 226, 231, 234], "0f": [1, 160], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 94, 129, 132, 133, 134, 138, 143, 145, 154, 156, 158, 162, 163, 168, 169, 177, 178, 182, 183, 184, 185, 189, 192, 194, 198, 200, 201, 202, 214, 223, 224, 225, 226, 227, 228], "0": [1, 2, 11, 18, 24, 33, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 94, 108, 109, 111, 121, 123, 129, 131, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 171, 172, 173, 174, 177, 178, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 198, 199, 200, 202, 203, 208, 210, 213, 214, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232], "complex": [1, 72, 82, 87, 88, 96, 121, 187, 188, 189, 192, 197, 200, 207, 209, 213], "where": [1, 2, 4, 11, 12, 17, 22, 28, 30, 32, 35, 36, 37, 40, 42, 46, 51, 52, 55, 56, 67, 69, 76, 77, 81, 87, 94, 99, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 144, 153, 157, 159, 171, 178, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 206, 208, 213, 217, 221, 223, 224, 225, 228, 229, 230, 231, 232], "maximum": [1, 3, 72, 77, 78, 82, 102, 104, 105, 107, 112, 113, 116, 117, 118, 119, 129, 152, 189, 192], "valu": [1, 2, 4, 11, 17, 19, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 40, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 129, 131, 134, 135, 136, 139, 144, 145, 146, 150, 151, 152, 154, 156, 158, 160, 170, 171, 177, 178, 184, 185, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 208, 226, 232], "xorshift": 1, "given": [1, 4, 66, 75, 78, 79, 81, 84, 85, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 128, 129, 136, 148, 150, 151, 152, 165, 169, 171, 174, 187, 192, 193, 194, 198, 199, 200, 201, 202, 203, 220, 226, 230, 231], "follow": [1, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 91, 92, 97, 121, 129, 135, 138, 144, 151, 171, 178, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 198, 200, 201, 202, 203, 206, 208, 209, 210, 213, 215, 219, 221, 223], "enum": [1, 129, 135, 202], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35], "2": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 121, 130, 134, 146, 151, 153, 155, 157, 159, 160, 171, 174, 175, 176, 177, 178, 182, 188, 189, 191, 200, 208, 210, 212, 213, 214, 219, 221, 231, 232, 234], "int64_t": [1, 78, 85, 146, 148, 150, 182, 183], "kokkos_random": [1, 2, 206], "provid": [1, 72, 75, 76, 77, 78, 80, 84, 87, 89, 91, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 132, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 150, 151, 152, 159, 160, 170, 171, 172, 173, 174, 178, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 207, 210, 217, 218, 219, 220, 221, 224, 225, 229, 231, 232], "structur": [1, 4, 72, 76, 94, 97, 131, 178, 193, 197, 199, 201, 202, 222, 223, 225, 226, 230, 231, 234], "necessari": [1, 75, 76, 87, 91, 94, 144, 178, 187, 188, 192, 194, 202, 203, 217, 221, 223, 226, 232], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 135, 150, 151, 178, 182, 184, 186, 189, 192, 195, 197, 199, 201, 202, 213, 217, 219, 220, 221, 224], "base": [1, 21, 36, 40, 76, 77, 81, 82, 84, 87, 94, 131, 182, 183, 186, 187, 192, 195, 196, 198, 200, 201, 202, 208, 217, 218, 220, 221, 225, 226, 229, 230, 231, 232, 234], "vigna": 1, "sebastiano": 1, "2014": [1, 197, 204], "an": [1, 2, 4, 11, 18, 22, 24, 25, 28, 29, 33, 34, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 92, 94, 107, 115, 121, 123, 127, 129, 133, 134, 135, 136, 138, 143, 144, 145, 146, 148, 150, 151, 152, 155, 159, 160, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 205, 207, 209, 217, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 93, 96, 127, 128, 136, 137, 138, 139, 159, 181, 186, 192, 193, 200, 206, 208, 213, 221, 223], "explor": [1, 87, 144, 195, 217], "marsaglia": 1, "s": [1, 75, 77, 79, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 129, 131, 144, 145, 151, 160, 162, 169, 171, 177, 178, 182, 187, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 210, 214, 217, 221, 226, 228, 229, 230, 232], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 136, 139, 144, 145, 147, 150, 151, 152, 159, 164, 166, 178, 187, 189, 191, 192, 193, 196, 197, 198, 201, 202, 203, 205, 208, 209, 213, 215, 221, 232], "http": [1, 84, 138, 144, 204, 207, 219], "arxiv": 1, "org": [1, 84, 138, 144, 187, 204], "ab": [1, 138, 182], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 38, 39, 40, 41, 42, 45, 48, 61, 62, 63, 64, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 88, 89, 90, 91, 94, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 144, 145, 146, 147, 148, 151, 152, 157, 159, 163, 167, 170, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 208, 209, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 233], "themselv": [1, 94, 197, 198, 199, 217], "have": [1, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 82, 87, 88, 91, 94, 121, 129, 131, 132, 139, 143, 144, 151, 153, 154, 155, 156, 170, 174, 175, 176, 178, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 209, 213, 217, 219, 220, 221, 223, 226, 229, 230, 231, 232], "two": [1, 2, 11, 12, 22, 34, 36, 39, 40, 41, 42, 46, 48, 69, 75, 77, 78, 81, 87, 94, 121, 129, 131, 134, 135, 136, 150, 159, 171, 185, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 214, 217, 218, 220, 221, 223, 224, 225, 226, 232, 233], "compon": [1, 163, 174, 197, 216, 220], "state": [1, 72, 75, 81, 87, 133, 192, 198, 200, 202], "pool": [1, 72, 192, 202], "actual": [1, 77, 129, 135, 147, 151, 152, 178, 185, 192, 194, 197, 198, 199, 202, 203, 208, 219, 220, 221], "A": [1, 2, 22, 34, 41, 46, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 132, 140, 141, 142, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 162, 169, 170, 171, 172, 173, 174, 177, 178, 185, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 210, 214, 217, 221, 224, 228, 230, 231, 232], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 88, 97, 127, 128, 178, 187, 197, 203, 207, 218, 226, 234], "so": [1, 2, 82, 87, 91, 94, 129, 144, 185, 186, 187, 192, 193, 194, 196, 197, 198, 200, 201, 202, 205, 213, 218, 219, 221, 224, 228, 232], "each": [1, 2, 4, 11, 23, 30, 31, 32, 62, 67, 68, 69, 72, 75, 76, 78, 82, 85, 87, 94, 138, 144, 145, 152, 153, 155, 157, 159, 160, 172, 173, 174, 178, 185, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 215, 217, 219, 220, 221, 223, 225, 226, 229, 231, 232], "activ": [1, 23, 24, 53, 56, 88, 187, 192, 198, 203, 208, 221], "abl": [1, 76, 94, 129, 135, 144, 178, 179, 185, 192, 195, 197, 200, 202, 206, 226], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 132, 136, 151, 159, 160, 175, 178, 185, 186, 187, 189, 192, 193, 194, 195, 197, 198, 201, 202, 203, 217, 218, 220, 221, 223, 230], "own": [1, 75, 159, 185, 201, 202, 203, 217, 219, 226], "thi": [1, 2, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 75, 76, 77, 79, 81, 82, 87, 91, 94, 121, 129, 132, 133, 134, 135, 138, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 163, 170, 171, 172, 173, 174, 175, 176, 178, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 207, 208, 209, 210, 213, 215, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 94, 129, 131, 134, 135, 145, 147, 151, 152, 153, 155, 157, 170, 172, 173, 174, 178, 179, 185, 186, 187, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 217, 220, 227, 228, 230, 232], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 159, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 217, 218, 221, 224, 226, 227, 228, 229, 230, 232], "independ": [1, 72, 99, 135, 152, 198, 202, 217, 221, 234], "between": [1, 11, 37, 54, 65, 69, 72, 76, 81, 82, 92, 97, 151, 159, 170, 171, 178, 186, 187, 192, 195, 197, 200, 202, 209, 214, 217, 219, 225, 226, 227, 228], "note": [1, 37, 76, 77, 78, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 143, 144, 150, 151, 152, 159, 171, 178, 185, 187, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 217, 221, 224, 228, 231, 232], "contrast": [1, 136, 149, 154, 156, 158, 192, 202, 217], "curand": 1, "none": [1, 4, 23, 25, 32, 53, 56, 57, 126, 140, 141, 142, 183, 187, 195, 197, 221, 224, 232], "collect": [1, 151, 192, 195, 198, 199, 201, 217, 221, 226, 229], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 34, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 113, 115, 117, 118, 121, 124, 126, 127, 128, 129, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 171, 174, 175, 176, 178, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 213, 214, 217, 221, 225, 226, 228, 230], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 87, 88, 92, 121, 126, 127, 128, 129, 131, 133, 135, 137, 139, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 170, 171, 175, 176, 178, 182, 183, 186, 187, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 213, 214, 217, 219, 220, 221, 227, 232], "can": [1, 2, 4, 11, 21, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 75, 76, 77, 78, 81, 84, 85, 87, 88, 94, 121, 129, 130, 131, 134, 135, 139, 144, 145, 148, 149, 150, 151, 152, 157, 158, 174, 175, 176, 178, 179, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 207, 215, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 230, 232], "call": [1, 2, 11, 17, 21, 22, 28, 30, 35, 36, 40, 42, 46, 48, 51, 52, 55, 56, 67, 69, 74, 75, 77, 79, 85, 86, 87, 90, 94, 104, 121, 127, 128, 129, 131, 132, 133, 134, 138, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 175, 176, 178, 182, 183, 184, 185, 187, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 209, 221, 224, 226, 228, 232], "insid": [1, 2, 81, 85, 87, 94, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 165, 186, 187, 192, 194, 197, 198, 202, 230, 231, 232, 233], "condit": [1, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 76, 178, 185, 192, 194, 197, 198, 210, 220, 228], "devic": [1, 72, 74, 75, 76, 80, 81, 82, 87, 88, 92, 129, 131, 135, 137, 138, 160, 164, 166, 170, 171, 178, 187, 193, 194, 195, 196, 198, 202, 203, 209, 220, 221, 222, 226, 227, 229], "public": [1, 75, 76, 77, 79, 81, 82, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 129, 135, 145, 149, 151, 152, 154, 156, 158, 163, 165, 174, 184, 186, 191, 196, 198, 205, 214, 217, 226, 230, 232], "typedef": [1, 75, 76, 77, 79, 81, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 149, 150, 151, 152, 154, 156, 158, 163, 168, 172, 173, 174, 186, 189, 190, 191, 192, 194, 198, 202, 224, 228], "device_typ": [1, 75, 76, 77, 81, 87, 129, 135, 170, 178, 202], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 80, 81, 82, 84, 85, 87, 94, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 135, 137, 138, 143, 144, 145, 146, 148, 150, 151, 159, 161, 163, 167, 168, 171, 175, 176, 178, 182, 184, 185, 186, 191, 192, 194, 196, 198, 200, 202, 206, 209, 214, 224, 226, 227, 228, 230, 231, 232], "init": [1, 22, 34, 67, 72, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 191, 226], "num_stat": 1, "get_stat": 1, "free_stat": 1, "intial": 1, "us": [1, 2, 4, 11, 15, 16, 18, 21, 22, 23, 24, 25, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 90, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 169, 170, 175, 176, 177, 178, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 220, 221, 223, 226, 228, 229, 230, 232, 233], "establish": [1, 221, 225], "pool_siz": 1, "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 93, 148, 150, 187, 193, 195, 198, 200, 202, 208, 213, 219, 221], "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 130, 131, 132, 133, 144, 145, 146, 160, 163, 164, 166, 171, 174, 178, 179, 182, 183, 184, 187, 188, 190, 191, 192, 194, 196, 197, 198, 212, 214, 217, 219, 221, 227, 228, 232], "make": [1, 75, 76, 87, 94, 136, 144, 151, 178, 185, 186, 187, 189, 192, 196, 197, 198, 200, 203, 205, 217, 219, 224, 226, 227, 230, 232], "process": [1, 89, 135, 187, 193, 199, 200, 201, 203, 207, 216, 221], "platform": [1, 83, 182, 183, 207, 218, 220, 229], "determinist": [1, 48, 69, 199], "request": [1, 75, 77, 129, 140, 141, 142, 145, 151, 152, 192, 193, 197, 199, 205, 208, 217, 218, 219, 221], "lock": [1, 194, 197, 199, 200, 202], "guarante": [1, 75, 76, 79, 92, 94, 129, 135, 144, 145, 146, 165, 178, 186, 187, 194, 197, 198, 199, 200, 227, 231], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 94, 99, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 134, 135, 138, 144, 145, 146, 147, 170, 178, 182, 183, 185, 187, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 217, 220, 221, 223, 224, 230, 231, 232], "privat": [1, 79, 87, 151, 163, 186, 188, 191, 192, 198, 217, 226], "get": [1, 75, 87, 94, 97, 133, 144, 151, 152, 174, 185, 192, 193, 194, 196, 197, 200, 201, 203, 205, 217, 219, 229, 231, 232], "cuda": [1, 72, 75, 85, 87, 88, 93, 135, 144, 148, 150, 152, 159, 171, 192, 193, 195, 198, 199, 200, 202, 207, 208, 213, 219, 220, 221, 227, 228], "involv": [1, 87, 147, 220, 225], "atom": [1, 72, 76, 81, 83, 99, 100, 101, 102, 103, 104, 105, 106, 178, 192, 194, 197, 199, 212, 231, 234], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 134, 136, 171, 178, 184, 185, 187, 192, 193, 197, 198, 199, 200, 202, 206, 208, 219, 228, 230], "upon": [1, 84, 87, 129, 143, 186, 195, 217], "complet": [1, 77, 94, 129, 143, 187, 188, 192, 197, 202, 203, 217, 221, 228, 231], "unlock": 1, "updat": [1, 72, 75, 82, 99, 100, 101, 102, 103, 104, 105, 106, 185, 187, 192, 198, 202, 213, 217, 219, 221, 226, 228, 231], "statu": 1, "onc": [1, 72, 94, 133, 134, 192, 193, 199, 202, 203, 208, 217, 226, 228], "again": [1, 87, 187, 194, 202, 203, 208, 221], "becom": [1, 59, 60, 79, 94, 135, 197, 217, 221, 225], "avail": [1, 74, 77, 81, 82, 87, 88, 97, 129, 131, 135, 136, 137, 138, 139, 152, 182, 183, 187, 192, 195, 197, 198, 200, 202, 203, 217, 220, 221, 223, 225, 226], "within": [1, 2, 4, 79, 82, 92, 129, 134, 144, 145, 146, 148, 151, 187, 192, 197, 199, 202, 224, 225, 226], "select": [1, 72, 74, 91, 131, 162, 177, 184, 195, 197, 202, 213, 217, 220, 221, 231], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 91, 92, 94, 97, 118, 119, 121, 124, 129, 130, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 160, 163, 169, 170, 171, 174, 178, 179, 180, 182, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 210, 213, 217, 219, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232], "next": [1, 217, 219, 221, 228, 231], "step": [1, 4, 192, 194, 195, 200, 202, 217, 219, 220, 221, 226], "develop": [1, 91, 144, 192, 195, 197, 199, 202, 205, 207, 213, 218, 219, 220, 221], "functor": [1, 2, 11, 21, 22, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 48, 67, 69, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 182, 183, 192, 194, 197, 202, 225, 226, 228, 230], "desir": [1, 48, 67, 69, 77, 146, 159, 170, 187, 198, 202, 217, 219, 220, 221], "type": [1, 11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 92, 94, 95, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 135, 136, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 167, 169, 170, 171, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 207, 212, 214, 219, 221, 224, 225, 226, 229, 232], "devicetyp": [1, 129, 135, 229], "respect": [1, 76, 121, 138, 170, 171, 175, 176, 178, 189, 192, 197, 202], "x": [1, 72, 137, 138, 174, 175, 176, 182, 184, 189, 194, 198, 200, 202, 207, 214, 224, 228], "idx": [1, 224], "just": [1, 2, 75, 87, 88, 94, 129, 135, 144, 147, 171, 174, 185, 193, 198, 200, 202, 203, 205, 208, 219, 223, 226], "give": [1, 88, 94, 186, 193, 194, 198, 199, 200, 202, 219], "argument": [1, 11, 17, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 75, 76, 77, 79, 92, 94, 97, 130, 131, 132, 134, 138, 143, 144, 145, 146, 151, 152, 154, 156, 158, 169, 170, 171, 177, 178, 179, 182, 183, 184, 186, 191, 192, 198, 201, 202, 206, 209, 225, 227], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 182, 183, 206], "urand": 1, "For": [1, 2, 59, 75, 76, 94, 121, 129, 135, 136, 139, 144, 150, 153, 155, 157, 159, 171, 177, 178, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 215, 217, 221, 225, 226, 227, 232], "32": [1, 2, 192, 194, 202, 221], "bit": [1, 72, 74, 87, 89, 144, 178, 183, 196, 198, 200, 201, 202, 232], "unsign": [1, 74, 75, 76, 77, 80, 102, 105, 136, 178, 201, 202, 227], "integ": [1, 59, 60, 75, 76, 81, 85, 94, 136, 138, 144, 148, 150, 177, 178, 192, 198, 200, 202, 224], "three": [1, 75, 87, 138, 143, 185, 186, 187, 192, 195, 197, 198, 200, 202, 203, 217, 220, 225], "option": [1, 72, 75, 76, 81, 85, 94, 129, 131, 144, 145, 146, 148, 178, 186, 187, 189, 192, 193, 194, 195, 198, 202, 203, 217, 219, 220, 221, 225, 227, 229, 230], "shown": [1, 55, 87, 121, 192, 197, 225], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 92, 94, 127, 129, 134, 151, 159, 160, 172, 177, 178, 182, 183, 184, 187, 189, 192, 193, 194, 196, 197, 198, 202, 205, 206, 217, 224, 225, 228, 232], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 85, 88, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 130, 131, 135, 140, 141, 142, 144, 145, 148, 150, 151, 152, 160, 163, 168, 171, 172, 173, 174, 175, 176, 178, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 203, 208, 214, 217, 221, 225, 232], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 94, 129, 148, 149, 151, 153, 154, 155, 156, 157, 158, 182, 183, 185, 189, 192, 193, 198, 200, 201, 202, 203, 220, 223, 225, 230], "possibl": [1, 11, 17, 22, 28, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 87, 94, 132, 145, 152, 178, 186, 193, 194, 198, 199, 200, 201, 202, 210, 213, 217, 220, 226], "data": [1, 72, 74, 75, 76, 77, 79, 80, 81, 82, 94, 97, 129, 130, 131, 143, 160, 163, 167, 170, 171, 185, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 207, 210, 214, 217, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234], "defin": [1, 42, 72, 76, 78, 83, 87, 88, 92, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 150, 151, 154, 156, 158, 161, 162, 164, 165, 166, 167, 169, 170, 178, 180, 182, 183, 187, 190, 191, 192, 194, 197, 198, 202, 206, 220, 221, 223, 224, 229, 233], "abov": [1, 86, 129, 136, 138, 185, 187, 192, 195, 198, 200, 201, 202, 210, 221, 225, 226, 231], "And": [1, 72, 107, 194, 204, 230], "also": [1, 11, 21, 25, 28, 30, 35, 42, 46, 51, 52, 56, 75, 76, 77, 78, 81, 84, 87, 94, 121, 129, 135, 139, 144, 145, 151, 152, 160, 164, 166, 174, 178, 185, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 217, 218, 219, 220, 221, 225, 228, 230], "64": [1, 2, 198, 200, 202], "latter": [1, 94, 145, 178, 192, 197, 202, 221], "cover": [1, 76, 178, 198, 219, 220], "user": [1, 75, 76, 77, 81, 87, 90, 94, 127, 129, 130, 133, 134, 144, 145, 146, 148, 152, 178, 180, 187, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 217, 220, 226, 227, 231, 232, 233], "more": [1, 76, 77, 78, 87, 94, 121, 132, 135, 144, 147, 178, 185, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 225, 230, 231], "other": [1, 46, 75, 76, 77, 78, 82, 87, 92, 94, 134, 135, 144, 145, 146, 151, 153, 154, 155, 156, 159, 170, 171, 172, 173, 174, 185, 187, 192, 194, 196, 197, 198, 199, 200, 201, 203, 207, 208, 210, 213, 214, 217, 219, 221, 224, 226, 227, 230, 232], "scalar": [1, 75, 76, 77, 78, 82, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 145, 163, 171, 178, 182, 183, 185, 188, 189, 191, 192, 194, 198, 209], "uint64_t": [1, 182, 183], "int32_t": [1, 182, 183, 184], "normal": [1, 72, 185, 187, 198, 202, 221], "distribut": [1, 72, 195, 201, 204, 210, 221, 226], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 132, 133, 134, 145, 146, 151, 162, 169, 170, 172, 173, 174, 175, 176, 177, 179, 185, 187, 189, 191, 192, 193, 195, 197, 198, 200, 206, 208, 212, 214, 221, 223, 224, 225, 226, 227, 228, 234], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 182, 183, 189, 192, 194, 196, 198, 202, 232], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 94, 121, 130, 131, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 170, 171, 174, 175, 176, 178, 180, 182, 183, 184, 186, 187, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 210, 214, 217, 219, 220, 221, 224, 227, 229, 232, 233], "main": [1, 2, 76, 86, 97, 121, 130, 131, 132, 133, 134, 144, 145, 146, 165, 171, 174, 178, 182, 183, 184, 187, 190, 191, 193, 200, 202, 203, 214, 217, 224, 227, 228, 232], "argc": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 171, 174, 178, 182, 183, 184, 190, 191, 193, 214, 232], "argv": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 171, 174, 178, 182, 183, 184, 190, 191, 193, 214, 232], "scopeguard": [1, 72, 134, 206], "guard": [1, 132], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 152, 178, 185, 190, 191, 192, 193, 225], "1000000": [1, 171], "count": [1, 7, 13, 14, 27, 45, 62, 74, 76, 77, 87, 94, 136, 144, 145, 146, 149, 154, 156, 158, 178, 185, 192, 198, 201, 230], "parallel_reduc": [1, 72, 79, 87, 90, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 141, 143, 147, 149, 152, 153, 154, 155, 156, 157, 158, 189, 190, 191, 192, 198, 199, 206, 225, 226, 227], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 121, 129, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 178, 185, 189, 190, 191, 192, 194, 196, 198, 202, 214, 223, 224, 225, 226, 228, 230, 232], "local_count": 1, "acquir": [1, 76, 87, 178, 193, 194, 199, 202], "engin": [1, 187, 197, 199, 202, 204, 210], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 94, 131, 132, 137, 139, 144, 145, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 170, 171, 177, 184, 189, 192, 200, 201, 209, 223, 224, 225, 231, 232], "drand": 1, "y": [1, 182, 194, 200, 202, 224, 228], "do": [1, 2, 24, 25, 46, 53, 56, 69, 75, 83, 87, 94, 99, 100, 101, 129, 132, 133, 135, 143, 144, 147, 178, 185, 186, 187, 189, 192, 193, 196, 197, 198, 199, 200, 201, 203, 205, 209, 217, 219, 224, 226, 227, 228, 230], "forget": 1, "releas": [1, 86, 87, 88, 133, 186, 187, 192, 195, 197, 213, 218, 219, 221], "printf": [1, 94, 96, 121, 144, 145, 146, 174, 182, 183, 189, 190, 191, 232], "pi": [1, 89, 137, 209], "f": [1, 87, 94, 138, 151, 152, 160, 206, 219, 224, 225, 231], "n": [1, 2, 18, 24, 31, 33, 63, 64, 74, 75, 77, 81, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 171, 174, 175, 176, 178, 182, 189, 190, 191, 192, 194, 198, 200, 201, 202, 207, 227, 228, 230, 232], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 82, 88, 129, 135, 136, 137, 138, 139, 149, 150, 152, 153, 154, 155, 156, 157, 158, 164, 166, 174, 177, 178, 190, 191, 200, 201, 204, 208, 212, 214, 217, 219, 221, 225, 227, 234], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 206], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "keyviewtyp": 2, "binop1d": 2, "binop3d": 2, "viewtyp": [2, 75, 129, 169, 170, 177, 178, 202], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 127, 128, 172, 173, 174, 175, 176, 178, 182, 183, 184, 192, 198, 200, 201, 202, 224, 232], "begin": [2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 72, 78, 80, 82, 87, 127, 128, 148, 149, 150, 152, 154, 156, 158, 202, 217, 221, 224, 225, 233], "parallel": [2, 72, 77, 81, 83, 85, 87, 91, 92, 121, 129, 131, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 185, 187, 189, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 207, 212, 223, 226, 228, 230, 231, 232, 234], "teampolici": [2, 72, 76, 85, 87, 94, 129, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 158, 178, 189, 192, 194, 198], "kernel": [2, 11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 94, 144, 148, 150, 151, 152, 159, 171, 178, 185, 187, 194, 197, 198, 199, 202, 203, 207, 208, 221, 227, 231, 234], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 90, 94, 108, 109, 110, 111, 120, 121, 123, 145, 146, 151, 152, 178, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 202, 204, 208, 214, 217, 218, 220, 224, 225, 229, 234], "teamthreadrang": [2, 72, 85, 87, 144, 145, 157, 158, 189, 192, 194], "threadvectorrang": [2, 72, 85, 87, 144, 145, 146, 192], "kokkos_nestedsort": 2, "teammemb": [2, 94, 152, 192], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 57, 72, 75, 84, 87, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 139, 143, 144, 145, 151, 152, 159, 163, 170, 175, 176, 178, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 198, 199, 200, 201, 203, 206, 213, 217, 219, 231], "compar": [2, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 99, 100, 131, 144, 178, 198, 200, 202, 213, 219, 221], "comp": [2, 36, 37, 38, 39, 40, 41], "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 81, 82, 86, 87, 88, 131, 132, 152, 187, 192, 193, 194, 217, 225], "entir": [2, 75, 87, 149, 174, 198, 199, 201, 203, 217, 220, 221, 230, 232], "thei": [2, 75, 78, 87, 88, 94, 129, 132, 133, 135, 137, 144, 147, 159, 171, 185, 186, 192, 196, 198, 199, 200, 202, 213, 217, 218, 219, 220, 221, 223, 226, 230, 232, 233], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 94, 128, 129, 132, 133, 134, 144, 145, 146, 152, 159, 178, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 205, 208, 209, 210, 213, 215, 217, 219, 221, 225, 226, 228, 230, 231], "top": [2, 94, 186, 187, 192, 215, 221], "lambda": [2, 88, 94, 143, 144, 145, 192, 194, 208, 224, 225, 230], "vector": [2, 72, 73, 85, 88, 144, 145, 146, 149, 152, 155, 156, 157, 158, 159, 182, 183, 184, 189, 198, 199, 202, 206, 208, 224, 229], "lane": [2, 72, 85, 149, 155, 156, 157, 158, 182, 192, 199, 200], "either": [2, 75, 76, 80, 81, 85, 94, 113, 115, 117, 131, 144, 145, 151, 171, 175, 176, 178, 184, 186, 187, 190, 191, 192, 193, 198, 202, 203, 219, 221, 231, 233], "loop": [2, 85, 88, 94, 144, 149, 150, 185, 194, 197, 200, 202, 208, 223, 225, 228, 230, 234], "sort_by_kei": 2, "while": [2, 21, 46, 72, 76, 87, 94, 135, 149, 176, 178, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 221, 232], "simultan": [2, 185], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 94, 145, 151, 185, 187, 190, 191, 198, 218, 232], "same": [2, 17, 18, 24, 28, 29, 31, 33, 34, 37, 39, 41, 44, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 82, 84, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 128, 132, 134, 138, 144, 145, 146, 151, 152, 153, 154, 155, 156, 159, 170, 171, 178, 185, 187, 192, 193, 194, 197, 198, 200, 201, 202, 203, 219, 220, 221, 225, 226, 227, 229, 231, 232], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 121, 134, 145, 146, 159, 160, 162, 171, 172, 173, 174, 176, 178, 192, 194, 199, 202, 222, 225, 226, 229], "It": [2, 71, 75, 76, 77, 78, 87, 128, 129, 130, 131, 132, 145, 149, 178, 182, 183, 185, 186, 187, 192, 194, 197, 198, 200, 201, 202, 207, 209, 217, 221, 229, 230], "equival": [2, 39, 40, 41, 70, 71, 78, 92, 129, 151, 177, 178, 187, 192, 198, 200, 201, 202, 224, 229], "kei": [2, 81, 200, 226], "tupl": [2, 148, 229], "accord": [2, 35, 87, 102, 104, 105, 144, 145, 146], "commonli": [2, 197], "entri": [2, 75, 77, 80, 94, 190, 191, 194, 198, 201, 217, 223], "row": [2, 80, 189, 194, 201, 202], "cr": [2, 72, 80], "compress": [2, 80, 202, 226], "spars": [2, 202, 207, 220, 234], "matrix": [2, 189, 201, 202], "requir": [2, 75, 76, 77, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 136, 149, 153, 154, 155, 156, 157, 158, 170, 178, 187, 188, 190, 191, 192, 193, 194, 195, 197, 202, 203, 206, 207, 216, 219, 221, 222, 225, 228, 229, 231], "extent": [2, 75, 76, 77, 78, 80, 129, 153, 155, 157, 171, 172, 173, 174, 175, 176, 177, 178, 185, 198, 202, 214, 217, 223, 224, 230], "version": [2, 72, 76, 84, 91, 129, 130, 131, 132, 134, 137, 138, 178, 186, 187, 193, 196, 198, 200, 203, 208, 214, 217, 219, 220, 221, 232], "take": [2, 76, 77, 78, 85, 87, 92, 94, 102, 104, 105, 129, 134, 135, 137, 145, 147, 152, 172, 173, 174, 185, 186, 191, 192, 193, 197, 198, 199, 200, 202, 206, 209, 214, 219, 221, 223, 225, 228, 234], "object": [2, 11, 22, 30, 75, 76, 81, 86, 87, 88, 107, 131, 132, 133, 134, 135, 136, 149, 151, 174, 178, 184, 187, 191, 192, 193, 194, 198, 200, 202, 206, 230, 232], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 146, 148, 149, 150, 154, 156, 158, 174, 178, 185, 186, 190, 192, 193, 194, 197, 198, 199, 201, 202, 203, 207, 217, 220, 221, 223, 226, 227, 228, 230], "oper": [2, 4, 11, 21, 22, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 132, 135, 138, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 171, 172, 173, 174, 178, 180, 184, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 209, 212, 214, 221, 222, 226, 231, 232, 234], "should": [2, 4, 17, 30, 55, 59, 60, 74, 75, 87, 92, 94, 118, 119, 121, 124, 129, 133, 134, 135, 144, 146, 182, 183, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 201, 202, 203, 206, 213, 217, 219, 221, 226, 232], "member": [2, 75, 77, 79, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 139, 144, 145, 146, 151, 153, 154, 155, 156, 163, 172, 173, 174, 179, 184, 186, 189, 191, 192, 196, 198, 202, 215, 217, 220, 221, 230, 231, 232], "accept": [2, 30, 31, 36, 37, 39, 40, 41, 69, 85, 87, 148, 150, 160, 182, 183, 192, 195, 202, 219, 221, 225], "b": [2, 11, 21, 22, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 143, 144, 153, 154, 155, 156, 157, 158, 163, 170, 178, 182, 183, 184, 192, 194, 198, 200, 202, 214, 231], "bool": [2, 13, 14, 17, 21, 28, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 74, 75, 76, 77, 79, 81, 82, 84, 87, 92, 100, 129, 130, 131, 135, 146, 158, 172, 173, 174, 178, 183, 184, 191, 193, 198, 200, 206, 214, 226], "true": [2, 12, 13, 14, 17, 20, 21, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 82, 92, 94, 100, 129, 130, 131, 134, 135, 153, 154, 155, 156, 157, 158, 159, 171, 172, 173, 177, 178, 183, 184, 185, 187, 191, 194, 200, 202, 214], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 129, 132, 135, 143, 144, 145, 146, 151, 160, 164, 171, 178, 179, 182, 184, 185, 187, 188, 189, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 208, 213, 214, 217, 219, 220, 221, 223, 226, 227, 232], "goe": [2, 202, 217], "befor": [2, 35, 69, 74, 75, 76, 86, 99, 100, 101, 132, 133, 134, 151, 171, 178, 192, 194, 195, 196, 197, 198, 201, 202, 208, 217, 220, 226, 228, 231, 232], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 48, 67, 69, 137, 138, 139, 144, 161, 167, 196, 198, 200, 202, 206, 209, 230, 232], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 135, 136, 137, 139, 160, 162, 172, 173, 174, 178, 182, 183, 200, 208], "preced": [2, 193, 221], "larger": [2, 74, 76, 77, 152, 174, 178, 185, 202, 205], "final": [2, 72, 76, 79, 83, 87, 130, 131, 132, 134, 144, 145, 146, 158, 171, 174, 176, 178, 182, 183, 184, 188, 190, 191, 192, 195, 198, 202, 206, 214, 223, 226, 227, 232], "barrier": [2, 151, 199, 228], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 87, 89, 93, 118, 119, 124, 128, 129, 131, 135, 151, 170, 171, 179, 185, 189, 192, 194, 196, 197, 198, 199, 201, 203, 204, 219, 221, 223, 225, 227, 228, 229, 230, 232, 234], "immedi": [2, 144, 187, 195, 202, 203, 228], "after": [2, 11, 15, 17, 18, 22, 24, 33, 34, 43, 44, 47, 49, 50, 51, 52, 54, 55, 58, 60, 65, 66, 67, 68, 70, 71, 75, 77, 86, 87, 94, 131, 133, 134, 144, 151, 171, 175, 176, 184, 185, 187, 193, 194, 195, 197, 198, 199, 201, 202, 203, 217, 218, 219, 220, 221, 227, 228, 231], "both": [2, 72, 75, 76, 79, 82, 87, 94, 107, 116, 117, 135, 159, 160, 171, 178, 185, 186, 189, 192, 193, 194, 195, 197, 198, 200, 202, 207, 217, 218, 219, 220, 221, 225, 226], "global": [2, 83, 87, 149, 151, 154, 156, 158, 192, 202, 228], "scratch": [2, 76, 129, 151, 152, 178, 197, 199, 234], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 92, 93, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 143, 151, 152, 170, 172, 173, 174, 175, 176, 178, 179, 182, 187, 189, 191, 195, 196, 200, 201, 203, 204, 207, 208, 221, 226, 227, 228, 229, 231, 232, 234], "space": [2, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 95, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 158, 159, 170, 171, 175, 176, 178, 179, 189, 191, 192, 193, 194, 203, 207, 219, 221, 225, 226, 228, 230, 231, 234], "biton": 2, "algorithm": [2, 81, 87, 90, 185, 187, 192, 193, 195, 197, 198, 199, 202, 207, 221, 223, 228, 229], "stabl": [2, 217], "mean": [2, 22, 34, 67, 68, 76, 81, 92, 94, 129, 132, 135, 143, 144, 147, 178, 180, 187, 192, 194, 197, 198, 199, 200, 201, 202, 203, 205, 208, 226, 233], "repeat": [2, 192, 219, 228, 231], "input": [2, 22, 34, 67, 68, 76, 77, 79, 94, 145, 146, 187, 189, 193, 194, 198, 202, 221, 225, 226], "correspond": [2, 76, 79, 87, 117, 121, 134, 160, 172, 173, 174, 177, 178, 192, 193, 198, 199, 202, 218, 219, 230], "might": [2, 129, 144, 165, 184, 185, 192, 193, 194, 195, 196, 197, 198, 201, 202, 225, 232, 233], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 92, 94, 97, 127, 128, 129, 131, 134, 135, 138, 144, 148, 150, 159, 165, 171, 178, 183, 186, 187, 188, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 217, 219, 220, 221, 227, 232], "execspac": [2, 79, 129, 150, 159, 170, 171, 202], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 93, 126, 127, 128, 144, 147, 148, 150, 159, 164, 178, 192, 193, 226], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 150, 151, 153, 155, 157, 167, 170, 171, 175, 176, 194, 202, 224, 229], "member_typ": [2, 72, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 189, 192, 194], "10": [2, 24, 34, 48, 69, 77, 78, 82, 86, 132, 133, 134, 146, 171, 178, 187, 192, 198, 202, 204, 212, 213, 219, 221, 232], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 121, 146, 192, 194, 198, 199, 202, 227], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 94, 129, 140, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 178, 185, 192, 194, 196, 197, 198, 199, 202, 214, 223, 224, 225, 226, 227, 228, 230, 232], "whole": [2, 151, 185, 187, 189, 201, 230], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 97, 162, 171, 174, 176, 178, 212, 225, 234], "league_rank": [2, 144, 145, 149, 151, 153, 154, 155, 156, 157, 158, 189, 192], "ahost": 2, "create_mirror_view_and_copi": [2, 170], "hostspac": [2, 72, 75, 87, 93, 170, 171, 174, 178, 191, 194, 202, 224], "cout": [2, 129], "j": [2, 80, 149, 155, 158, 159, 192, 194, 197, 198, 202, 204, 225, 228, 230], "vectorlen": 2, "vector_length_max": [2, 152], "now": [2, 87, 129, 135, 147, 159, 171, 178, 184, 186, 192, 194, 196, 197, 200, 202, 206, 223, 232], "column": [2, 80, 194, 198, 201, 202, 221], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 92, 97, 129, 135, 143, 170, 178, 185, 194, 202, 228], "na": [2, 213, 221], "9": [2, 34, 48, 69, 78, 88, 187, 201, 208, 209, 212, 213, 219, 221], "38": 2, "68": 2, "74": [2, 204], "76": 2, "83": 2, "89": 2, "91": 2, "95": 2, "19": [2, 187, 213], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 192], "13": [2, 4, 23, 24, 39, 40, 53, 56, 145, 202, 212, 219], "16": [2, 77, 187, 194, 213, 221], "17": [2, 84, 88, 132, 139, 145, 187, 213, 219, 220], "40": [2, 78], "44": [2, 219], "54": 2, "96": [2, 194], "18": [2, 187, 203, 204, 213, 217, 219], "77": 2, "80": [2, 174], "82": 2, "94": 2, "14": [2, 23, 88, 139, 187, 212, 213, 221], "34": [2, 53, 56, 151], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 137, 139, 144, 146, 153, 155, 157, 171, 178, 198, 208, 212, 213, 217, 219, 234], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 130, 131, 132, 134, 137, 138, 139, 146, 148, 150, 151, 153, 155, 157, 169, 171, 174, 175, 176, 177, 178, 188, 189, 190, 203, 204, 205, 207, 208, 210, 212, 214, 217, 219, 221, 225, 229, 234], "5": [2, 11, 12, 21, 22, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 139, 144, 148, 150, 151, 153, 155, 157, 162, 163, 169, 171, 174, 177, 178, 189, 192, 201, 204, 209, 212, 213, 214, 219, 232, 234], "20": [2, 78, 88, 89, 129, 135, 136, 137, 147, 174, 187, 203, 213, 221], "33": [2, 204], "39": 2, "60": [2, 202], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 130, 131, 132, 134, 138, 144, 178, 187, 189, 197, 201, 203, 208, 209, 212, 213, 214, 217, 219, 221, 234], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 131, 134, 150, 152, 153, 155, 157, 172, 173, 174, 178, 185, 187, 193, 197, 198, 199, 202, 208, 209, 212, 213, 219, 221, 229, 234], "15": [2, 4, 21, 25, 28, 30, 35, 42, 144, 151, 169, 177, 198, 212], "31": [2, 78], "42": [2, 129, 147, 226], "86": 2, "29": [2, 187, 213], "56": 2, "63": 2, "90": [2, 201, 217, 224], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 144, 145, 146, 148, 150, 152, 178, 192, 197, 198, 199, 200, 202, 206, 214, 223, 225, 228], "minimum": [3, 72, 77, 102, 104, 105, 107, 114, 115, 116, 117, 118, 119, 145, 146, 187, 188, 189, 213, 217], "modifi": [3, 4, 11, 17, 22, 24, 28, 30, 32, 33, 35, 36, 40, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 75, 145, 146, 182, 183, 185, 186, 192, 194, 219], "sequenc": [3, 26, 61, 74, 89, 192, 197, 199], "numer": [3, 83, 137, 138, 187, 195, 197, 203, 221, 225, 230], "partit": [3, 35, 47, 206], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 206], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 121, 178, 182, 214, 224, 229], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 144, 145, 146, 152, 170, 175, 176, 178, 197, 198, 201, 202], "qualifi": [4, 87, 206, 213, 232], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 94, 130, 196, 198, 199, 200, 202, 203, 217, 227, 230, 232], "taken": [4, 144, 186, 189, 219], "becaus": [4, 138, 159, 194, 196, 197, 198, 200, 202, 203, 217, 228, 232], "we": [4, 39, 40, 41, 76, 84, 87, 94, 132, 138, 144, 171, 178, 184, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 213, 219, 223, 224, 226, 227, 232], "chang": [4, 72, 75, 81, 132, 151, 165, 178, 186, 193, 195, 198, 200, 201, 202, 203, 214, 216, 217, 218, 219, 221, 227, 232], "itself": [4, 76, 77, 94, 129, 135, 144, 147, 174, 178, 185, 187, 189, 195, 197, 201, 202, 203, 219, 230, 231], "without": [4, 72, 75, 77, 86, 87, 94, 131, 143, 145, 165, 171, 175, 176, 186, 187, 188, 200, 201, 202, 203, 206, 210, 213, 225, 227, 228, 231, 232], "dereferenc": [4, 11, 22, 30, 31, 86, 230], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 133, 134, 144, 145, 146, 148, 149, 151, 153, 154, 155, 156, 170, 175, 176, 177, 178, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 201, 202, 203, 210, 217, 218, 219, 220, 221, 225, 226, 228, 231], "done": [4, 37, 54, 69, 87, 94, 135, 144, 187, 192, 193, 200, 202, 203, 217, 219, 226], "execut": [4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 76, 79, 82, 83, 86, 87, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 126, 127, 128, 131, 133, 134, 135, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 166, 170, 171, 176, 178, 179, 184, 185, 193, 194, 195, 200, 203, 207, 208, 217, 220, 221, 225, 229, 230, 231, 232, 234], "rank": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 131, 144, 145, 148, 151, 153, 155, 157, 169, 171, 174, 175, 176, 177, 178, 192, 193, 202, 203, 206, 214, 224, 225, 226], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 82, 97, 171, 175, 176, 178, 194, 202, 214, 225], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 97, 171, 175, 176, 178, 194, 198, 201, 202, 225], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 97, 178, 201, 202, 224], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 169], "proper": [4, 86, 187, 194, 203], "content": [4, 72, 75, 131, 145, 146, 160, 175, 176, 194, 196, 198, 202, 226, 228, 231, 232], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 103, 129, 185, 194, 197, 198, 201, 202, 227], "iteratortyp": [4, 12, 19, 20, 23, 24, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 82, 134, 168, 173, 178, 192, 193, 194, 197, 201, 202, 217, 221], "need": [4, 28, 30, 76, 77, 84, 87, 94, 128, 129, 132, 136, 138, 144, 145, 146, 159, 171, 178, 186, 187, 188, 192, 193, 194, 195, 196, 198, 200, 201, 203, 217, 218, 219, 221, 226, 228], "go": [4, 86, 144, 145, 146, 148, 150, 151, 152, 186, 187, 192, 197, 201, 217, 219], "calcul": [4, 140, 141, 142, 152, 174, 192, 194, 202, 224, 230], "neg": [4, 18, 24, 33, 63, 64, 134, 184, 185, 200], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 20, 25, 26, 27, 38, 49, 50, 53, 54, 61, 62, 71, 76, 92, 99, 100, 131, 159, 177, 178, 182, 183, 193], "stepsb": 4, "swap": [4, 59, 65, 192], "point": [4, 25, 28, 75, 76, 77, 79, 82, 87, 94, 129, 134, 135, 138, 149, 178, 186, 187, 196, 197, 200, 201, 202, 208, 217, 221, 225, 226, 227, 232], "current": [4, 74, 76, 77, 81, 87, 94, 99, 100, 129, 135, 138, 159, 163, 178, 182, 183, 187, 192, 198, 199, 200, 201, 202, 203, 207, 217, 220, 221, 226], "api": [4, 17, 55, 81, 88, 133, 134, 151, 165, 193, 205, 207, 215, 225, 231], "doe": [4, 47, 75, 77, 81, 87, 91, 94, 126, 131, 143, 144, 145, 146, 178, 186, 187, 192, 193, 194, 196, 197, 201, 202, 203, 213, 214, 217, 220, 221], "fenc": [4, 72, 87, 90, 129, 135, 144, 145, 151, 159, 176, 178, 197, 202, 203, 228, 232], "min_el": [5, 39, 41], "max_el": 5, "minmax_el": 5, "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 92, 94, 97, 132, 135, 144, 151, 152, 159, 163, 170, 172, 173, 174, 176, 178, 188, 190, 191, 192, 194, 196, 197, 198, 203, 209, 214, 219, 221, 226, 228, 230, 232], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 65, 76, 77, 81, 132, 135, 151, 152, 172, 173, 174, 178, 186, 196, 214, 222, 232], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 199], "generate_n": 6, "remov": [6, 52, 88, 134, 139, 165, 186, 193, 206, 208, 217, 219], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 54, 55, 56, 89, 130, 131, 139, 187, 194, 198, 206, 233], "replace_if": [6, 17, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 136], "reverse_copi": 6, "rotat": [6, 60, 136], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 129, 143, 178, 187, 193, 197, 203, 234], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 183, 200], "any_of": [7, 183, 200], "none_of": [7, 183, 200], "find": [7, 28, 37, 39, 40, 41, 74, 81, 82, 87, 136, 144, 185, 187, 188, 189, 196, 198, 203, 207, 208, 217, 232], "find_if": [7, 29], "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 27, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 202], "search": [7, 12, 19, 20, 25, 26, 27, 35, 53, 62, 74, 81, 131, 231], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 94, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 129, 145, 146, 151, 188, 192, 195, 197, 199, 201, 202], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": 9, "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 92, 129, 135, 148, 150, 159, 171, 192, 194, 227], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 51, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 127, 131, 132, 134, 143, 144, 145, 146, 161, 178, 179, 187, 193, 202, 206, 233], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 127, 129, 135, 143, 144, 145, 146, 170, 174, 175, 176, 178, 179, 202, 206, 219, 221], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 63, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 129, 135, 192, 194, 197, 210, 218, 230], "second": [11, 36, 38, 40, 42, 72, 74, 92, 94, 134, 143, 159, 160, 168, 177, 182, 183, 184, 185, 189, 192, 193, 194, 196, 197, 198, 202, 232], "comput": [11, 22, 34, 37, 59, 67, 68, 136, 145, 187, 189, 190, 191, 192, 195, 198, 199, 200, 202, 203, 204, 217, 220, 224, 225, 230], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 94, 97, 144, 171, 186, 187, 189, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 217, 219, 221, 226, 228, 232], "adjac": 11, "pair": [11, 22, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 91, 169, 177, 189, 201, 206, 221], "write": [11, 22, 34, 58, 66, 67, 68, 84, 94, 129, 135, 187, 188, 192, 195, 197, 198, 200, 201, 202, 207, 217, 221], "them": [11, 58, 87, 129, 144, 185, 186, 187, 192, 193, 194, 196, 198, 199, 200, 202, 217, 226, 232], "binari": [11, 21, 22, 26, 27, 34, 36, 37, 39, 40, 41, 48, 61, 62, 66, 69, 70, 71, 72, 107, 121, 186, 189, 198, 202, 208, 210], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60, 65, 66, 69, 70, 71, 72, 75, 76, 79, 87, 92, 94, 129, 135, 143, 150, 152, 159, 171, 175, 176, 178, 179, 184, 186, 189, 196, 198, 201, 202, 230, 232], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 87, 92, 94, 129, 131, 135, 144, 145, 146, 147, 151, 178, 185, 186, 187, 190, 192, 197, 206, 207, 210, 221, 223, 224, 227, 232, 233], "implement": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 73, 76, 82, 85, 89, 91, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 138, 139, 145, 148, 149, 150, 154, 156, 158, 160, 162, 170, 177, 178, 182, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 202, 207, 217, 218, 221, 224, 228, 231, 232], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 127, 144, 145, 146, 178, 186, 187, 192, 202, 207, 208, 220, 221, 227], "purpos": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 94, 148, 150, 178, 195, 197, 199, 201, 202, 205, 207, 210, 217], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 94, 129, 134, 135, 136, 147, 163, 177, 178, 182, 197, 200, 201, 202, 214], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 128, 129, 131, 132, 144, 145, 146, 152, 177, 178, 179, 182, 184, 187, 192, 194, 197, 198, 199, 202], "check": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 81, 84, 88, 129, 131, 135, 136, 189, 193, 194, 202, 203, 208, 217, 220, 221, 225], "mode": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 186, 194, 199, 200, 213, 219], "pass": [11, 17, 22, 23, 24, 26, 27, 28, 30, 35, 36, 39, 40, 41, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 72, 74, 76, 77, 78, 79, 94, 129, 130, 131, 132, 134, 137, 177, 187, 193, 194, 195, 198, 201, 202, 203, 213, 219, 220, 221, 225, 226], "callabl": [11, 22, 48, 67, 69, 178, 182, 183, 186], "value_typ": [11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 145, 146, 163, 171, 178, 182, 183, 189, 191, 198, 214, 226, 228], "conform": [11, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 56, 67, 69], "return_typ": [11, 22, 32, 69, 231], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 92, 118, 119, 121, 129, 131, 132, 135, 144, 145, 151, 152, 163, 172, 173, 174, 182, 183, 185, 193, 194, 199, 201, 202, 217, 218, 226], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "consecut": [12, 70, 71, 136, 152, 202, 226], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 23, 25, 32, 33, 35, 45, 53, 76, 79, 87, 88, 92, 127, 128, 131, 133, 135, 139, 143, 147, 152, 170, 175, 176, 178, 182, 183, 186, 187, 192, 197, 198, 199, 202, 203, 214, 219, 220, 221, 227, 232], "c": [12, 13, 14, 19, 20, 25, 34, 45, 48, 69, 72, 75, 76, 77, 83, 84, 87, 89, 91, 97, 121, 129, 132, 134, 135, 136, 137, 138, 139, 144, 147, 153, 155, 157, 173, 178, 179, 182, 183, 184, 187, 188, 192, 195, 197, 198, 199, 200, 202, 203, 208, 214, 220, 224, 225, 228, 231, 232], "similar": [12, 13, 14, 20, 26, 27, 38, 45, 61, 62, 72, 76, 78, 82, 87, 94, 178, 186, 196, 197, 200, 221, 226, 232], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 44, 50, 51, 58, 60, 66, 71], "predic": [13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 94], "satisfi": [13, 14, 35, 45, 46, 47, 82, 145, 170, 218], "unari": [13, 14, 17, 28, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 94, 138], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [14, 17, 28, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 77, 78, 80, 82, 155, 160, 163, 170, 175, 176, 177, 194, 206, 210, 214, 228], "least": [14, 78, 81, 87, 135, 136, 194, 200, 220], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 94, 131, 134, 135, 136, 138, 143, 151, 153, 154, 155, 156, 159, 170, 172, 173, 175, 176, 177, 178, 182, 183, 185, 186, 187, 188, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 214, 217, 219, 221, 223, 224, 226, 230, 231, 232], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "first_to": [15, 17, 18, 43, 44, 50, 51, 54, 55, 58, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55, 60], "anoth": [15, 16, 17, 18, 42, 54, 55, 78, 87, 94, 136, 151, 153, 154, 155, 156, 170, 177, 185, 192, 193, 194, 199, 200, 201, 202, 221, 226, 230], "overload": [15, 16, 17, 18, 22, 23, 24, 26, 27, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 48, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 69, 70, 71, 89, 90, 134, 138, 144, 145, 186, 200, 201, 202, 206, 230], "sourc": [15, 16, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 144, 151, 169, 178, 187, 197, 200, 203, 205, 210, 215, 219, 221, 233], "destin": [15, 16, 17, 18, 46, 50, 54, 60, 66, 71, 76, 79, 178, 194, 226], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "last_to": 16, "rel": [16, 49, 52, 159, 187, 199], "preserv": [16, 49, 52, 78, 87, 175, 176, 193], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 51, 52, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "convert": [17, 28, 35, 36, 40, 46, 51, 52, 55, 56, 84, 92, 94, 129, 131, 134, 160, 178, 182, 183, 194, 200, 224, 225], "everi": [17, 28, 30, 35, 36, 40, 46, 51, 52, 55, 56, 70, 76, 81, 94, 151, 153, 154, 155, 156, 171, 177, 178, 185, 186, 187, 189, 192, 196, 200, 201, 202, 203, 217, 218, 221, 227, 231, 232], "sizetyp": [18, 24, 31, 33, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "If": [18, 24, 33, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 126, 127, 128, 132, 135, 144, 145, 146, 152, 170, 171, 176, 177, 178, 185, 186, 187, 188, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 217, 218, 219, 225, 226, 228, 230, 232], "otherwis": [18, 21, 24, 33, 35, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 92, 94, 128, 129, 131, 152, 170, 178, 186, 193, 194, 198, 202, 203, 210, 219], "count_iterator_api_default": 19, "count_view_api_default": 19, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 61, 69], "iteratortype2": [21, 26, 27, 38, 42, 61, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "fals": [21, 29, 35, 42, 74, 77, 81, 129, 131, 132, 133, 135, 170, 174, 200, 202], "via": [21, 26, 27, 37, 49, 52, 69, 85, 86, 94, 118, 119, 124, 127, 135, 144, 145, 146, 148, 149, 150, 152, 154, 156, 158, 178, 185, 187, 190, 192, 193, 194, 202, 203, 217, 218, 219, 220, 224, 226, 231], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 39, 40, 41, 42], "valuetype2": [21, 39, 40, 41, 42], "isequalfunctor": [21, 42], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 94, 97, 159, 170, 171, 174, 177, 179, 184, 185, 186, 187, 189, 194, 197, 208, 217, 218, 219, 221, 226, 230], "p": [21, 28, 30, 42, 46, 75, 77, 79, 160, 175, 176, 187, 195, 202, 203, 206, 221, 225], "isequ": 21, "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 94, 121, 131, 192, 194, 197, 198, 201, 202, 223, 226], "openmp": [21, 23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 93, 144, 148, 150, 152, 171, 187, 193, 195, 198, 199, 202, 203, 206, 207, 208, 213, 219, 220, 221, 228], "enabl": [21, 25, 28, 30, 42, 86, 88, 135, 144, 149, 154, 156, 158, 164, 187, 192, 193, 198, 199, 202, 204, 217, 221, 227, 229, 231], "you": [21, 25, 28, 30, 42, 75, 94, 129, 132, 135, 138, 139, 144, 147, 174, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 200, 201, 203, 204, 206, 208, 209, 215, 219, 230, 232], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 129, 160, 178, 187, 189, 192, 193, 194, 198, 200, 201, 220, 221], "set": [22, 23, 24, 26, 27, 31, 34, 36, 37, 39, 40, 41, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 97, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 131, 134, 138, 150, 151, 152, 160, 163, 164, 166, 168, 172, 173, 174, 178, 180, 182, 183, 184, 185, 186, 187, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 208, 213, 217, 219, 220, 221, 224, 228, 231, 232], "valuetyp": [22, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 190, 191], "init_valu": [22, 34, 67, 68, 192], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 146, 151, 198, 201, 226], "prefix": [22, 34, 67, 68, 90, 187, 192, 193, 198, 199, 208], "sum": [22, 34, 67, 68, 72, 80, 81, 90, 107, 121, 145, 154, 156, 158, 188, 189, 190, 191, 192, 198], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 136, 145, 146, 152, 159, 169, 178, 188, 189, 190, 191, 192, 194, 196, 197, 199, 201, 202, 221, 224, 225, 231, 232, 233], "scan": [22, 34, 67, 68, 72, 74, 146, 151, 152, 192, 197, 199, 202, 226], "combin": [22, 34, 81, 87, 102, 104, 105, 121, 135, 145, 146, 178, 189, 192, 195, 199, 202, 213, 219, 231], "th": [22, 34, 67, 68, 74, 177], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 94, 129, 135, 144, 186, 187, 192, 193, 194, 199, 200, 202, 220], "22": [23, 213, 221], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 143, 147, 182, 183, 185, 187, 196, 197, 217, 230, 232], "newvalu": [24, 53, 56], "forward": [25, 74, 132, 186, 194, 199, 219, 226], "find_iterator_api_default": 25, "find_view_api_default": 25, "found": [25, 28, 37, 74, 78, 81, 84, 102, 105, 121, 185, 186, 187, 196, 197, 199, 200, 217, 221, 232], "cbegin": [25, 35], "cend": [25, 35], "host": [25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 129, 131, 135, 138, 164, 170, 171, 178, 187, 192, 193, 194, 196, 198, 199, 202, 203, 217, 221, 222, 226, 227, 231, 232], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "occurr": [26, 61], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 30, 35, 48], "evalu": [28, 42, 76, 129, 178, 194, 198, 217, 221, 225], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 138], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 144, 145, 146, 198, 225], "incrementvalsfunctor": 30, "increment": [30, 37, 185, 194, 197, 202], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": [32, 33], "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 94, 129, 131, 133, 145, 146, 184, 195, 197, 199, 202, 210, 228, 231], "being": [32, 81, 87, 89, 94, 121, 139, 140, 141, 142, 152, 161, 177, 185, 192, 197, 200, 202, 217, 233], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "11": [34, 41, 48, 69, 78, 186, 187, 198, 212, 213, 219, 221], "12": [34, 48, 69, 72, 171, 187, 203, 204, 212, 213, 217, 226], "inclus": [34, 68, 146, 198, 201, 217, 220], "op": [34, 72, 79, 81, 84, 98, 121, 171, 185, 202], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 136, 178, 185, 202, 226], "don": [35, 72, 75, 87, 170, 178, 185, 186, 198, 213, 219], "empti": [35, 39, 40, 41, 75, 82, 206, 231], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 94, 131, 135, 151, 178, 192, 193, 201, 202, 203], "re": [35, 39, 40, 41, 87, 94, 129, 135, 144, 147, 163, 187, 196, 198, 202, 231, 232], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "examin": [36, 40, 47, 70, 221], "less": [36, 38, 39, 40, 41, 63, 64, 87, 136, 159, 188, 193, 200, 202, 213, 217, 225, 226], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 94, 129, 131, 135, 136, 152, 177, 178, 185, 187, 192, 193, 194, 197, 198, 200, 201, 202, 203, 204, 213, 217, 225, 230], "your": [36, 40, 75, 129, 186, 187, 188, 193, 198, 200, 202, 203, 205, 226, 232], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 107, 109, 110, 111, 178, 185, 187, 189, 192, 197, 199, 200, 202, 231], "largest": [37, 39, 41, 79, 82, 136, 199], "comparison": [37, 54, 72, 138, 185, 188], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 139, 169, 170, 171, 177, 201], "algoritm": [37, 81], "last2": [38, 42], "lexicograph": 38, "lexicographical_compare_iterator_api_defaul": 38, "lexicographical_compare_view_api_default": 38, "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "case": [39, 40, 41, 75, 76, 87, 91, 94, 145, 147, 170, 171, 178, 187, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 206, 207, 208, 217, 223, 226, 228, 229, 230], "sever": [39, 40, 41, 87, 89, 187, 197, 198, 207, 218, 220, 221, 227], "custom": [39, 40, 41, 76, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 178, 192, 198, 202, 212, 217, 218, 225, 234], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 186, 194, 198, 199, 217, 233], "smallest": [40, 41, 136], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 86, 93, 94, 138, 147, 185, 187, 188, 189, 192, 194, 195, 196, 199, 201, 202, 203, 207, 208, 221, 224, 225, 226, 227, 232], "cpp": [42, 131, 144, 187, 206], "mismatchfunctor": 42, "mismatch_index": 42, "outputiter": [43, 44, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 171, 191], "move_iterator_api_default": 43, "move_view_api_default": 43, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "to_first_tru": 46, "to_first_fals": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "view_tru": 46, "view_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 144, 151, 153, 155, 157, 159, 198, 210, 219], "contain": [46, 49, 52, 74, 75, 81, 94, 131, 134, 144, 145, 146, 151, 165, 170, 172, 173, 174, 175, 176, 178, 179, 186, 187, 189, 192, 193, 194, 196, 197, 200, 207, 217, 221, 226, 230, 232, 233], "locat": [47, 75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 135, 178, 187, 192, 197, 199, 202, 203, 208, 221, 224, 229], "alreadi": [47, 76, 78, 81, 85, 87, 171, 178, 186, 195, 198, 219, 223], "is_part": 47, "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "elment": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 151, 152, 189, 190, 191, 192, 197, 199, 206, 212, 228, 234], "account": [48, 68, 152, 217], "join": [48, 69, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 188, 189, 191, 192, 197, 206, 217, 221, 226], "dure": [48, 86, 121, 150, 152, 177, 185, 192, 193, 194, 199, 202, 203, 217, 218, 220, 221, 223, 226, 230], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 81, 94, 127, 128, 129, 131, 132, 150, 167, 178, 186, 199, 200, 202, 203, 232], "associ": [48, 69, 72, 76, 94, 107, 121, 129, 133, 135, 147, 151, 159, 177, 178, 189, 192, 197, 198, 202, 226, 228, 230], "commut": [48, 69, 121], "shift": [49, 52, 63, 64, 102, 105], "remain": [49, 52, 87, 128, 197, 217], "physic": [49, 52, 74, 152, 192, 196, 199, 202, 232], "size": [49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 127, 128, 135, 140, 141, 142, 148, 150, 152, 172, 173, 174, 178, 182, 183, 192, 194, 198, 199, 200, 202, 225, 226, 229, 231], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "target": [49, 50, 72, 75, 94, 129, 144, 187, 194, 195, 197, 199, 207, 208, 221], "new": [49, 50, 51, 52, 59, 60, 70, 74, 75, 79, 81, 87, 89, 94, 99, 100, 101, 104, 106, 128, 129, 131, 132, 135, 139, 147, 159, 170, 174, 175, 176, 177, 180, 185, 186, 189, 192, 194, 195, 196, 197, 198, 202, 203, 209, 214, 215, 217, 218, 219, 220, 227, 231, 232], "ther": [50, 57], "omit": [50, 51, 75, 76, 126, 127, 128, 178], "those": [50, 51, 74, 75, 78, 92, 94, 145, 160, 178, 186, 187, 192, 194, 201, 202, 219, 223, 226], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 99, 100, 101, 102, 105], "new_valu": [53, 54, 55, 56, 99, 100, 101, 106], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135], "explanatori": [53, 54, 161], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 189, 191, 202], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "n_first": [59, 60], "n_locat": [59, 60], "wai": [59, 60, 75, 81, 83, 84, 87, 94, 180, 185, 186, 187, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 210, 225, 226, 229, 230, 232], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 143, 151, 187, 192, 196, 203, 209, 221, 223, 232], "about": [59, 60, 85, 87, 88, 92, 129, 135, 138, 144, 147, 148, 150, 159, 178, 186, 196, 197, 198, 199, 200, 202, 203, 206, 217, 229, 232], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 177, 201, 231], "toward": [63, 64, 195, 197], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "iterator1": 65, "iterator2": 65, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "unaryoper": 66, "unary_op": [66, 67, 68], "d_first": 66, "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "first_from1": 66, "last_from1": 66, "first_from2": 66, "binary_op": [66, 67, 68], "source1": 66, "source2": 66, "store": [66, 72, 75, 76, 77, 80, 81, 94, 99, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 132, 145, 178, 185, 188, 189, 192, 197, 198, 199, 200, 202, 223, 225, 226, 229], "last_from2": 66, "transform_iterator_api_default": 66, "transform_view_api_default": 66, "tranform": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 81, 127, 129, 132, 133, 134, 135, 160, 186, 198, 202, 203, 217, 221], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 178, 189, 192, 196, 201, 202, 210, 220, 225, 232], "along": [69, 87, 201, 224], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 178], "group": [70, 192, 197, 199, 217, 221], "unique_iterator_api_default": 70, "unique_ranges_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_ranges_view_api_default": 71, "librari": [72, 84, 87, 89, 91, 131, 136, 138, 139, 160, 185, 186, 187, 193, 195, 197, 202, 203, 217, 221, 226, 229, 230, 233, 234], "categori": [72, 180, 185, 187, 195, 197, 217, 220, 221], "descript": [72, 73, 83, 85, 88, 90, 97, 107, 121, 122, 129, 131, 185, 187, 193, 208, 219, 221], "rand": 72, "plu": [72, 122, 124, 127, 185, 192, 198, 225], "random_xorshift1024_pool": 72, "1024": [72, 77, 151, 190, 191, 192], "random_xorshift1024": 72, "sampl": [72, 190, 191], "fit": [72, 94, 192, 199, 210], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 129, 144, 145, 146, 159, 166, 187, 189, 197, 198, 199, 231], "dualview": [72, 73, 82, 87, 88, 180, 234], "mirror": [72, 73, 75, 78, 170], "dynamicview": [72, 73, 180], "dynam": [72, 76, 77, 85, 88, 94, 131, 148, 150, 152, 175, 176, 178, 197, 202, 203, 231], "dynrankview": [72, 73, 171, 180], "determin": [72, 73, 76, 88, 148, 152, 155, 177, 178, 182, 183, 187, 192, 193, 197, 198, 199, 202, 203, 208, 217, 218, 220, 225, 226, 231], "runtim": [72, 73, 76, 78, 79, 85, 129, 131, 148, 150, 152, 178, 189, 192, 194, 199, 202, 208, 217, 230, 232], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 94, 129, 131, 132, 135, 137, 138, 144, 182, 183, 186, 187, 188, 192, 194, 198, 200, 202, 203, 208, 209, 220, 221, 226, 228, 234], "error": [72, 138, 161, 178, 194, 197, 201, 202, 203, 209, 213, 219, 221, 230], "record": [72, 87, 217], "code": [72, 77, 87, 88, 90, 94, 129, 135, 137, 144, 151, 171, 178, 185, 186, 187, 188, 190, 192, 197, 198, 199, 201, 202, 203, 207, 208, 209, 210, 212, 213, 217, 218, 220, 221, 222, 225, 226, 229, 230, 231, 233], "offsetview": [72, 73, 87, 180, 206], "indici": [72, 117, 185], "scatterview": [72, 73, 180, 222, 234], "transpart": 72, "replic": [72, 185, 194, 221], "strategi": [72, 87, 94, 131, 185, 232], "scatter": [72, 79, 185], "staticcrsgraph": [72, 73, 202], "resiz": [72, 75, 77, 79, 82, 97, 175, 194], "graph": [72, 80, 83, 94, 234], "semant": [72, 76, 78, 82, 94, 178, 186, 192, 194, 198, 202, 207, 226], "unorderedmap": [72, 73, 202], "map": [72, 73, 76, 80, 81, 178, 192, 193, 194, 199, 202, 223, 225, 226], "optim": [72, 88, 150, 185, 187, 192, 194, 195, 197, 199, 202, 203, 208, 226, 232], "insert": [72, 199, 202], "interfac": [72, 82, 87, 93, 94, 149, 154, 156, 158, 180, 186, 192, 194, 195, 197, 201, 202, 224, 230, 232], "abort": [72, 96], "util": [72, 83, 129, 160, 187, 192, 197, 221, 224, 229], "caus": [72, 138, 161, 186, 194, 197, 202, 209, 210], "abnorm": [72, 161], "program": [72, 82, 92, 94, 97, 133, 134, 135, 147, 161, 193, 194, 195, 196, 200, 201, 202, 204, 208, 221, 223, 226, 231, 232, 233], "termin": [72, 132, 133, 134, 161], "dimens": [72, 73, 75, 76, 77, 78, 79, 87, 148, 162, 172, 173, 174, 175, 176, 177, 179, 192, 194, 224, 225], "atomic_exchang": [72, 98, 185], "exchang": [72, 99, 100, 101, 185, 222], "old": [72, 75, 79, 81, 132, 176, 185, 198, 202], "atomic_compare_exchang": [72, 98, 185], "match": [72, 75, 76, 78, 82, 97, 144, 145, 146, 148, 160, 170, 172, 173, 178, 185, 187, 192, 202, 214], "atomic_compare_exchange_strong": [72, 98, 185], "atomic_load": [72, 98, 185], "load": [72, 76, 87, 94, 131, 178, 185, 192, 198, 199, 200, 219, 221], "atomic_": [72, 98, 185], "anyth": [72, 94, 165, 185, 186], "atomic_fetch_": [72, 98, 185], "variou": [72, 75, 83, 185, 187, 220, 221], "_fetch": [72, 98, 185], "atomic_stor": [72, 98, 185], "band": [72, 107, 121, 189, 192], "bor": [72, 107, 121, 189, 192], "Or": [72, 107, 231], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 92, 129, 134, 135, 145, 146, 160, 171, 178, 187, 193, 194, 196, 202, 209, 212, 224, 232], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 91, 121, 129, 132, 138, 143, 144, 145, 146, 148, 150, 152, 160, 171, 178, 183, 185, 186, 187, 189, 192, 194, 197, 198, 199, 200, 201, 202, 213, 217, 219, 221, 222, 225, 226, 227, 230], "create_mirror": [72, 97, 202], "relat": [72, 83, 187, 192, 203, 217, 226], "create_mirror_view": [72, 170, 171, 194, 202, 206, 228], "cudaspac": [72, 87, 88, 93, 178, 194, 202, 206, 228], "primari": [72, 84, 94, 186, 187, 193, 213, 217, 219, 220, 221], "cudauvmspac": [72, 87, 88, 93, 194, 196, 202, 203, 206, 232], "unifi": [72, 87, 135, 208], "page": [72, 94, 121, 129, 135, 147, 187, 202, 204, 205, 208, 215], "migrat": [72, 135, 227], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 92, 94, 97, 125, 126, 127, 128, 129, 135, 152, 159, 170, 172, 173, 174, 176, 178, 179, 185, 187, 192, 195, 196, 197, 199, 200, 202, 203, 226, 227, 228, 229, 232], "cudahostpinnedspac": [72, 93, 178, 202], "memrori": 72, "pin": [72, 135, 187], "gpu": [72, 76, 88, 91, 131, 135, 170, 178, 187, 192, 193, 194, 195, 197, 199, 200, 202, 203, 206, 208, 217, 221, 226, 227, 229], "executionpolici": [72, 95, 144, 145, 146], "concept": [72, 83, 94, 95, 107, 121, 129, 135, 145, 147, 151, 172, 173, 174, 186, 188, 191, 192, 195, 197, 199, 204, 234], "hpx": [72, 85, 87, 88, 93, 148, 150, 193, 206, 207, 208], "system": [72, 87, 94, 129, 135, 186, 192, 193, 197, 199, 202, 203, 204, 217, 220, 221, 230], "mechan": [72, 87, 147, 192, 194, 195, 199, 202], "initargu": [72, 131, 132, 134, 193, 206], "programmat": [72, 130, 131, 134], "how": [72, 76, 85, 121, 129, 135, 147, 148, 178, 185, 186, 187, 188, 192, 193, 194, 195, 197, 198, 199, 200, 203, 214, 226], "deprec": [72, 77, 87, 88, 130, 131, 134, 207, 208, 214, 217, 227], "initializationset": [72, 130, 132, 134, 164, 166, 206], "is_array_layout": [72, 87, 206], "trait": [72, 75, 76, 77, 83, 84, 89, 92, 129, 137, 138, 150, 169, 178, 192, 214, 229], "detect": [72, 83, 95, 139, 172, 173, 174, 203], "model": [72, 92, 94, 95, 153, 154, 155, 156, 157, 158, 172, 173, 174, 187, 194, 195, 198, 200, 202, 204, 208, 212, 226], "layout": [72, 75, 76, 77, 78, 79, 95, 97, 170, 172, 173, 174, 175, 176, 194, 195, 197, 201], "is_execution_polici": [72, 206], "is_execution_spac": [72, 87, 129, 206], "is_memory_spac": [72, 87, 135, 206], "memoryspac": [72, 76, 92, 95, 126, 127, 128, 129, 135, 178, 202], "is_memory_trait": [72, 206], "memorytrait": [72, 75, 76, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 178, 185, 192, 202, 229], "is_reduc": [72, 206], "is_spac": [72, 129, 206], "fortran": [72, 76, 97, 172, 178, 187, 201, 202, 213, 222, 234], "arbitrari": [72, 76, 85, 97, 148, 150, 174, 178, 188, 191, 192, 199, 201, 202], "stride": [72, 75, 76, 77, 79, 97, 174, 194, 201, 224], "kokkos_fre": [72, 125, 127, 128, 194, 227], "delloc": 72, "previous": [72, 99, 101, 125, 126, 128, 135, 178, 187, 188, 192, 199, 233], "kokkos_malloc": [72, 125, 126, 128, 194, 196, 227, 232], "kokkos_realloc": [72, 125, 126, 194], "expand": [72, 94, 125, 193], "block": [72, 94, 125, 127, 143, 159, 187, 192, 194, 195, 201, 217, 228], "land": [72, 107, 108, 109, 111, 121, 189, 192, 221], "built": [72, 76, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 178, 187, 188, 191, 192, 193, 202, 221], "lor": [72, 107, 121, 189, 192], "maxloc": [72, 107, 118, 121, 124, 189, 192], "index": [72, 74, 76, 77, 78, 81, 82, 107, 113, 115, 116, 117, 118, 122, 124, 144, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 172, 173, 177, 178, 184, 185, 189, 192, 194, 196, 198, 201, 232], "u": [72, 160, 182, 184, 187, 210, 214], "mdrangepolici": [72, 76, 85, 87, 144, 145, 178, 206, 214, 222, 234], "multidimension": [72, 76, 83, 85, 97, 148, 172, 173, 174, 189, 192, 194, 201, 212, 225], "min": [72, 102, 105, 107, 113, 115, 116, 117, 118, 119, 121, 122, 124, 139, 145, 185, 189, 192, 206, 233], "minloc": [72, 107, 118, 121, 189, 192], "minmax": [72, 107, 119, 121, 188, 189, 192, 206], "minmaxloc": [72, 107, 118, 121, 189, 192], "openmptarget": [72, 87, 88, 93, 187, 193], "targetoffload": 72, "analogu": 72, "bulk": [72, 199], "item": [72, 85, 129, 146, 148, 150, 152, 192, 197, 217, 226, 230], "parallelfortag": [72, 90, 152], "tag": [72, 76, 85, 87, 140, 141, 142, 145, 148, 150, 152, 172, 173, 174, 178, 191, 192, 200, 217, 219, 222, 226], "team_siz": [72, 151, 152, 192], "contribut": [72, 79, 145, 146, 185, 189, 192, 207, 218, 223, 228], "parallelreducetag": [72, 90, 152], "parallel_scan": [72, 90, 142, 143, 158, 192, 198, 199, 226, 227], "simpl": [72, 121, 129, 168, 185, 189, 192, 194, 197, 198, 199, 200, 201, 202, 203, 224, 225, 226, 230], "pre": [72, 146, 159, 182, 183, 187, 217, 223], "postfix": [72, 199], "depend": [72, 88, 94, 135, 152, 153, 157, 185, 186, 187, 188, 192, 197, 198, 199, 200, 203, 225, 227, 228, 232], "parallelscantag": [72, 90], "partition_spac": [72, 93], "split": [72, 85, 149, 153, 154, 155, 156, 157, 158, 159, 192, 198, 231], "exist": [72, 75, 81, 84, 87, 88, 143, 145, 151, 159, 171, 175, 176, 186, 187, 193, 197, 199, 200, 201, 202, 217, 218, 221, 226], "multipl": [72, 87, 88, 94, 107, 145, 185, 187, 192, 193, 194, 197, 198, 200, 202, 203, 207, 208, 217, 220, 221, 226, 230], "perteam": [72, 151, 152, 153, 154, 155, 156, 158, 189, 192], "singl": [72, 94, 144, 145, 149, 150, 153, 154, 155, 156, 158, 182, 183, 189, 194, 195, 197, 198, 199, 201, 202, 203, 225], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 134, 135, 168, 172, 173, 174, 175, 176, 178, 184, 188, 192, 194, 197, 198, 200, 201], "indic": [72, 76, 78, 79, 80, 81, 87, 107, 118, 122, 129, 140, 141, 142, 178, 185, 189, 192, 199, 201, 202, 225, 231], "per": [72, 94, 152, 189, 192, 193, 194, 198, 199, 201, 202, 223, 226], "perthread": [72, 152, 158, 192], "prod": [72, 107, 121, 189, 192], "rangepolici": [72, 85, 87, 129, 144, 145, 146, 147, 159, 192, 194, 198, 202, 228, 230], "1d": [72, 76, 144, 145, 146, 150, 152, 178, 194, 202, 224], "realloc": [72, 75, 79, 97, 127, 128, 176, 202], "maintain": [72, 87, 186, 220], "reducerconcept": [72, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 191], "cpu": [72, 88, 129, 135, 170, 185, 187, 192, 193, 199, 200, 206, 208, 213, 219, 221], "aggreg": [72, 86, 192], "spaceaccess": [72, 92, 129, 135, 170, 171, 202, 206], "facil": [72, 89, 97, 136, 139, 170, 180, 217, 220], "queri": [72, 75, 131, 151, 152, 202, 206], "rule": [72, 77, 186], "multi": [72, 76, 144, 145, 178, 189, 195, 203], "dimension": [72, 76, 144, 145, 178, 201, 202], "arrai": [72, 75, 76, 77, 78, 79, 80, 81, 82, 94, 97, 132, 134, 145, 148, 172, 173, 174, 178, 185, 189, 190, 191, 192, 194, 201, 206, 212, 221, 222, 223, 226], "crate": [72, 221], "slice": [72, 97, 169, 229, 234], "teamhandl": [72, 149, 153, 154, 155, 156, 157, 158], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 157], "teamvectorrang": [72, 85, 157, 158], "threadvectormdrang": [72, 85], "timer": [72, 96, 143], "basic": [72, 76, 87, 138, 147, 178, 187, 194, 195, 203, 204, 227], "like": [72, 75, 76, 87, 94, 97, 129, 135, 144, 147, 171, 178, 185, 186, 187, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 217, 223, 230, 232], "act": [72, 87, 195, 201], "comment": [73, 187], "offset": [73, 78, 192, 199, 202], "unord": [73, 81], "kokkos_bitset": 74, "safe": [74, 194, 197, 198, 199, 202], "fix": [74, 81, 86, 186, 194, 202, 217, 218, 219, 229], "run": [74, 88, 94, 134, 135, 144, 185, 186, 187, 189, 192, 193, 194, 196, 197, 198, 199, 202, 203, 208, 217, 219, 221, 227, 228, 232], "time": [74, 75, 76, 85, 87, 88, 92, 94, 129, 148, 150, 152, 168, 178, 182, 183, 185, 186, 187, 192, 197, 198, 199, 200, 201, 202, 203, 208, 217, 218, 219, 221, 225, 227, 230], "paramet": [74, 75, 76, 77, 81, 85, 94, 97, 99, 100, 101, 102, 121, 126, 127, 128, 129, 131, 132, 135, 147, 151, 153, 155, 157, 159, 179, 187, 189, 193, 198, 200, 202, 203, 206, 213, 214, 221, 225, 228, 230], "constant": [74, 78, 83, 89, 129, 136, 138, 139, 162, 178, 182, 183, 198], "bit_scan_revers": 74, "1u": [74, 201], "mask": [74, 183, 184, 193, 200], "direct": [74, 138, 170, 192, 193, 200, 201, 202, 209, 210, 221], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 94, 148, 150, 159, 178], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "when": [74, 78, 81, 82, 86, 87, 91, 94, 129, 134, 135, 145, 149, 152, 172, 173, 174, 184, 185, 186, 187, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 208, 213, 214, 217, 221, 224, 225, 227, 228, 231, 232, 233], "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 178, 186, 194, 202, 208], "wa": [74, 75, 81, 88, 94, 128, 130, 131, 132, 170, 178, 182, 183, 187, 189, 192, 193, 194, 202, 203, 217, 219, 225, 227], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 76, 77, 78, 79, 81, 82, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 132, 134, 144, 151, 152, 153, 155, 157, 163, 170, 172, 173, 174, 175, 176, 190, 191, 192, 198, 201, 202, 206, 209, 214], "arg_siz": 74, "reset": [74, 75, 79, 168, 187], "clear": [74, 81, 82, 87, 186], "test": [74, 88, 138, 143, 187, 194, 198, 202, 203, 207, 208, 213, 217, 218, 219], "max_hint": 74, "happen": [74, 76, 77, 94, 99, 100, 178, 185, 192, 193, 194, 196, 202, 217, 219, 221, 232], "occur": [74, 91, 171, 193, 197, 203, 217, 224, 225, 227], "smaller": [74, 76, 77, 177, 178, 194, 221], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 178], "rh": [74, 76, 77, 118, 119, 124, 178, 182, 183, 190, 191, 214, 228], "dstdevic": 74, "srcdevic": 74, "dst": [74, 87, 145, 198], "src": [74, 75, 79, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 145, 163, 170, 171, 187, 190, 191, 198, 225], "kokkos_dualview": [75, 206], "refer": [75, 76, 77, 79, 82, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 137, 138, 139, 144, 152, 171, 177, 178, 182, 183, 184, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 201, 203, 207, 209, 221, 230], "capabl": [75, 83, 135, 187, 192, 193, 194, 199, 200, 214, 218], "well": [75, 76, 87, 92, 94, 121, 143, 144, 148, 150, 151, 178, 186, 187, 189, 192, 194, 195, 197, 198, 199, 201, 202, 217, 219, 220, 221, 226], "flag": [75, 129, 134, 178, 182, 184, 187, 198, 203, 208, 213, 219, 221], "respons": [75, 193, 194, 197, 200, 218, 220], "manual": [75, 187, 203, 219, 225], "sync": 75, "method": [75, 76, 77, 78, 79, 81, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 187, 191, 197, 198, 200, 202, 206, 225, 232], "synchron": [75, 82, 135, 149, 159, 171, 192, 197, 199, 228], "conveni": [75, 79, 84, 129, 194, 198, 201], "capac": [75, 81, 192, 197], "appropri": [75, 80, 94, 121, 187, 192, 197, 198, 199, 201, 202, 203, 217, 218, 221], "underli": [75, 76, 77, 78, 82, 94, 159, 178, 185, 194, 195, 197, 199, 202, 229], "four": [75, 202, 208, 217, 219], "separ": [75, 87, 185, 187, 193, 198, 202, 217, 219, 229, 230], "intend": [75, 84, 87, 89, 160, 187, 192, 196, 202, 232], "pleas": [75, 129, 135, 138, 139, 147, 186, 187, 202, 204, 205, 221], "document": [75, 87, 91, 129, 135, 144, 145, 147, 182, 183, 186, 187, 196, 210, 217, 218, 225, 226, 232], "suffic": 75, "most": [75, 76, 87, 94, 129, 134, 135, 136, 138, 147, 170, 174, 178, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 202, 203, 204, 213, 219, 221, 223, 225, 228, 232], "m": [75, 87, 149, 150, 154, 156, 158, 178, 184, 189, 194, 201, 221, 228], "d_view": [75, 171], "execution_spac": [75, 76, 81, 87, 92, 129, 135, 150, 151, 152, 159, 171, 178, 192, 194, 198, 202, 226, 229], "host_mirror_spac": [75, 76, 170, 178, 206], "h_view": [75, 171], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 178, 214], "t_dev": 75, "hostmirror": [75, 76, 77, 170, 178, 194, 228], "t_host": 75, "const_data_typ": [75, 76, 77, 178], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 129, 171, 172, 173, 174, 175, 176, 178, 202, 214], "randomaccess": [75, 76, 178, 202], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "memoryunmanag": [75, 191, 224], "t_dev_um": 75, "unmanag": [75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 174, 178, 179, 192, 194, 224, 234], "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "n0": [75, 76, 79, 148, 153, 155, 157, 162, 169, 172, 173, 174, 175, 176, 177, 178, 201, 202, 214], "kokkos_impl_ctor_default_arg": [75, 175, 176], "n1": [75, 76, 79, 148, 153, 155, 157, 159, 162, 169, 172, 173, 174, 175, 176, 177, 178, 201, 202, 214], "n2": [75, 76, 79, 148, 153, 155, 157, 159, 169, 172, 173, 174, 175, 176, 177, 178, 202], "n3": [75, 76, 79, 153, 155, 157, 159, 172, 173, 174, 175, 176, 178, 202], "n4": [75, 76, 79, 172, 173, 174, 175, 176, 178], "n5": [75, 76, 79, 172, 173, 174, 175, 176, 178], "n6": [75, 76, 79, 172, 173, 174, 175, 176, 178], "n7": [75, 76, 79, 172, 173, 174, 175, 176, 178], "analog": [75, 94, 167, 171], "benefit": [75, 213], "nonzero": 75, "impl": [75, 79, 87, 149, 152, 170, 175, 176, 186, 206, 229], "viewctorprop": [75, 79, 170, 175, 176], "arg_prop": [75, 79, 170, 175, 176], "enable_if": 75, "has_point": 75, "wrap": [75, 76, 178, 179, 187, 194, 202], "up": [75, 87, 94, 133, 136, 172, 173, 174, 178, 186, 187, 192, 193, 198, 199, 202, 221, 231], "viewctor": 75, "thing": [75, 87, 129, 180, 186, 187, 194, 196, 197, 199, 200, 202, 232], "ctor": 75, "ss": 75, "ls": [75, 151, 231], "ds": 75, "ms": [75, 129, 135], "shallow": [75, 194, 198, 202], "sd": 75, "s1": [75, 129, 135, 174], "s2": [75, 129, 135, 174], "s3": [75, 174], "arg0": 75, "arg": [75, 76, 77, 84, 132, 148, 150, 152, 159, 167, 169, 177, 178, 179, 193], "d_view_": 75, "h_view_": 75, "caller": [75, 129], "sure": [75, 187, 192, 198, 202, 203], "ensur": [75, 86, 132, 133, 134, 167, 186, 187, 193, 197, 200, 202, 217], "mark": [75, 198, 202, 217, 232], "if_c": 75, "is_sam": [75, 84, 92, 170, 171, 194, 201, 202], "memory_spac": [75, 76, 81, 87, 92, 126, 127, 128, 129, 135, 170, 171, 178, 179, 194, 202, 214, 227], "get_device_sid": 75, "specif": [75, 85, 87, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 143, 150, 151, 152, 159, 171, 182, 183, 185, 187, 190, 191, 192, 193, 194, 195, 197, 198, 200, 202, 203, 204, 205, 210, 217, 220, 221, 223], "afraid": 75, "express": [75, 83, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 136, 184, 187, 199, 200, 201, 203, 210, 227], "That": [75, 76, 87, 143, 144, 178, 192, 193, 194, 198, 201, 202, 203], "tell": [75, 94, 192, 197, 198, 201, 203, 229, 232], "what": [75, 88, 121, 129, 131, 135, 144, 180, 182, 183, 186, 194, 196, 197, 198, 200, 214, 219, 226, 230], "els": [75, 94, 144, 145, 146, 202, 205, 226, 231], "suppos": [75, 84, 200, 201, 226], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 202], "dual": [75, 82, 208], "want": [75, 84, 185, 196, 197, 198, 200, 226, 232], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 171], "non_const_data_typ": [75, 76, 77, 178], "need_sync": 75, "been": [75, 87, 88, 91, 187, 192, 194, 195, 197, 200, 201, 202, 221, 223, 230, 231], "In": [75, 76, 86, 87, 88, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 145, 147, 149, 154, 156, 158, 171, 178, 180, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 217, 220, 221, 223, 224, 225, 226, 228, 230, 232], "discard": [75, 79], "modif": [75, 195, 210, 228], "doesn": [75, 143, 144, 145, 170, 187, 192, 198, 203], "know": [75, 186, 187, 188, 194, 196, 201, 203, 232], "whether": [75, 76, 77, 82, 87, 88, 99, 129, 131, 135, 147, 152, 178, 189, 196, 197, 198, 201, 202, 208, 210, 214, 217, 218, 220, 226, 231, 232], "inlin": [75, 77, 84, 150, 152, 192, 194, 206], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 178, 187, 192, 197, 208, 227], "referenc": [75, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 177, 178, 194, 202, 217], "address": [75, 76, 79, 99, 100, 101, 102, 103, 104, 105, 106, 137, 178, 182, 186, 187, 192, 195, 197, 199, 209, 217, 221], "null": [75, 76, 77, 79, 82, 126, 128, 132, 134, 178], "pointer": [75, 76, 77, 79, 81, 82, 94, 126, 127, 128, 129, 132, 134, 151, 170, 174, 175, 176, 178, 179, 185, 194, 198, 200, 206, 226, 230], "span": [75, 76, 77, 82, 178], "span_is_contigu": [75, 76, 77, 171, 178], "contigu": [75, 76, 77, 85, 171, 172, 173, 178, 182, 201, 202, 226, 229], "ityp": [75, 76, 77, 154, 156, 158, 177, 178], "stride_": 75, "is_integr": [75, 154, 156, 158, 177], "r": [75, 171, 177, 178, 200, 204, 210, 214, 225, 228], "extent_int": [75, 76, 77, 178], "integr": [75, 76, 77, 88, 136, 139, 177, 178, 217, 219, 221], "kokkos_dynrankview": [76, 206], "potenti": [76, 77, 81, 88, 94, 135, 144, 145, 149, 151, 171, 178, 185, 191, 192, 195, 197, 198, 203, 230], "compil": [76, 85, 87, 88, 92, 129, 136, 138, 144, 148, 150, 171, 178, 182, 183, 185, 186, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 212, 217, 220, 225, 226, 229, 230, 232, 233], "Its": [76, 178, 194], "shared_ptr": [76, 178], "upper": [76, 202], "bound": [76, 77, 81, 85, 88, 148, 150, 192, 194, 202, 208, 221, 224], "layouttyp": [76, 77, 178], "fundament": [76, 84, 85, 94, 129, 135, 147, 178, 182, 183, 184, 195, 197, 199, 217, 226], "mandatori": [76, 194], "scalartyp": [76, 178, 190, 191], "storag": [76, 80, 107, 126, 127, 128, 152, 174, 178, 197, 199, 200, 229], "come": [76, 87, 178, 185, 187, 193, 195, 196, 198, 199, 201, 202, 203, 217, 225, 227, 230, 232], "some": [76, 94, 127, 129, 136, 137, 143, 151, 152, 153, 154, 155, 156, 159, 174, 178, 187, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 209, 214, 217, 221, 223, 225, 226, 228, 230, 232], "ones": [76, 130, 178, 186, 192, 193, 197, 230], "right": [76, 136, 148, 178, 193, 197, 198, 200, 201, 202, 210, 215, 225], "left": [76, 94, 136, 148, 178, 201, 202, 214, 225], "laid": [76, 178, 194], "out": [76, 86, 133, 144, 172, 173, 174, 178, 186, 187, 194, 198, 200, 202, 210, 219, 225, 232], "control": [76, 126, 127, 128, 134, 150, 151, 178, 187, 192, 197, 198, 199, 200, 202, 203, 208, 221, 229], "finer": 76, "grain": [76, 202], "manner": [76, 91, 178], "trigger": [76, 135, 178], "textur": [76, 178, 202], "fetch": [76, 178, 202, 221], "restrict": [76, 77, 149, 175, 176, 177, 178, 194, 197, 198, 199, 202, 203, 221], "There": [76, 81, 87, 94, 129, 134, 135, 147, 159, 178, 180, 185, 186, 187, 194, 199, 200, 203, 217, 219, 225, 226, 228], "alias": [76, 81, 151, 178, 186, 193, 202], "scope": [76, 86, 133, 134, 144, 178, 186, 198, 199, 202, 209, 230, 232], "enforc": [76, 178, 192, 200, 203], "specifi": [76, 77, 79, 81, 82, 85, 87, 88, 92, 121, 126, 127, 129, 130, 144, 145, 148, 150, 151, 152, 167, 169, 170, 177, 178, 187, 191, 192, 193, 194, 199, 203, 220, 221, 229, 232], "variabl": [76, 77, 79, 84, 102, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 172, 173, 186, 187, 188, 189, 192, 198, 203, 209, 214, 221, 228], "rank_dynam": [76, 178], "reference_type_is_lvalue_refer": [76, 77, 178], "lvalu": [76, 77, 178, 202], "scalar_array_typ": [76, 178], "properli": [76, 91, 178, 196, 221, 232], "specialis": [76, 178, 202], "sacado": [76, 178], "fad": [76, 178], "const_scalar_array_typ": [76, 178], "non_const_scalar_array_typ": [76, 178], "strip": [76, 178], "const_value_typ": [76, 178], "non_const_value_typ": [76, 145, 171, 178], "certain": [76, 87, 88, 129, 135, 147, 150, 171, 178, 185, 187, 194, 199, 203, 210, 232], "compound": [76, 178], "memory_trait": [76, 178], "non_const_typ": [76, 77, 178], "const_typ": [76, 77, 178], "handl": [76, 77, 81, 94, 144, 145, 146, 149, 151, 154, 156, 158, 178, 192, 194, 196, 198, 200, 202, 226, 232], "reference_typ": [76, 77, 178], "pointer_typ": [76, 77, 178], "size_typ": [76, 81, 82, 87, 178, 198, 202, 226], "partial": [76, 87, 145, 146, 178, 185, 198], "No": [76, 77, 165, 178], "made": [76, 77, 87, 178, 194, 196, 197, 203, 217, 232], "nullptr": [76, 132], "dt": [76, 79, 178], "prop": [76, 178], "rt": [76, 77, 79], "rp": [76, 77, 79], "inttyp": [76, 77, 178], "is_regular": [76, 178], "standard": [76, 77, 81, 83, 87, 89, 91, 136, 138, 139, 178, 186, 187, 195, 198, 200, 205, 208, 217, 220, 232], "profil": [76, 77, 127, 143, 144, 145, 146, 178, 207, 234], "allocproperti": [76, 178], "view_alloc": [76, 79, 97, 170, 175, 176, 178, 202], "ptr": [76, 87, 126, 128, 135, 174, 178, 202], "required_allocation_s": [76, 178], "nr": [76, 178], "wrapper": [76, 152, 178, 187, 203], "TO": [76, 210], "BE": [76, 210], "scratchspac": [76, 178, 192], "sizeof": [76, 159, 169, 177, 178, 192, 194, 196, 202, 227, 232], "typic": [76, 135, 178, 185, 187, 192, 193, 194, 196, 198, 202, 221, 223, 226, 232], "team_handl": [76, 149, 151, 154, 156, 158, 178], "i0": [76, 77, 144, 145, 153, 155, 157, 177, 178, 214], "i1": [76, 153, 155, 157, 177, 178, 214], "i2": [76, 153, 155, 157, 177, 178], "i3": [76, 153, 155, 157, 178], "i4": [76, 178], "i5": [76, 178], "i6": [76, 178], "beyond": [76, 87, 151, 178, 187, 197, 203, 225], "kokkos_debug": [76, 178, 187], "dim": [76, 77, 79, 178, 224], "architectur": [76, 77, 83, 178, 182, 183, 185, 187, 192, 195, 197, 199, 202, 203, 207, 221, 225, 228, 229], "effici": [76, 77, 81, 178, 195, 201, 202], "cast": [76, 77, 178, 202], "applic": [76, 77, 178, 186, 187, 188, 193, 194, 195, 197, 198, 199, 201, 202, 203, 207, 217, 221, 224, 228, 230, 231, 234], "stride_0": [76, 77, 178], "stride_1": [76, 77, 178], "stride_2": [76, 77, 178], "stride_3": [76, 77, 178], "stride_4": [76, 77, 178], "stride_5": [76, 77, 178], "stride_6": [76, 77, 178], "stride_7": [76, 77, 178], "lowest": [76, 127, 139, 178], "highest": [76, 129, 178, 193, 195, 217], "due": [76, 178, 194, 195, 196, 200, 202, 232], "pad": [76, 170, 178, 179, 197, 199, 200, 202], "belong": [76, 178], "n8": [76, 178], "byte": [76, 127, 128, 135, 136, 152, 178, 202], "use_count": [76, 77, 178], "aim": [76, 178, 202, 217], "legal": [76, 78, 149, 151, 153, 154, 155, 156, 178, 192, 198, 199, 202], "intercept": [76, 178], "illeg": [76, 178, 192, 202], "dsttype": [76, 178], "srctype": [76, 178], "dst_view": [76, 178], "src_view": [76, 178], "scrtype": 76, "met": [76, 178, 210, 218, 220], "is_const": [76, 178], "memoryspaceaccess": [76, 87, 178], "furthermor": [76, 178, 185, 192, 193, 194, 198, 199, 202, 213, 217, 218, 227], "neither": [76, 144, 145, 146, 178, 200, 210], "nor": [76, 144, 145, 146, 178, 200, 210], "k": [76, 87, 94, 129, 149, 150, 155, 158, 171, 178, 192, 201, 202], "hold": [76, 81, 178, 202, 230], "cstdio": [76, 144, 145, 146, 171, 178, 182, 183, 184, 214, 232], "atoi": [76, 121, 144, 145, 146, 171, 178, 214], "inita": [76, 178, 214], "initb": [76, 178, 214], "const_a": [76, 178, 214], "const_b": [76, 178, 214], "setc": [76, 178, 214], "kokkos_dynamicview": 77, "parent": [77, 201, 231], "array_typ": [77, 190, 191], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "chunk": [77, 87, 135, 150, 152, 192, 198, 227], "rais": [77, 195, 206], "nearest": [77, 138], "power": [77, 136, 138, 194, 195, 219, 221], "resize_seri": 77, "reserv": [77, 82, 193, 202], "amount": [77, 87, 129, 185, 192, 198, 199], "suffici": [77, 186, 198, 202, 223], "chunk_siz": [77, 87, 150, 152], "outsid": [77, 94, 187, 192, 194, 197, 202, 219, 233], "region": [77, 85, 143, 144, 145, 146, 192, 193, 194, 196, 197, 202, 232], "allocation_ext": 77, "noexcept": [77, 151, 164, 166, 214], "multipli": [77, 102, 105, 120, 163, 192], "alwai": [77, 87, 94, 182, 183, 192, 200, 202, 227], "until": [77, 86, 87, 94, 132, 134, 151, 178, 185, 200, 208, 217, 227, 228, 231], "greater": [77, 131, 136, 202], "initializedata": 77, "kokkos_offsetview": [78, 206], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 87, 88, 129, 130, 132, 134, 135, 136, 137, 138, 139, 164, 166, 168, 171, 178, 185, 187, 192, 194, 195, 198, 200, 201, 202, 208, 214, 227, 230], "ov": 78, "initializer_list": [78, 148], "instead": [78, 81, 129, 130, 131, 135, 138, 144, 178, 192, 193, 198, 200, 202, 209, 214], "obtain": [78, 192, 193, 194, 202, 221, 226], "begin0": 78, "end0": 78, "exactli": [78, 87, 135, 200, 202], "drop": [78, 132, 187, 194], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 160, 201], "21": [78, 187, 213], "assert_eq": 78, "deep": [78, 92, 135, 171, 194, 228], "sens": [78, 147, 196, 197, 200, 202, 232], "similarli": [78, 94, 232], "kokkos_scatterview": [79, 206], "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "data_type_info": 79, "duplicateddatatyp": 79, "newli": [79, 127, 128, 159], "internal_data_typ": 79, "internal_view_typ": 79, "internal_view": 79, "variad": 79, "pack": [79, 226], "exec_spac": [79, 171, 179], "scatteraccess": 79, "accumul": [79, 197, 198, 231], "contribute_into": 79, "reset_except": 79, "tbd": 79, "free": [79, 81, 83, 135, 138, 146, 193, 196, 197, 202, 204, 214, 228, 232], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "foo": [79, 144, 145, 159, 178, 198, 202, 214], "bar": [79, 214], "input_i": 79, "result_i": 79, "kokkos_staticcrsgraph": [80, 206], "simplifi": [80, 190], "manipul": [80, 89, 127, 128, 138, 178], "staticcrsgraphtyp": 80, "row_map": 80, "kokkos_unorderedmap": [81, 206], "design": [81, 82, 94, 187, 194, 195, 197, 200, 207, 217, 220, 221, 226, 228, 230, 231], "ten": [81, 192], "thousand": [81, 226], "consequ": [81, 192, 198, 200], "significantli": [81, 185], "unordered_map": 81, "fail": [81, 127, 171, 200, 202, 219, 221, 230, 232, 233], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 94, 143, 144, 159, 171, 185, 187, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 217, 223, 225, 230, 232], "cach": [81, 135, 152, 185, 187, 192, 194, 197, 199, 202], "friendli": [81, 83, 84, 139, 202, 229], "pod": [81, 145, 146, 192], "plain": [81, 182, 183, 202], "trivial": [81, 94], "copyabl": 81, "capacity_hint": 81, "enough": [81, 87, 217, 219, 225], "requested_capac": 81, "lower": [81, 192], "o": [81, 187, 197], "unorderedmapinsertresult": 81, "invalid_index": 81, "valid_at": 81, "Is": 81, "key_at": 81, "value_at": 81, "hashmap": 81, "success": [81, 127, 128, 221], "successfulli": [81, 218], "present": [81, 87, 131, 184, 186, 197, 217, 221], "did": [81, 189], "valuetypeview": 81, "valuesidxtyp": 81, "lookup": [81, 232], "duplic": [81, 87, 200], "togeth": [81, 87, 198, 199, 226], "report": [81, 217, 220, 221], "impli": [81, 143, 150, 159, 210], "exhaust": 81, "restart": 81, "map_op_typ": 81, "value_view_typ": 81, "noop_typ": 81, "OR": [81, 109, 111, 210], "atomic_add_typ": 81, "atomic_add": [81, 104, 185], "pattern": [81, 85, 87, 92, 121, 129, 147, 149, 150, 185, 192, 202, 204, 225, 234], "umap": 81, "kokkos_vector": [82, 206], "overcom": [82, 94], "issu": [82, 83, 137, 138, 151, 171, 178, 187, 192, 194, 197, 198, 200, 202, 205, 207, 213, 216, 219, 220, 221], "reli": [82, 178, 197, 200, 217], "heavili": [82, 187, 203], "grant": 82, "mani": [82, 87, 88, 94, 129, 186, 187, 195, 197, 198, 199, 200, 202, 203, 221, 229, 230, 232], "limit": [82, 87, 94, 139, 152, 184, 186, 187, 192, 195, 197, 200, 202, 210, 213, 219, 220, 231], "below": [82, 87, 91, 94, 121, 131, 132, 136, 138, 139, 144, 145, 150, 178, 187, 190, 202, 203, 208, 217, 221, 227], "synopsi": [82, 138], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": 82, "pop_back": 82, "max_siz": 82, "front": [82, 192], "back": [82, 94, 185, 187, 192, 193, 197, 199, 228], "lower_bound": 82, "theend": 82, "comp_val": 82, "device_to_host": 82, "host_to_devic": 82, "on_host": 82, "perspect": [82, 87, 180, 197], "on_devic": 82, "set_overalloc": 82, "extra": [82, 87, 88, 94, 127, 129, 200, 208], "buffer": [82, 135, 192, 226], "dispatch": [83, 85, 94, 143, 144, 145, 146, 147, 152, 157, 158, 159, 192, 194, 197, 212, 225, 230, 234], "task": [83, 85, 185, 197, 199, 217, 222, 234], "common": [83, 86, 87, 89, 129, 135, 137, 139, 147, 170, 171, 176, 187, 188, 189, 192, 194, 198, 199, 200, 203, 226], "mathemat": [83, 89, 138, 139, 200, 221], "style": [83, 134, 187, 203, 214, 220], "port": [83, 199, 202], "hardwar": [83, 135, 159, 185, 187, 192, 193, 195, 197, 198, 199, 217, 220, 221], "idiom": [83, 94], "recogn": [83, 84, 134, 180, 192, 194, 200, 203], "sfina": [83, 84, 139], "macro": [83, 91, 144, 187, 194, 198, 202, 221, 233], "etc": [83, 135, 151, 186, 187, 202], "kokkos_detectionidiom": [84, 206], "extens": [84, 165, 187, 204, 207, 217, 220, 221], "iso": [84, 87, 182, 183, 184, 200, 202], "iec": 84, "ts": [84, 151, 231], "19568": 84, "2017": [84, 219], "draft": [84, 87, 217], "cplusplu": 84, "github": [84, 187, 196, 205, 207, 217, 218, 219, 220, 232], "io": 84, "v2": [84, 92, 221], "html": [84, 138, 159], "meta": [84, 187], "origin": [84, 102, 104, 105, 128, 159, 185, 200, 201, 202, 204, 219, 221, 230], "propos": [84, 182, 183, 184, 200, 207, 217, 220], "www": [84, 204], "open": [84, 138, 148, 150, 152, 194, 205, 207, 218, 221], "jtc1": 84, "sc22": 84, "wg21": 84, "doc": [84, 138], "paper": [84, 204], "2015": 84, "n4436": 84, "pdf": 84, "void_t": 84, "detector": 84, "exposit": 84, "convien": 84, "metafunct": 84, "leverag": [84, 187, 203, 217], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 139], "true_typ": [84, 139], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 132, 174, 202, 217], "is_detect": 84, "alia": [84, 129, 135, 169, 182, 183, 201, 202, 227], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 94, 121, 183, 186, 192, 194, 195, 198, 200, 201, 203, 217, 218], "is_detected_convert": 84, "To": [84, 94, 127, 128, 135, 144, 170, 171, 187, 188, 192, 195, 196, 198, 201, 202, 203, 205, 208, 217, 218, 221, 224, 232], "is_convert": 84, "later": [84, 129, 186, 189, 196, 198, 200, 202, 209, 232], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": 84, "copy_assign_t": 84, "declval": [84, 201], "Then": [84, 187, 201, 202, 203], "easili": [84, 196, 202, 231, 232], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 135, 177, 202], "diff_t": 84, "declar": [84, 138, 145, 186, 198, 202, 209], "our": [84, 196, 197, 199, 221, 224, 232], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 94, 121, 129, 135, 147, 182, 183, 192, 195, 199, 200, 207], "place": [85, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 128, 129, 135, 146, 147, 192, 193, 194, 196, 198, 199, 200, 219, 221, 226, 232], "nestedpolici": 85, "summari": [85, 219, 221], "setter": [85, 148, 150, 192], "hip": [85, 87, 88, 93, 135, 148, 150, 159, 171, 187, 193, 202, 207, 208, 220, 221], "sycl": [85, 87, 88, 93, 135, 138, 148, 150, 159, 187, 193, 207, 208, 213], "schedul": [85, 87, 148, 150, 152, 192, 231], "through": [85, 94, 144, 145, 146, 148, 150, 151, 185, 187, 189, 192, 195, 196, 197, 198, 200, 201, 202, 204, 205, 217, 221, 223, 226, 232], "steal": [85, 148, 150], "queue": [85, 148, 150, 159, 217, 231], "machin": [85, 148, 150, 187, 195, 199, 200, 203, 212, 219, 221], "backend": [85, 86, 87, 131, 135, 138, 144, 148, 150, 153, 155, 157, 159, 164, 167, 186, 187, 193, 194, 203, 207, 213, 219, 220, 227, 228, 232], "indextyp": [85, 87, 148, 149, 150, 152, 192], "travers": [85, 148, 150], "launchbound": [85, 87, 148, 150], "maxthread": [85, 148, 150], "minblock": [85, 148, 150], "launch": [85, 92, 94, 143, 148, 150, 151, 152, 192, 202, 221, 228, 230, 231], "worktag": [85, 145, 146, 148, 150, 191, 206], "someclass": [85, 148, 150], "detail": [86, 87, 91, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 135, 139, 144, 162, 177, 186, 187, 188, 191, 193, 195, 198, 202, 203, 217, 218, 221], "shutdown": 86, "resourc": [86, 133, 135, 150, 159, 192, 193, 196, 197, 198, 199, 207, 220, 228, 231, 232], "destruct": [86, 87], "thu": [86, 145, 149, 151, 178, 184, 187, 192, 193, 194, 196, 198, 199, 202, 217, 219, 227, 228, 231, 232, 233], "context": [86, 87, 94, 133, 134, 153, 154, 155, 156, 157, 158, 178, 224, 225, 228, 232], "automat": [86, 121, 131, 135, 187, 193, 194, 198, 200, 202, 220, 225, 227], "aid": 86, "mistak": 86, "live": [86, 202, 217], "my_view": [86, 132, 133, 134, 172, 173], "destructor": [86, 132, 133, 134, 151, 202, 214], "switch": [86, 185, 194, 219], "subsequ": [86, 94, 134, 152, 226], "driven": [87, 217], "essenti": [87, 200, 221], "incept": 87, "recent": [87, 219], "readili": 87, "fact": [87, 230], "hasn": 87, "realli": [87, 132, 187, 196, 203], "even": [87, 94, 128, 129, 132, 133, 135, 145, 186, 187, 191, 194, 197, 199, 201, 202, 210, 223, 226, 230, 233], "agre": [87, 218], "merg": [87, 217, 219, 220, 221], "languag": [87, 88, 91, 129, 135, 147, 186, 195, 197, 198, 200, 201, 202, 203, 204, 224], "featur": [87, 88, 129, 135, 147, 165, 186, 187, 192, 194, 198, 200, 202, 203, 205, 208, 217, 218, 219, 221], "consid": [87, 180, 185, 186, 192, 196, 200, 201, 202, 217, 218, 230, 232], "formal": [87, 92, 129, 135, 147, 180, 197], "rapid": [87, 208], "expans": 87, "demand": [87, 227], "lack": [87, 198, 199], "harden": 87, "acut": 87, "ever": [87, 129, 135, 147, 192, 202], "project": [87, 186, 187, 197, 203, 205, 216, 218, 220, 221], "horizon": 87, "resili": [87, 207], "few": [87, 94, 129, 187, 192, 202, 221], "best": [87, 182, 183, 186, 193, 202, 228, 231], "core": [87, 88, 144, 185, 187, 192, 193, 195, 197, 199, 205, 207, 217, 220, 221, 229], "addition": [87, 92, 129, 170, 178, 189, 202], "promot": [87, 129, 135, 137, 210, 217, 221], "plan": [87, 94, 198, 207], "good": [87, 94, 129, 185, 186, 192, 198, 199, 202, 205, 210, 229, 230], "holist": 87, "interact": [87, 160, 187, 218, 227, 230], "experi": [87, 195, 199, 202, 221], "garner": 87, "year": [87, 186, 204, 217, 218, 219], "particip": [87, 201, 217, 220], "executor": 87, "effort": [87, 186, 187, 202, 207, 217, 221], "2011": [87, 197, 198], "sutton": 87, "stroustrup": 87, "guid": [87, 147, 195, 198, 207], "particular": [87, 118, 119, 124, 129, 185, 187, 192, 193, 194, 198, 199, 202, 203, 210, 213, 220, 221, 226, 230], "constraint": [87, 192], "axiom": 87, "philosophi": 87, "focus": 87, "balanc": [87, 94], "flexibl": [87, 129, 194], "eas": 87, "learn": [87, 129, 144, 198], "far": [87, 94, 197, 202, 230], "though": [87, 135, 187, 233], "pure": [87, 194, 195, 232], "veri": [87, 94, 187, 197, 198, 200, 203, 226], "slightli": [87, 194], "By": [87, 187, 192, 197, 198, 199, 200, 202], "minim": [87, 186, 189, 193, 198, 217], "cognit": 87, "perhap": 87, "import": [87, 187, 192, 194, 197, 198, 201, 202, 217, 221, 225, 228], "subsumpt": 87, "hierarchi": [87, 129, 192, 199, 207], "branch": [87, 151, 153, 154, 155, 156, 192, 199, 205, 213, 217, 219, 220, 221], "width": [87, 200, 219], "roughli": [87, 192, 218], "speak": [87, 94, 232], "high": [87, 94, 152, 186, 192, 195, 199, 200, 202, 203, 204, 217], "major": [87, 88, 186, 194, 200, 202, 207, 217, 220, 221], "visibl": [87, 129, 135], "minor": [87, 88, 186, 217], "memorylayout": 87, "taskschedul": [87, 94], "treat": [87, 135, 197, 198, 221], "kokkos_concept": 87, "enumer": [87, 186], "iterationpattern": 87, "question": [87, 195, 210, 217, 218], "friend": [87, 94], "rather": [87, 94, 129, 135, 193, 203], "alik": 87, "extern": [87, 94, 187, 202, 205, 220, 234], "off": [87, 197, 202, 208, 231], "look": [87, 129, 144, 193, 196, 198, 200, 201, 202, 232], "ex": [87, 92, 129], "copyconstruct": 87, "defaultconstruct": 87, "is_integral_v": 87, "scratch_memory_spac": [87, 129, 151, 192], "ostream": [87, 129, 144], "ostr": [87, 129], "in_parallel": [87, 129], "print_configur": [87, 129, 131], "ve": [87, 196, 232], "extrapol": 87, "progress": [87, 197, 199, 217, 218, 219], "eventu": [87, 186], "further": [87, 145, 187, 192, 196, 200, 202, 217, 221, 226, 231, 232], "cannot": [87, 129, 130, 134, 136, 143, 179, 193, 200, 217, 231], "constrain": [87, 199], "known": [87, 137, 138, 197, 201, 207, 213, 219, 226], "decid": [87, 197, 198, 220, 221], "argu": 87, "around": [87, 174, 187, 194, 196, 202, 213, 223, 226, 228, 232, 233], "wherebi": 87, "meet": [87, 92, 129, 149, 151, 170, 177, 217, 218, 220], "definit": [87, 121, 144, 180, 197, 198, 225, 226, 230, 233], "practic": [87, 94, 129, 135, 138, 147, 159, 178, 195, 200, 202, 228, 230], "converg": [87, 195], "relev": [87, 102, 104, 105, 207, 217, 226], "site": [87, 221], "artifact": 87, "assess": [87, 218], "intent": [87, 186, 202, 224], "expol": 87, "resulttyp": 87, "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 202], "kokkos_parallel": 87, "technic": [87, 202, 203], "correct": [87, 90, 94, 187, 192, 196, 198, 201, 202, 218, 221, 232], "rvalu": 87, "wouldn": [87, 189], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 151, 192, 198], "implexecutionspaceof": 87, "exclud": [87, 186, 198], "uniquetoken": 87, "add": [87, 121, 123, 144, 180, 185, 186, 187, 190, 192, 194, 197, 200, 202, 203, 217, 223, 230, 231], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "sleep": 87, "wake": 87, "unclear": 87, "concret": [87, 197], "teampolicyintern": [87, 206], "nice": [87, 200], "could": [87, 186, 189, 196, 197, 199, 201, 202, 217, 232], "refactor": 87, "noth": [87, 126, 129, 135, 147, 197, 198, 202], "mind": [87, 202], "close": [87, 192, 198, 200, 205, 217], "semiregular": 87, "todo": [87, 196, 232], "openmptargetspac": 87, "hbwspace": [87, 88, 202], "mem": [87, 182, 184], "dealloc": [87, 125, 126, 127, 128, 135, 178, 194, 201, 202, 229], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 92], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 217, 221], "exec": 87, "think": [87, 94, 132, 202, 223, 232], "achiev": [87, 135, 192, 194, 202, 221, 225], "signific": [87, 136, 202, 228, 230], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 149], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 147, 150, 152], "cours": 87, "execution_polici": [87, 150, 168], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 150, 152], "complic": [87, 198, 202], "pretti": [87, 94, 129], "straightforward": [87, 170, 225, 226], "iteratetil": 87, "seem": [87, 203], "kokkos_openmp_parallel": 87, "were": [87, 129, 137, 139, 144, 184, 196, 197, 221, 232], "conceptu": [87, 229], "surfac": 87, "area": [87, 128], "Of": [87, 197, 208], "d": [87, 153, 157, 174, 177, 186, 190, 191, 192, 196, 197, 198, 200, 201, 202, 225, 232], "still": [87, 88, 144, 159, 185, 186, 189, 192, 200, 202, 228], "shortcut": [87, 129, 147], "probabl": [87, 94, 192, 198, 200], "teach": [87, 198], "advanc": [87, 129, 198, 221, 234], "ax": [87, 228], "me": 87, "why": [87, 193, 228], "axi": 87, "extend": [87, 195], "overhead": [87, 94, 143, 198, 200, 202, 225], "describ": [87, 94, 121, 129, 135, 147, 152, 184, 188, 195, 196, 197, 199, 200, 204, 205, 208, 214, 221, 228, 229, 231, 232], "isn": [87, 94, 129, 196, 232], "concern": [87, 195, 197, 226, 230], "simplest": [87, 192, 193, 226], "But": [87, 188, 192, 196, 202, 230], "kokkos_vers": 88, "patch": [88, 217], "10000": [88, 198, 202], "kokkos_enable_debug": [88, 208], "kokkos_enable_debug_bounds_check": [88, 208], "kokkos_enable_debug_dualview_modify_check": [88, 208], "kokkos_enable_deprecated_code_3": 88, "kokkos_enable_deprecation_warn": 88, "warn": [88, 131, 178, 186, 202, 203, 206, 208, 213, 217, 219], "kokkos_enable_hbwspac": 88, "kokkos_enable_memkind": [88, 208], "kokkos_enable_tun": [88, 208], "bind": [88, 193, 207, 208, 224], "tune": [88, 187, 203, 208, 225, 234], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 127, 179, 200, 202, 220, 229], "kokkos_enable_aggressive_vector": [88, 208], "assumpt": [88, 193], "ignor": [88, 94, 192, 193, 200], "aggress": [88, 202, 208], "ifdef": [88, 194], "kokkos_enable_seri": [88, 187, 208], "kokkos_enable_openmp": [88, 187, 208], "kokkos_enable_openmptarget": [88, 208], "kokkos_enable_thread": [88, 187, 208], "kokkos_enable_cuda": [88, 187, 208], "kokkos_enable_hip": [88, 187, 208], "kokkos_enable_hpx": [88, 208], "kokkos_enable_sycl": [88, 187, 208], "kokkos_enable_cuda_constexpr": [88, 208], "kokkos_enable_cuda_lambda": [88, 208], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": [88, 208], "intrins": [88, 121, 136, 182, 183, 188, 194, 200, 202, 208, 224], "kokkos_enable_cuda_relocatable_device_cod": [88, 208], "relocat": [88, 203, 208, 220], "kokkos_enable_cuda_uvm": [88, 208, 222], "kokkos_enable_hip_multiple_kernel_instanti": [88, 208], "instanti": [88, 186, 197, 199, 200, 202, 208], "improv": [88, 186, 195, 198, 199, 208, 213, 218, 225], "kokkos_enable_hip_relocatable_device_cod": [88, 208], "latest": [88, 91, 186, 213], "path": [88, 131, 186, 187, 208, 217, 221, 226], "expos": [88, 129, 191, 192, 199, 225], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 121, 186, 188, 193, 197, 199, 202, 203, 217, 218, 221, 223, 226, 229, 232], "libari": 88, "kokkos_enable_hwloc": [88, 187, 208], "libhwloc": [88, 187], "numa": [88, 193], "kokkos_enable_librt": [88, 208], "link": [88, 91, 144, 178, 187, 203, 207, 221, 225], "posix": 88, "librt": [88, 187, 208], "backward": [88, 134, 212], "memkind": [88, 208], "heap": 88, "kokkos_enable_libdl": [88, 208], "linker": [88, 144, 187, 203], "libdl": [88, 208], "kokkos_enable_libquadmath": 88, "gcc": [88, 187, 203, 209, 213, 219, 220], "quad": 88, "precis": [88, 187, 196, 224, 226, 230, 232], "math": [88, 89, 200, 207, 234], "kokkos_arch_sse42": 88, "sse": 88, "kokkos_arch_armv80": [88, 208], "armv8": [88, 187, 208], "kokkos_arch_armv8_thunderx": [88, 208], "cavium": [88, 221], "thunderx": [88, 187, 221], "kokkos_arch_armv81": [88, 208], "kokkos_arch_armv8_thunderx2": [88, 208], "thunderx2": 88, "kokkos_arch_amd_avx2": 88, "avx2": 88, "zen": [88, 208], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": 88, "avx512": 88, "kokkos_arch_knc": [88, 208], "intel": [88, 187, 192, 200, 208, 213, 217, 219, 220, 221], "knight": [88, 221], "corner": [88, 215], "xeon": [88, 187, 221], "phi": [88, 137, 187], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power7": [88, 208], "ibm": [88, 187, 213, 219], "power7": [88, 187, 208], "kokkos_arch_power8": [88, 208], "power8": [88, 187, 208, 219], "kokkos_arch_power9": [88, 208], "power9": [88, 208], "kokkos_arch_intel_gen": [88, 208], "kokkos_arch_intel_dg1": [88, 208], "iri": [88, 208], "xemax": [88, 208], "kokkos_arch_intel_gen9": [88, 208], "gen9": [88, 208], "kokkos_arch_intel_gen11": [88, 208], "gen11": [88, 208], "kokkos_arch_intel_gen12lp": [88, 208], "gen12lp": [88, 208], "kokkos_arch_intel_xehp": [88, 208], "xe": [88, 208], "hp": [88, 208], "kokkos_arch_intel_pvc": [88, 208], "pont": [88, 208], "vecchio": [88, 208], "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 187, 192, 199, 200, 208, 217, 220, 221, 226], "kepler": [88, 187], "kokkos_arch_kepler30": [88, 208], "cc": [88, 187, 208, 224], "kokkos_arch_kepler32": [88, 208], "kokkos_arch_kepler35": [88, 208], "kokkos_arch_kepler37": [88, 208], "kokkos_arch_maxwel": 88, "maxwel": [88, 187], "kokkos_arch_maxwell50": [88, 208], "kokkos_arch_maxwell52": [88, 208], "kokkos_arch_maxwell53": [88, 208], "kokkos_arch_navi": 88, "amd": [88, 217, 220], "navi": 88, "kokkos_arch_navi1030": [88, 208], "v620": [88, 208], "w6800": [88, 208], "gfx1030": [88, 208], "kokkos_arch_pasc": 88, "pascal": 88, "kokkos_arch_pascal60": [88, 208], "kokkos_arch_pascal61": [88, 208], "kokkos_arch_volta": 88, "volta": 88, "kokkos_arch_volta70": [88, 208], "kokkos_arch_volta72": [88, 208], "kokkos_arch_turing75": [88, 208], "ture": 88, "kokkos_arch_amper": 88, "amper": [88, 208], "kokkos_arch_ampere80": [88, 208], "kokkos_arch_ampere86": [88, 208], "kokkos_arch_ada89": [88, 208], "ada": [88, 208], "kokkos_arch_hopp": 88, "hopper": [88, 208], "kokkos_arch_hopper90": [88, 208], "kokkos_arch_amd_zen": 88, "kokkos_arch_amd_zen2": 88, "zen2": [88, 208], "kokkos_arch_amd_zen3": 88, "zen3": [88, 208], "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 208], "mi25": [88, 208], "gfx900": [88, 208], "kokkos_arch_vega906": [88, 208], "mi50": [88, 208], "mi60": [88, 208], "gfx906": [88, 208], "kokkos_arch_vega908": [88, 208], "mi100": [88, 208], "gfx908": [88, 208], "kokkos_arch_vega90a": [88, 208], "mi200": [88, 208], "seri": [88, 195, 208, 221], "gfx90a": [88, 208], "kokkos_mathematicalconst": [89, 137, 206], "backport": [89, 217], "sqrt2": [89, 137], "kokkos_mathematicalfunct": [89, 138, 206], "consist": [89, 138, 167, 187, 192, 197, 199, 200, 220, 226], "portabl": [89, 129, 137, 185, 194, 195, 197, 198, 200, 204, 209, 217, 224, 225, 227, 229, 234], "fab": [89, 138], "sqrt": [89, 138, 182, 184, 200, 209], "sin": [89, 137, 138, 182], "kokkos_numerictrait": [89, 139, 206], "ad": [89, 102, 104, 105, 139, 184, 186, 187, 192, 200, 203, 217, 231, 232], "23": [89, 139, 204, 207, 220], "numeric_limit": [89, 139], "kokkos_bitmanipul": [89, 136], "individu": [89, 94, 138, 139, 194, 203, 221, 230], "compos": [90, 226], "team_size_max": [90, 152], "team_size_recommend": [90, 140, 141, 142, 152], "strive": [91, 200], "howev": [91, 94, 129, 159, 192, 194, 195, 196, 197, 198, 199, 200, 202, 210, 213, 221, 225, 232], "deviat": 91, "approach": [91, 94, 185, 195, 197, 198, 200, 202, 230, 234], "section": [91, 187, 192, 194, 196, 197, 198, 202, 208, 219, 221, 232], "usag": [91, 93, 131, 133, 134, 143, 144, 158, 160, 182, 183, 184, 187, 194, 199, 201, 202, 203, 224], "guidanc": [91, 182, 205], "relationship": [92, 94, 159, 192, 202], "entiti": [92, 94, 186, 197], "msp1": 92, "msp2": 92, "retriev": [92, 94, 150, 189, 231], "v1": [92, 221], "word": [92, 129, 135, 147, 187, 200], "shape": 92, "attribut": [92, 199, 200, 202, 206], "intercessori": 92, "executionspaceconcept": [93, 143, 170], "defaulthostexecutionspac": [93, 166, 193, 194], "hipspac": [93, 202, 206], "hiphostpinnedspac": [93, 202], "hipmanagedspac": 93, "sycldeviceusmspac": 93, "syclhostusmspac": 93, "syclsharedusmspac": 93, "sharedspac": [93, 222], "sharedhostpinnedspac": [93, 227], "memoryspaceconcept": [93, 170], "lightweight": 94, "substanti": 94, "futur": [94, 129, 193, 195, 199, 202, 212, 217, 219, 231], "Not": [94, 193, 202], "too": [94, 143, 202, 213, 232], "small": [94, 134, 135, 198, 231], "inher": 94, "plenti": 94, "scale": [94, 129, 187, 221], "easier": [94, 198, 205, 227, 229], "hierarch": [94, 153, 154, 155, 156, 157, 158, 197, 198, 199, 212, 231, 234], "ordinari": [94, 198], "portion": [94, 200], "haev": 94, "addit": [94, 129, 138, 171, 188, 193, 195, 197, 198, 200, 202, 217, 225, 230, 232], "output": [94, 129, 174, 185, 191, 193, 199, 221, 225], "mytask": 94, "produc": [94, 195, 198, 200, 226, 228], "task_spawn": [94, 231], "host_spawn": 94, "tasksingl": [94, 231], "taskteam": [94, 144, 145, 146], "former": [94, 187, 198, 202, 221], "worker": [94, 145, 231], "spawn": [94, 231], "basicfutur": [94, 231], "when_al": [94, 231], "scheduler_typ": 94, "discuss": [94, 192, 197, 200, 202, 217, 218], "fut": 94, "mytaskfunctor": 94, "readi": [94, 186, 202], "earliest": 94, "fut2": 94, "myothertaskfunctor": 94, "my_funct": [94, 129], "sched": 94, "my_result_typ": 94, "my_task_result": 94, "ff": [94, 219], "better": [94, 187, 192, 202, 203, 214, 228], "never": [94, 129, 186, 187, 200, 202, 203], "share": [94, 151, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 207, 217, 225, 226, 232], "transit": [94, 208, 217], "undefin": [94, 127, 128, 131, 178, 194, 202, 209, 233], "worst": 94, "kind": [94, 144, 197, 198, 201, 221], "bug": [94, 129, 186, 196, 213, 217, 218, 219, 232], "segfault": [94, 203], "hour": [94, 186], "is_nul": 94, "attempt": [94, 197], "poll": 94, "is_readi": [94, 231], "forbidden": 94, "anywher": 94, "abil": [94, 144, 197, 200, 224], "yet": [94, 128, 165, 180, 186, 195, 197, 200, 201, 217, 219], "extrem": [94, 196, 197, 202, 232], "expens": [94, 201], "sledgehamm": 94, "sparingli": 94, "alon": [94, 187], "pend": 94, "decis": [94, 192, 217, 226], "piec": 94, "help": [94, 187, 190, 193, 195, 198, 202, 203, 232], "cost": [94, 185, 195, 201, 202], "tradit": [94, 135], "reus": [94, 192, 230], "successor": 94, "respawn": [94, 231], "future_typ": [94, 231], "got": 94, "redund": [94, 226], "lead": [94, 129, 186, 192, 196, 202, 203, 217, 227, 232], "lazi": 94, "third": [94, 187, 192, 194, 197, 201, 203, 217, 225], "serv": [94, 129, 217], "observ": [94, 143, 193, 232], "effect": [94, 129, 143, 178, 186, 187, 192, 198, 199, 200, 230, 232], "taskprior": 94, "regular": [94, 202, 217], "low": [94, 185, 195, 198, 200, 202], "boolean": [95, 129, 172, 173, 174, 198, 200], "device_id": [96, 130, 131, 166, 193], "num_thread": [96, 130, 131, 164, 193], "critic": [97, 197, 217], "_view": 97, "awar": [97, 192, 197, 202, 204, 225], "bundl": [97, 179], "loos": [97, 170, 180], "behav": [97, 171, 180, 200, 201, 202], "old_val": [99, 101], "ptr_to_valu": [99, 100, 101, 102, 103, 104, 105, 106], "comparison_valu": [99, 100], "was_exchang": 100, "update_valu": [102, 104, 105], "previou": [102, 134, 137, 138, 152, 176, 192, 206, 219], "atomic_fetch_add": [102, 104, 185, 192], "tmp": [102, 192, 225], "atomic_fetch_and": 102, "atomic_fetch_div": 102, "divid": [102, 105, 144, 145, 146, 163, 190, 191, 223, 228], "atomic_fetch_lshift": 102, "atomic_fetch_max": 102, "atomic_fetch_min": 102, "atomic_fetch_mul": 102, "atomic_fetch_mod": 102, "atomic_fetch_or": 102, "atomic_fetch_rshift": 102, "atomic_fetch_sub": [102, 104], "substract": [102, 105], "atomic_fetch_xor": 102, "atomic_and": 104, "atomic_assign": 104, "atomic_decr": 104, "atomic_incr": [104, 185], "atomic_max": 104, "atomic_min": 104, "atomic_or": 104, "atomic_sub": 104, "subtract": 104, "atomic_add_fetch": 105, "atomic_and_fetch": 105, "atomic_div_fetch": 105, "atomic_lshift_fetch": 105, "atomic_max_fetch": 105, "atomic_min_fetch": 105, "atomic_mul_fetch": 105, "atomic_mod_fetch": 105, "atomic_or_fetch": 105, "atomic_rshift_fetch": 105, "atomic_sub_fetch": 105, "atomic_xor_fetch": 105, "conjunct": [107, 149, 185, 187, 192, 193, 217], "bitwis": [108, 109, 136, 202], "AND": [108, 110, 210], "remove_cv": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "result_view_typ": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 191], "value_": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 191], "local": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 135, 145, 146, 187, 192, 193, 197, 198, 199, 201, 202, 208, 209, 219, 221, 227], "reduction_ident": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 188, 190, 198], "resid": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 135, 199, 227], "customtyp": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123], "_min": [112, 113, 116, 117], "vallocscalar": [113, 115, 122, 192], "loc": [113, 115, 124, 189], "_max": [113, 114, 115, 116, 117], "minmaxscalar": [116, 122, 192], "min_val": [116, 117, 118, 119, 189], "max_val": [116, 117, 118, 119, 189], "minmaxlocscalar": [117, 122, 192], "min_loc": [117, 118, 189], "max_loc": [117, 118, 189], "minvalu": [118, 119], "maxvalu": [118, 119], "hypothet": 121, "brief": [121, 214, 217], "build": [121, 129, 171, 186, 192, 193, 195, 198, 205, 207, 208, 219, 221, 234], "monoid": 121, "val1": 121, "val2": 121, "ident": [121, 150, 152, 170, 190, 192, 197, 198, 202, 223], "el": 121, "under": [121, 171, 186, 187, 198, 202, 205, 210, 217, 221], "reducesum": 121, "lval": 121, "l": [121, 138, 155, 197, 219], "resultvalu": 124, "resultindex": 124, "shrink": [125, 175, 176], "throw": [126, 127, 128, 152, 194, 202], "runtime_error": 126, "failur": [126, 127, 128, 152, 178, 219, 220], "uniniti": [127, 148, 150, 152, 170, 175, 176, 202], "metadata": 127, "succe": 127, "suitabl": [127, 186, 198, 225], "rawmemoryallocationfailur": [127, 128], "thrown": 127, "memadvis": [127, 128, 178], "tool": [127, 131, 144, 145, 146, 186, 207, 208, 234], "kokkosp": 127, "On": [127, 128, 185, 187, 192, 201, 208, 232], "avoid": [127, 128, 129, 186, 192, 201, 202, 203, 209, 217, 219, 232], "leak": [127, 128, 202], "freed": [128, 192, 202], "new_siz": 128, "invalid": [128, 202], "rare": [129, 135], "offload": 129, "talk": [129, 135, 147, 196, 232], "theoret": [129, 135, 147], "treatment": [129, 135, 147], "disclaim": [129, 135, 147, 210], "term": [129, 135, 147, 197, 202, 205, 210, 217, 230], "anyon": [129, 135, 147, 205], "who": [129, 135, 147, 195, 202, 217, 218, 220, 226, 229], "knew": [129, 135, 147], "confus": [129, 135, 147, 202], "often": [129, 135, 147, 178, 185, 192, 194, 195, 197, 198, 200, 202, 221, 226], "shini": [129, 135, 147], "pramet": 129, "surpris": 129, "answer": [129, 192, 202], "ll": [129, 196, 202, 232], "nowher": 129, "intermedi": [129, 198], "static_assert": [129, 171, 201, 227], "incompat": [129, 187], "prefer": [129, 144, 186, 193, 198, 202, 203, 208, 209, 233], "explicit": [129, 138, 144, 172, 173, 174, 192, 198, 199, 209, 217], "simpli": [129, 187, 192, 194, 196, 200, 203, 224, 225, 226, 230, 232], "mental": 129, "exercis": [129, 221], "translat": [129, 196, 232], "tend": [129, 185, 199], "verbos": 129, "much": [129, 144, 186, 191, 195, 197, 198, 200, 202], "risk": [129, 186], "lose": 129, "caution": [129, 187], "necessarili": [129, 171, 192, 194, 199, 202], "strengthen": 129, "unspecifi": [129, 162, 178, 199], "care": [129, 186, 200], "print": [129, 131, 144, 161, 167, 174, 193, 208], "arraylayout": 129, "recommend": [129, 152, 192, 198, 200, 202, 213, 221], "scratchmemoryspac": 129, "ex2": 129, "ex1": 129, "usabl": [129, 136, 202], "shorthand": [129, 135], "typetrait": [129, 135], "num_numa": [130, 193], "ndevic": [130, 193], "skip_devic": [130, 193], "disable_warn": [130, 131, 193], "favor": [130, 196, 232], "One": [130, 152, 185, 187, 189, 192, 194, 200, 202, 225, 226, 230, 232], "distinguish": [130, 139, 198], "kokkoscor": 131, "set_num_thread": [131, 132, 134], "set_device_id": 131, "set_disable_warn": [131, 134], "initializ": 131, "introduc": [131, 192, 198, 199, 220, 227], "unset": 131, "let": [131, 151, 187, 192, 194, 196, 197, 198, 201, 202, 226, 232], "tabl": [131, 187, 193, 202, 221], "set_parameter_nam": 131, "parameter_typ": 131, "parameter_nam": 131, "has_parameter_nam": 131, "get_parameter_nam": 131, "summar": 131, "id": [131, 164, 166, 192, 193, 194], "minu": 131, "map_device_id_bi": 131, "mpi_rank": 131, "round": [131, 138, 193, 197], "robin": [131, 193], "mpi": [131, 133, 134, 185, 187, 193, 195, 201, 203, 222, 229, 234], "disabl": [131, 144, 187, 198], "messag": [131, 193, 195, 201, 217, 219, 221], "configur": [131, 193, 200, 208, 217, 219, 220, 221, 227], "tune_intern": 131, "autotun": 131, "heurist": 131, "tools_lib": 131, "full": [131, 144, 180, 182, 185, 187, 193, 194, 196, 199, 200, 232], "ld_library_path": 131, "tools_help": 131, "command": [131, 132, 134, 187, 203, 221], "line": [131, 132, 134, 135, 185, 187, 202, 220, 233], "tools_arg": 131, "set_print_configur": 131, "set_map_device_id_bi": [131, 132, 134], "environ": [131, 133, 134, 135, 164, 166, 187, 193, 194, 198, 202, 203, 219, 221], "thats": 132, "correctli": [132, 144, 187, 198, 203], "presenc": [132, 139, 209], "unhandl": 132, "charact": 132, "uncondition": 132, "precondit": 132, "is_initi": [132, 133, 134], "unique_ptr": 132, "make_opt": 132, "nullopt": 132, "regardless": [132, 197], "clean": [133, 219], "is_fin": [133, 134, 146], "detroi": 133, "ill": 133, "mpi_fin": [133, 193], "erron": 134, "pars": [134, 187], "whenev": 134, "seen": [134, 186, 195, 221], "decrement": [134, 178, 185, 202], "implicitli": [134, 170], "multibyt": 134, "mpi_init": [134, 193], "side": [135, 143, 178, 192, 198, 199, 201, 218], "virtual": [135, 202, 212, 222], "xnack": 135, "unit": [135, 187, 192, 194, 195, 197, 218], "movement": 135, "os": 135, "driver": [135, 221, 227], "moment": [135, 187, 202], "preprocessor": [135, 187, 203, 233], "kokkos_has_shared_spac": 135, "has_shared_spac": [135, 227], "correspoind": 135, "stai": 135, "availab": 135, "event": [135, 149, 192, 210, 221], "nevertheless": [135, 192, 197, 202, 232], "kokkos_has_shared_host_pinned_spac": 135, "has_shared_host_pinned_spac": 135, "bit_cast": 136, "byteswap": 136, "has_single_bit": 136, "bit_ceil": 136, "bit_floor": 136, "bit_width": 136, "rotl": 136, "rotr": 136, "countl_zero": 136, "countl_on": 136, "countr_zero": 136, "countr_on": 136, "popcount": 136, "reinterpret": 136, "represent": [136, 200, 202], "counterpart": 136, "_builtin": 136, "suffix": [136, 138], "magic": 136, "log2": [137, 138], "log10": [137, 138, 182], "inv_pi": 137, "inv_sqrtpi": 137, "ln2": 137, "ln10": 137, "sqrt3": 137, "inv_sqrt3": 137, "egamma": 137, "toolchain": [137, 187, 209], "henc": [137, 198, 209], "pi_v": 137, "motiv": [138, 195, 200, 229], "borrow": 138, "llvm": 138, "compilecudawithllvm": 138, "clang": [138, 187, 203, 213, 219, 220, 234], "ok": [138, 153, 155, 157, 178, 202, 209], "everyth": [138, 200, 202], "__device__": [138, 194, 209], "nvcc": [138, 187, 213, 219], "overrid": [138, 187, 203, 232], "sinf": 138, "goal": [138, 192, 194, 195, 217, 221, 225, 229], "cmath": 138, "sqrtf": 138, "sqrtl": 138, "integraltyp": 138, "arithmet": [138, 139, 159], "reader": [138, 186, 187, 195, 197], "cpprefer": 138, "com": [138, 204, 207, 218, 219, 220], "fmod": 138, "remaind": 138, "remquo": 138, "fma": [138, 182], "fmax": 138, "fmin": 138, "fdim": 138, "nan": 138, "exp": [138, 182], "exp2": [138, 182], "expm1": 138, "log": [138, 182, 219], "log1p": 138, "exponenti": 138, "pow": [138, 182], "cbrt": [138, 182], "hypot": [138, 182], "co": [138, 182, 186, 217], "tan": [138, 182], "asin": [138, 182], "aco": [138, 182], "atan": [138, 182], "atan2": [138, 182], "trigonometr": 138, "sinh": [138, 182], "cosh": [138, 182], "tanh": [138, 182], "asinh": [138, 182], "acosh": [138, 182], "atanh": [138, 182], "hyperbol": 138, "erf": [138, 182], "erfc": [138, 182], "tgamma": [138, 182], "lgamma": [138, 182], "gamma": 138, "ceil": 138, "floor": 138, "trunc": 138, "lround": 138, "llround": 138, "nearbyint": 138, "rint": 138, "lrint": 138, "llrint": 138, "frexp": 138, "ldexp": 138, "modf": 138, "scalbn": 138, "scalbln": 138, "ilog": 138, "logb": 138, "nextaft": 138, "nexttoward": 138, "copysign": [138, 182], "fpclassifi": 138, "isfinit": 138, "isinf": 138, "isnan": 138, "isnorm": 138, "signbit": 138, "isgreat": 138, "isgreaterequ": 138, "isless": 138, "islessequ": 138, "islessgreat": 138, "isunord": 138, "classif": 138, "4767": 138, "feel": [138, 204], "keep": [138, 201, 202, 229], "track": [138, 217, 218], "bewar": 138, "unqualifi": [138, 209], "qualif": [138, 209], "p1841": 139, "break": [139, 178, 186, 196, 203, 232], "monolith": 139, "apart": [139, 185, 186, 202], "denot": [139, 152, 178], "infin": 139, "finite_min": 139, "finite_max": 139, "epsilon": 139, "round_error": 139, "norm_min": 139, "denorm_min": 139, "reciprocal_overflow_threshold": 139, "quiet_nan": 139, "signaling_nan": 139, "characterist": [139, 197, 199, 202, 221, 231], "digit": 139, "digits10": 139, "max_digits10": 139, "radix": 139, "min_expon": 139, "min_exponent10": 139, "max_expon": 139, "max_exponent10": 139, "finite_min_v": 139, "floatingpoint": 139, "norm_min_v": 139, "finite_max_v": 139, "epsilon_v": 139, "round_error_v": 139, "infinity_v": 139, "quiet_nan_v": 139, "signaling_nan_v": 139, "denorm_min_v": 139, "digits_v": 139, "digits10_v": 139, "max_digits10_v": 139, "radix_v": 139, "min_exponent_v": 139, "min_exponent10_v": 139, "max_exponent_v": 139, "max_exponent10_v": 139, "absenc": 139, "has_infin": 139, "enable_if_t": 139, "legacy_std_numeric_limits_infin": 139, "kokkos_execpolici": [140, 141, 142], "policytyp": [140, 141, 142], "recommended_team_s": [140, 141, 142], "outstand": [143, 171, 197], "exec1": 143, "exec2": 143, "stuff": [143, 200], "touch": [143, 202], "wait": [143, 151, 159, 192, 198, 231], "finish": [143, 144, 171, 185, 198, 202], "asynchron": [144, 145, 171, 197, 202, 228, 234], "calle": 144, "execpolici": [144, 145, 146], "functortyp": [144, 145, 146, 152], "hook": [144, 145, 146, 193], "integertyp": [144, 145, 146], "work_tag": [144, 145, 146, 150, 152], "iN": [144, 145], "captur": [144, 192, 198, 202, 224, 230], "snippet": 144, "loop1": [144, 145, 146], "greet": 144, "edit": [144, 187, 197, 215, 217, 219, 221], "hello_world_lambda": 144, "godbolt": 144, "clientstat": 144, "eyjzzxnzaw9ucyi6ift7imlkijogmswgimxhbmd1ywdlijogimmrkyisicjzb3vyy2uioiaily9asevbrevsxg4vlyaqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkioqkipcbi8vxg4vlyagicagicagicagicagicagicagicagietva2tvcyb2lia0ljbcbi8vicagicagienvchlyawdodcaomjaymikgtmf0aw9uywwgvgvjag5vbg9nesamievuz2luzwvyaw5nxg4vlyagicagicagicagicagifnvbhv0aw9ucybvzibtyw5kawesiexmqyaotlrfu1mpllxuly9cbi8vifvuzgvyihrozsb0zxjtcybvzibdb250cmfjdcbers1oqtawmdm1mjugd2l0acbovevtuyxcbi8vihrozsbvllmuiedvdmvybm1lbnqgcmv0ywlucybjzxj0ywluihjpz2h0cybpbib0aglzihnvznr3yxjlllxuly9cbi8vifbhcnqgb2ygs29ra29zlcb1bmrlcib0agugqxbhy2hliexpy2vuc2ugdjiumcb3axroiexmvk0grxhjzxb0aw9ucy5cbi8vifnlzsbodhrwczovl2tva2tvcy5vcmcvteldru5trsbmb3igbgljzw5zzsbpbmzvcm1hdglvbi5cbi8vifnqrfgttgljzw5zzs1jzgvudglmawvyoibbcgfjagutmi4wifdjveggtexwts1legnlchrpb25cbi8vxg4vl0birufervjcblxui2luy2x1zgugpetva2tvc19db3jllmhwcd5cbinpbmnsdwrlidxjc3rkaw8": 144, "xg4jaw5jbhvkzsa8dhlwzwluzm8": 144, "xg5cbi8vxg4vlybcikhlbgxvihdvcmxkxcigcgfyywxszwxfzm9yigv4yw1wbgu6xg4vlyagideuifn0yxj0ihvwietva2tvc1xuly8gicaylibfegvjdxrligegcgfyywxszwwgzm9yigxvb3agaw4gdghligrlzmf1bhqgzxhly3v0aw9uihnwywnllfxuly8gicagicb1c2luzybhiemrkzexigxhbwjkysb0bybkzwzpbmugdghligxvb3agym9kevxuly8gicazlibtahv0igrvd24gs29ra29zxg4vl1xuly8gvghpcyblegftcgxlig9ubhkgynvpbgrziglmiemrkzexiglzigvuywjszwquicbdb21wyxjlihroaxmgzxhhbxbszvxuly8gdg8gmdffagvsbg9fd29ybgqsihdoawnoihvzzxmgznvuy3rvcnmgkgv4cgxpy2l0bhkgzgvmaw5lzcbjbgfzc2vzkvxuly8gdg8gzgvmaw5lihrozsbsb29wigjvzhkgb2ygdghlihbhcmfsbgvsx2zvci4giejvdgggznvuy3rvcnmgyw5kxg4vlybsyw1izgfzighhdmugdghlaxigcgxhy2vzllxuly9cblxuaw50ig1haw4oaw50igfyz2msignoyxiqigfyz3zbxskge1xuicavlybzb3ugbxvzdcbjywxsigluaxrpywxpemuoksbizwzvcmugew91ig1hesbjywxsietva2tvcy5cbiagly9cbiagly8gv2l0acbubybhcmd1bwvudhmsihroaxmgaw5pdglhbgl6zxmgdghligrlzmf1bhqgzxhly3v0aw9uihnwywnlxg4gic8vichhbmqgcg90zw50awfsbhkgaxrzighvc3qgzxhly3v0aw9uihnwywnlksb3axroigrlzmf1bhrcbiagly8gcgfyyw1ldgvycy4giflvdsbtyxkgywxzbybwyxnzigluigfyz2mgyw5kigfyz3ysigfuywxvz291c2x5ihrvxg4gic8vie1qsv9jbml0kckuicbjdcbyzwfkcybhbmqgcmvtb3zlcybjb21tyw5klwxpbmugyxjndw1lbnrzihroyxrcbiagly8gc3rhcnqgd2l0acbcii0ta29ra29zlvwillxuicblb2trb3m6omluaxrpywxpemuoyxjnyywgyxjndik7xg5cbiagly8guhjpbnqgdghlig5hbwugb2ygs29ra29zjybkzwzhdwx0igv4zwn1dglvbibzcgfjzs4gifdlj3jlihvzaw5nxg4gic8vihr5cgvpzcbozxjllcbzbyb0agugbmftzsbtawdodcbnzxqgysbiaxqgbwfuz2xlzcbiesb0agugbglua2vylfxuicavlybidxqgew91ihnob3vszcbzdglsbcbizsbhymxlihrvigzpz3vyzsbvdxqgd2hhdcbpdcbpcy5cbiagchjpbnrmkfwisgvsbg8gv29ybgqgb24gs29ra29zigv4zwn1dglvbibzcgfjzsalc1xcblwilfxuicagicagicagdhlwzwlkketva2tvczo6rgvmyxvsdev4zwn1dglvblnwywnlks5uyw1lkckpo1xuxg4gic8vifj1bibsyw1izgegb24gdghligrlzmf1bhqgs29ra29zigv4zwn1dglvbibzcgfjzsbpbibwyxjhbgxlbcxcbiagly8gd2l0acbhihbhcmfsbgvsigzvcibsb29wignvdw50ig9mide1liagvghligxhbwjkysdzigfyz3vtzw50iglzxg4gic8vigfuigludgvnzxigd2hpy2ggaxmgdghlihbhcmfsbgvsigzvcidzigxvb3agaw5kzxguicbbcyb5b3ugbgvhcm5cbiagly8gywjvdxqgzglmzmvyzw50igtpbmrzig9mihbhcmfsbgvsaxntlcb5b3ugd2lsbcbmaw5kig91dcb0agf0xg4gic8vihrozxjligfyzsbvdghlcib2ywxpzcbhcmd1bwvudcb0exblcybhcyb3zwxsllxuicavl1xuicavlybgb3igysbzaw5nbgugbgv2zwwgb2ygcgfyywxszwxpc20sihdlihbyzwzlcib0agf0ihlvdsb1c2ugdghlxg4gic8vietps0tpu19mqu1creegbwfjcm8uicbjzibdvurbiglzigrpc2fibgvklcb0aglzigp1c3qgdhvybnmgaw50b1xuicavlybbpv0uicbuagf0ignhchr1cmvzihzhcmlhymxlcybmcm9tihrozsbzdxjyb3vuzgluzybzy29wzsbievxuicavlyb2ywx1zs4giervie5pvcbjyxb0dxjlihrozw0gynkgcmvmzxjlbmnlisagswygq1veqsbpcyblbmfibgvklfxuicavlyb0aglzig1hy3jvig1hesboyxzligegc3bly2lhbcbkzwzpbml0aw9uihroyxqgbwfrzxmgdghligxhbwjkyvxuicavlyb3b3jrignvcnjly3rsesb3axroienvreeuicbdb21wyxjlihrvihrozsblt0tlt1nfsu5msu5fx0zvtknusu9oxg4gic8vig1hy3jvlcb3agljacboyxmgysbzcgvjawfsig1lyw5pbmcgawygq1veqsbpcyblbmfibgvkllxuicavl1xuicavlybuagugzm9sbg93aw5nihbhcmfsbgvsx2zvcib3b3vszcbsb29rigxpa2ugdghpcybpzib3zsb3zxjlihvzaw5nxg4gic8vie9wzw5nucbiesbpdhnlbgysigluc3rlywqgb2ygs29ra29zolxuicavl1xuicavlyajchjhz21hig9tccbwyxjhbgxlbcbmb3jcbiagly8gzm9yichpbnqgasa9ida7igkgpcaxntsgkytpksb7xg4gic8vicagchjpbnrmichcikhlbgxvigzyb20gasa9icvpxfxuxcisigkpo1xuicavlyb9xg4gic8vxg4gic8viflvdsbtyxkgbm90awnlihroyxqgdghlihbyaw50zwqgbnvtymvycybkbybub3qgchjpbnqgb3v0igluxg4gic8vig9yzgvyliagugfyywxszwwgzm9yigxvb3bzig1hesblegvjdxrligluigfuesbvcmrlci5cbiagly8gv2ugywxzbybuzwvkihrvihbyb3rly3qgdghlihvzywdlig9migegbgftymrhigfnywluc3qgy29tcglsaw5nxg4gic8vihdpdgggysbiywnrzw5kihdoawnoigrvzxnuj3qgc3vwcg9ydcbpdcaoas5llibddwrhidyuns83ljapllxui2lmigrlzmluzwqos09ls09tx0voqujmrv9dwfgxmv9esvnqqvrdsf9mqu1creepxg4gietva2tvczo6cgfyywxszwxfzm9ykfxuicagicagmtusietps0tpu19mqu1creeoy29uc3qgaw50igkpihtcbiagly8grklytuvfu1ldtcbuzwvkcyb3b3jryxjvdw5kigzvcibwcmludgzcbinpzm5kzwygx19twunmx0rfvkldrv9ptkxzx19cbiagicagicagly8gchjpbnrmihdvcmtzigluigegq1veqsbwyxjhbgxlbcbrzxjuzww7ihn0zdo6b3n0cmvhbsbkb2vzig5vdc5cbiagicagicagchjpbnrmkfwisgvsbg8gznjvbsbpid0gjwlcxg5ciiwgask7xg4jzwxzzvxuxhqodm9pzclpo1xui2vuzglmxg4gicagicb9kttcbinlbmrpzlxuicavlybzb3ugbxvzdcbjywxsigzpbmfsaxplkckgywz0zxigew91igfyzsbkb25lihvzaw5nietva2tvcy5cbiags29ra29zojpmaw5hbgl6zsgpo1xufvxuiiwgimnvbxbpbgvycyi6ift7imlkijogimcxmziilcaib3b0aw9ucyi6icittzmilcaibglicyi6ift7im5hbwuioiaia29ra29ziiwginzlcii6ici0mtawin1dfv19xx0": 144, "typeid": 144, "mangl": 144, "figur": [144, 199], "hello": 144, "world": 144, "As": [144, 187, 188, 192, 195, 197, 198, 200, 203, 221, 226, 232], "turn": [144, 198, 200, 202], "surround": [144, 198], "pragma": [144, 192, 194, 198], "omp": [144, 198, 221], "notic": [144, 186, 210, 226, 227, 232], "protect": [144, 187, 192, 194, 195, 197, 200, 233], "against": [144, 186, 187, 192, 203, 205, 219, 220, 233], "kokkos_enable_cxx11_dispatch_lambda": 144, "fixme_sycl": 144, "workaround": [144, 186, 219], "ifndef": 144, "__sycl_device_only__": 144, "endif": [144, 187, 194], "taga": 144, "implicit": [144, 149, 154, 156, 158, 178, 192, 198, 224, 228], "tagb": 144, "thread_rank": 144, "loop2": [144, 145], "deduc": [145, 169, 201, 232], "reducerargu": 145, "reducerargumentnonconst": 145, "fulfil": [145, 190, 191], "handletyp": [145, 146], "reducervaluetyp": 145, "value_count": [145, 198], "length": [145, 148, 149, 152, 153, 154, 155, 156, 157, 158, 175, 176, 178, 189, 194, 202, 229], "overwritten": [145, 146, 151, 202], "neutral": [145, 146], "lsum": [145, 149, 154, 156, 158, 192], "lf": [145, 189], "lmin": [145, 189], "tagmax": 145, "tagmin": 145, "lmax": 145, "team_rank": [145, 151, 192, 194], "post": [146, 217, 230], "returntyp": 146, "return_valu": 146, "postfix_sum": 146, "prefix_sum": 146, "partial_sum": 146, "li": 146, "domin": [147, 195], "elsewher": 147, "parallel_pattern": 147, "hand": [147, 185, 192, 200, 208, 232], "wavi": 147, "beginn": 147, "tile": [148, 202, 225], "interv": [148, 150, 152], "outer": [148, 192, 202, 225], "inner": [148, 192, 202], "ot": 148, "IT": 148, "tt": 148, "policy_1": [148, 150, 152, 192], "policy_2": [148, 150, 152, 192], "t0": 148, "t1": [148, 160, 163], "t2": [148, 160, 163], "teammembertyp": [149, 154, 156, 158], "threadvectorrangeboundariesstruct": 149, "threadsinglestruct": 149, "vectorsinglestruct": 149, "team_barri": [149, 151, 153, 154, 155, 156, 157, 158, 192], "encount": [149, 174, 209, 231], "thread_sum": 149, "team_sum": [149, 154, 156, 158, 192], "a_rowsum": [149, 153, 154, 155, 156, 158], "inherit": [150, 171, 221], "policytrait": 150, "schedule_typ": [150, 152], "iteration_pattern": [150, 152], "launch_bound": [150, 152], "work_spac": 150, "work_begin": 150, "work_end": 150, "discret": [150, 159, 189, 225], "chunk_size_": 150, "init_arg": 150, "chunksiz": 150, "workgroup": 150, "policy_3": [150, 152, 192], "policy_4": [150, 152], "policy_6": 150, "policy_7": 150, "teamtask": 151, "subject": [151, 165, 186, 202], "leagu": [151, 152, 192, 199, 231], "league_s": [151, 152, 192], "workitem": 151, "team_shmem": [151, 192], "team_scratch": [151, 192], "thread_scratch": 151, "lexic": [151, 186], "arriv": [151, 192], "team_broadcast": 151, "source_team_rank": 151, "var": 151, "broadcast": [151, 192], "reducertyp": 151, "team_reduc": 151, "accross": [151, 200], "team_scan": 151, "teampolcii": 151, "policy_typ": 151, "set_scratch_s": [151, 152, 192], "4096": 151, "tid": 151, "lid": 151, "scratch_memory_typ": 151, "vector_length": [152, 206, 229], "auto_t": 152, "lazili": 152, "perteamvalu": 152, "per_team": 152, "perthreadvalu": 152, "per_thread": 152, "closest": 152, "bandwidth": [152, 192, 199, 200, 202], "twice": [152, 202], "overwrit": [152, 187, 198], "scratch_size_max": 152, "maxim": [152, 194], "scratch_siz": 152, "team_size_": 152, "team_scratch_s": 152, "thread_scratch_s": 152, "policy_5": 152, "extent_1": [153, 155, 157], "extent_2": [153, 155, 157, 202], "extent_i": [153, 155, 157], "violat": [153, 155, 157, 192, 198, 202, 232], "num": [153, 155, 157, 193, 221], "leaguerank": [153, 155, 157], "teamsum": [153, 155, 157], "threadsum": [153, 157, 158], "leaguesum": [153, 155], "itype1": [154, 156, 158], "itype2": [154, 156, 158], "teamtyp": 155, "vectorsum": [155, 157], "tsum": 158, "weigth": 159, "weight": 159, "fraction": 159, "is_arithmetic_v": 159, "n_partit": 159, "3rd": 159, "stream": [159, 171, 199, 202, 234], "otherparam": 159, "param": [159, 214], "f1": [159, 231], "f2": [159, 231], "functor1": 159, "functor2": 159, "f3": 159, "functor3": 159, "kokkos_pair": [160, 206], "fulli": [160, 226, 232], "std_pair": 160, "int_float": 160, "converted_std_pair": 160, "converted_kokkos_pair": 160, "to_std_pair": 160, "first_typ": 160, "second_typ": 160, "kokkos_defaulted_funct": [160, 232], "kokkos_forceinline_funct": [160, 190], "wise": [160, 172, 173, 174], "whose": [160, 186, 198, 201, 202, 225, 229], "msg": 161, "imag": 163, "real": [163, 224], "imaginari": 163, "im": 163, "convers": [163, 178, 194, 200, 217, 224, 230], "realtyp": 163, "nodiscard": [164, 166], "anounc": 165, "format": [167, 194, 202, 220], "stdout": 167, "across": [167, 195, 197, 199, 200, 207], "measur": [168, 197], "time1": 168, "time2": 168, "impl_detail": [169, 177], "view_arg": 169, "subviewhold": 169, "deal": [170, 196, 201, 232, 233, 234], "host_mirror": 170, "a_view": 170, "host_mirror_view": 170, "host_mirror_view_spac": 170, "withoutiniti": [170, 175, 176, 179, 202, 206], "implmirrortyp": 170, "viewctorarg": [170, 175, 176], "conduct": [170, 217, 220], "circumst": [171, 217], "viewdest": 171, "viewsrc": [171, 178, 214], "copy_spac": 171, "submit": [171, 192, 221], "cudamemcpyasync": 171, "d_a": [171, 194], "d_a_2": 171, "d_a_5": 171, "h_a": [171, 194, 228], "h_a_2": 171, "d_a_2_5": 171, "deviceview": 171, "temporari": [171, 189, 199, 202, 209], "h_view_tmp": 171, "kokkos_layout": [172, 173, 174], "lai": [172, 173, 174], "convent": [172, 173, 199, 202], "signifi": [172, 173, 174], "is_extent_construct": [172, 173, 174], "full_mesh": 174, "mesh": [174, 223], "mesh_subcompon": 174, "z": [174, 182, 200], "frequent": 174, "noncontigu": [174, 202], "array_layout_max_rank": 174, "s0": 174, "s4": 174, "s5": 174, "s6": 174, "s7": 174, "order_dimens": 174, "itypeord": 174, "itypedimen": 174, "dimen": 174, "3d": [174, 194, 224], "grow": [175, 176, 195], "subext": 176, "191": 177, "subset": [177, 184, 185, 187, 201, 221], "arg_r": 177, "remove_const_t": [177, 201], "assert": [177, 200], "s3415": 177, "star": 178, "bracket": 178, "2d": [178, 189, 194, 224], "5d": 178, "Their": [178, 229], "integral_const": [178, 182, 183], "nullari": 178, "encourag": [178, 187, 192, 203, 205, 220], "akin": [178, 225], "_dynam": 178, "yield": [178, 233], "sign": [178, 193, 202], "msvc": [178, 187, 213], "i7": 178, "is_assign": 178, "assign_data": 178, "arg_data": 178, "anywai": [178, 194], "viewdst": [178, 214], "dynamic_rank": 178, "a1": [178, 202, 231], "a2": [178, 231], "a3": [178, 231], "a4": 178, "a5": 178, "a6": 178, "a7": 178, "a8": 178, "a9": 178, "a10": 178, "a11": 178, "a12": 178, "a13": 178, "kokkos_view": 179, "viewstr": 179, "view_wrap": 179, "pointer_to_wrapping_memori": 179, "bypass": 179, "allowpad": 179, "impl_defin": 179, "notabl": 180, "simd_mask": [181, 182, 184, 200], "where_express": 181, "kokkos_simd": [182, 183, 184, 200], "abi": [182, 183, 184, 200], "simd_abi": [182, 183], "fallback": [182, 183], "nativ": [182, 183, 202], "extract": [182, 183, 194, 225], "mask_typ": [182, 183, 200], "abi_typ": [182, 183], "element_aligned_tag": [182, 184, 200], "copy_from": [182, 184, 200], "copy_to": [182, 184, 200], "lh": [182, 183], "mag": 182, "sgn": 182, "native_simd": [182, 184, 200], "simd_typ": [182, 183, 184, 200], "zu": [182, 232], "simd": [183, 184, 207, 212, 234], "iff": 183, "native_simd_mask": [183, 200], "regist": [184, 185, 192, 200], "basi": [184, 187, 225], "const_where_express": 184, "scatter_to": 184, "gather_from": 184, "safer": 184, "domain": [184, 204], "chapter": [185, 187, 192, 194, 197, 198, 199, 201, 202, 221], "understand": [185, 187, 194, 196, 197, 201, 202, 232], "resolv": [185, 217], "histogram": 185, "create_histogram": 185, "try": [185, 193, 197, 202, 203, 205, 217], "lost": 185, "race": [185, 194, 197, 223], "situat": [185, 188, 197, 200, 217, 230], "particl": [185, 229, 230], "neighbour": 185, "forc": [185, 187, 192, 197, 199, 200, 230], "compute_forc": 185, "forceloop": 185, "neighbor": [185, 230], "particle_id": 185, "neighbour_id": 185, "some_contribut": 185, "colour": 185, "ii": [185, 194, 224], "iii": 185, "disadvantag": 185, "transfer": [185, 202], "fall": [185, 192, 195, 202, 220, 231], "uninterrupt": 185, "cycl": [185, 187, 217, 218, 221], "hinder": 185, "throughput": [185, 195], "createhistogram": 185, "scheme": 185, "find_indici": 185, "findindici": 185, "div": 185, "lshift": 185, "mod": 185, "mul": 185, "rshift": 185, "sub": [185, 201], "xor": 185, "histogram_atom": 185, "transpar": 185, "clever": 186, "constitut": [186, 192, 221], "tension": 186, "freedom": 186, "frustrat": [186, 200], "pain": 186, "deliber": 186, "accident": [186, 217], "breakag": [186, 217], "unless": [186, 187, 198, 200, 202, 233], "kokkos_": [186, 208], "chanc": 186, "inadvert": 186, "broken": 186, "kokkos_impl_": 186, "period": [186, 217], "hous": 186, "prime": 186, "incomplet": 186, "newer": [186, 187, 213], "particularli": [186, 225], "problemat": [186, 233], "obei": 186, "interfer": [186, 197], "collison": 186, "prefac": 186, "myproject_": 186, "disambigu": 186, "cap": 186, "usual": [186, 187, 194, 197, 198, 202, 219], "syntact": 186, "revis": [186, 217], "behind": [186, 200, 224, 228], "publish": 186, "drive": [186, 193, 200], "advantag": [186, 200, 228, 230], "older": [186, 217], "recompil": 186, "occasion": [186, 213], "overal": [186, 202, 221, 228], "migratori": 186, "evolutionari": 186, "ideal": [186, 217], "wrong": [186, 201, 202], "wast": [186, 202], "continu": [186, 187, 194, 195, 203, 217, 221, 226], "subdirectori": [186, 187], "union": 186, "fashion": [186, 201], "sole": [186, 195], "invok": [186, 197, 202, 208], "explain": [187, 192, 197, 202], "embed": [187, 195], "mix": [187, 194, 197, 202, 203, 213], "advic": 187, "mainli": [187, 202], "directori": [187, 217, 219, 221], "prevent": [187, 192, 194, 202, 223], "kokkoscore_config": 187, "h": [187, 204, 222, 228], "mention": [187, 221], "compliant": [187, 232], "date": [187, 217, 219], "nightli": [187, 221], "readm": [187, 205, 219, 221], "repositori": [187, 217, 219, 220], "At": [187, 193, 196, 198, 200, 202, 217, 221, 232], "88": [187, 213], "nvc": [187, 213, 220], "rocm": [187, 213, 232], "xl": [187, 213, 219], "fujitsu": [187, 213], "arm": [187, 213], "linkag": [187, 213], "affect": [187, 202, 213], "fopenmp": 187, "hwloc": [187, 193, 208, 221], "robust": [187, 203, 217], "strongli": [187, 202, 203], "cmakelist": [187, 203], "txt": [187, 203], "find_packag": [187, 203, 208], "target_link_librari": [187, 203], "mytarget": [187, 203], "processor": [187, 192, 195, 197, 199, 221], "dkokkos_root": [187, 203], "lib64": 187, "especi": [187, 197, 198, 200, 218, 221, 227], "nvcc_wrapper": 187, "dcmake_cxx_compil": [187, 203], "bin": 187, "cmake_cxx_flag": 187, "propag": [187, 203], "illustr": [187, 192, 202, 203, 224], "add_subdirectori": [187, 203], "dir": [187, 208], "include_directori": 187, "kokkos_include_dirs_ret": 187, "arch": [187, 208], "mkdir": [187, 219], "cd": [187, 219], "srcdir": [187, 203], "dcmake_install_prefix": [187, 203], "my_install_fold": 187, "dkokkos_enable_openmp": [187, 203], "parti": [187, 194, 197, 203], "tpl": [187, 203], "altern": [187, 194, 200, 203, 208, 221], "download": [187, 203, 221], "env": [187, 203], "folder": [187, 203], "setup": [187, 203, 221, 228], "sh": [187, 203, 221], "variant": [187, 198, 202, 203, 217], "deactiv": [187, 203], "chosen": [187, 203], "exact": [187, 203], "info": [187, 203, 207, 208], "hash": [187, 202, 203], "human": [187, 203], "readabl": [187, 200, 203], "spec": [187, 203], "dii": 187, "wish": [187, 193], "downstream": [187, 203], "almost": [187, 195, 200, 223], "myproject": 187, "myvers": 187, "idiosyncrasi": 187, "annoi": 187, "dspack_workaround": 187, "spack_workaround": 187, "spack_cxx": 187, "cmake_cxx_compil": 187, "cxx": [187, 224], "technolog": [187, 195, 210], "orient": [187, 230], "softwar": [187, 195, 200, 210, 217, 220], "framework": [187, 197, 204], "solut": [187, 195, 196, 200, 210, 217, 221, 225, 232], "larg": [187, 200, 202, 203, 208, 225, 231], "multiphys": 187, "scientif": [187, 195, 202], "problem": [187, 194, 195, 218, 221, 227], "organ": [187, 208, 217, 218, 230], "stand": 187, "trilinos_enable_kokko": 187, "tpetra": 187, "infer": [187, 201], "trilinos_enable_openmp": 187, "ON": [187, 203, 208, 210], "autogener": 187, "cmake_c_compil": 187, "cmake_fortran_compil": 187, "kokkos_arch_": 187, "archcod": 187, "kokkos_arch_hsw": [187, 208], "haswel": [187, 221], "uvm": [187, 194, 196, 199, 202, 226, 232], "export": 187, "cuda_launch_block": [187, 203], "cuda_managed_force_device_alloc": [187, 203], "aris": [187, 210], "stabil": 187, "symbol": 187, "ln": 187, "kokkos_source_dir_overrid": 187, "kokkoskernel": 187, "kokkoskernels_source_dir_overrid": 187, "script": [187, 203, 219, 220], "ompi_cxx": 187, "openmpi": 187, "digest": 187, "matter": [187, 197], "kokkos_link_depend": 187, "kokkos_cpp_depend": 187, "kokkos_cppflag": 187, "kokkos_cxxflag": 187, "kokkos_ldflag": 187, "kokkos_lib": 187, "tutori": [187, 195, 207], "absolut": 187, "shell": [187, 203, 221], "kokkos_path": [187, 219], "IN": [187, 210], "root": [187, 200, 208], "cuda_path": 187, "toolkit": [187, 219], "kokkos_devic": 187, "kokkos_arch": [187, 200], "knl": [187, 208, 219], "knc": [187, 208], "snb": [187, 208], "hsw": [187, 208], "bdw": [187, 208], "kepler30": [187, 208], "kepler35": [187, 208], "kepler37": [187, 208], "maxwell50": [187, 208], "pascal60": [187, 208], "pascal61": [187, 208], "armv81": [187, 208], "bgq": [187, 208], "kokkos_use_tpl": 187, "experimental_memkind": 187, "kokkos_opt": 187, "aggressive_vector": 187, "kokkos_cuda_opt": [187, 198], "force_uvm": 187, "use_ldg": 187, "rdc": [187, 208], "enable_lambda": [187, 198], "hwloc_path": 187, "ye": 187, "kokkos_cxx_standard": 187, "lib": 187, "cxxflag": [187, 221], "emb": 187, "metaprogram": [187, 202], "shortcom": 187, "prepend": 187, "xcompil": 187, "analyz": [187, 221], "ccbin": 187, "nvcc_wrapper_default_compil": 187, "peopl": [187, 196, 232], "modul": [187, 199, 219, 221, 224, 234], "icpc": 187, "pgc": 187, "attach": [187, 193, 216, 221, 231], "degrad": 187, "accommod": 188, "click": [188, 215], "head": [188, 231], "summat": 189, "parabl": 189, "minreduc": 189, "min_reduc": 189, "minloc_typ": 189, "minlocreduc": 189, "lminloc": 189, "minloc_reduc": 189, "reducer_typ": 189, "team_typ": 189, "team_minmaxloc": 189, "row_minmaxloc": 189, "thread_minmaxloc": 189, "gui": [189, 198, 234], "hurt": 189, "team_minmax": 189, "resolut": [190, 217, 218, 230], "the_arrai": 190, "tr": [190, 191], "upd": [190, 191], "ndx": [190, 191], "myarrai": 191, "summyarrai": 191, "references_scalar": 191, "arraysumresult": 191, "exploit": [192, 225], "syntax": [192, 198, 201, 202, 208], "parallel_": [192, 199, 202, 206], "node": [192, 193, 195, 199, 207, 221, 222, 231], "modern": [192, 203], "character": [192, 199], "higher": [192, 195], "orthogon": [192, 197], "heterogen": [192, 193, 199, 221, 229], "cluster": [192, 226], "multicor": [192, 195, 197, 199], "hyper": 192, "instruct": [192, 200, 205], "socket": [192, 203], "network": [192, 221], "llc": [192, 210], "l1": 192, "l2": 192, "sm": 192, "warp": [192, 194, 202], "wave": 192, "collabor": [192, 195], "predefin": 192, "adapt": [192, 196, 199, 232], "suggest": [192, 221], "tightli": [192, 225, 234], "gather": 192, "choic": [192, 194, 197, 202, 203], "sometim": [192, 202, 203, 218, 219], "flat": [192, 231], "grid": [192, 194, 201], "inter": [192, 197], "guess": 192, "n_workset": 192, "choos": [192, 193, 198, 199, 202], "sometag": 192, "action": [192, 217, 218, 220, 221], "team_memb": [192, 231], "coordin": 192, "everyon": 192, "consum": 192, "indirect": [192, 210], "workset": 192, "lifetim": 192, "recycl": 192, "cell": [192, 225], "team_shmem_s": 192, "double_s": 192, "team_shared_a": 192, "get_shmem": 192, "team_shared_b": 192, "160": 192, "kilobyt": 192, "gigabyt": 192, "mostli": [192, 194], "adjust": 192, "raw": [192, 198, 206], "shared_int_2d": 192, "shared_s": 192, "shmem_siz": 192, "layer": [192, 194, 195, 200, 224], "teamthreadloop": 192, "threadvectorloop": 192, "consciou": 192, "difficult": [192, 200, 225], "claus": [192, 198, 205, 210, 230], "catch": [192, 202, 217, 220], "loop_count": 192, "emploi": [192, 195, 197], "prepar": [192, 219], "stage": 192, "innermost": 192, "compris": [192, 197], "workset_s": 192, "vectoriz": 192, "decor": 192, "ivdep": 192, "repetit": [192, 200], "bodi": [192, 202, 213, 231], "shared_arrai": 192, "somefunct": [192, 194], "global_arrai": 192, "my_offset": 192, "inner_lsum": 192, "inner_": 192, "subpackag": [193, 202], "alphabet": [193, 207], "interpret": 193, "primarili": [193, 217, 218], "job": [193, 221], "workstat": 193, "screen": 193, "promis": [193, 197, 198, 199], "conflict": [193, 202], "field": [193, 195, 196, 217, 219, 225, 229, 232], "shut": 193, "down": [193, 196, 227, 232], "exit": 193, "atexit": 193, "mpi_comm_self": 193, "adopt": [194, 199], "facilit": 194, "lift": 194, "inde": [194, 202, 230], "cumbersom": 194, "enter": [194, 195, 202, 231], "__host__": [194, 209], "__cuda_arch__": 194, "blockidx": 194, "threadidx": 194, "blockdim": 194, "omp_set_num_thread": 194, "bookkeep": 194, "ask": [194, 197, 199, 202, 217, 220], "princip": 194, "insur": 194, "app": 194, "placement": [194, 196, 232], "150": 194, "2d_arrai": 194, "200": [194, 202], "scenario": [194, 199, 200], "receiv": [194, 221], "straight": 194, "mykokkosfunct": 194, "host_spac": 194, "t_1d_device_view": 194, "t_2d_device_view": 194, "d_b": 194, "h_b": 194, "t_team": 194, "t_1d_view": 194, "t_3d_view": 194, "had": [194, 230], "whatev": 194, "a_old": 194, "unfortun": [194, 230, 232], "leav": [194, 202, 228], "unrestrict": 194, "push": [194, 213, 219], "bring": [194, 198, 224], "massiv": 194, "penalti": [194, 202], "1000": [194, 198, 202], "uneven": 194, "polymorph": [194, 199, 204], "bla": [194, 202, 234], "matric": [194, 202], "dot": 194, "cubla": 194, "kokkos_have_cuda": 194, "call_cublas_dot": 194, "ptr_on_devic": 194, "extent_0": [194, 202], "cbla": 194, "call_cblas_dot": 194, "hpc": [195, 207, 217, 230], "verg": 195, "era": [195, 204], "angl": 195, "rate": 195, "flop": 195, "poor": 195, "workload": 195, "challeng": 195, "energi": 195, "mid": 195, "1990": [195, 198], "enjoi": 195, "seemingli": 195, "homogen": [195, 197, 221, 229], "decad": 195, "deriv": [195, 196, 210, 232], "commun": [195, 201, 217, 218, 226, 228], "realiz": 195, "review": [195, 217, 220, 221], "broad": 195, "latenc": [195, 197, 202], "medium": 195, "graphic": [195, 197], "gp": 195, "toler": 195, "degre": [195, 199], "divers": 195, "interest": [195, 200, 214, 217], "heritag": 195, "offer": 195, "guidelin": [195, 209], "todai": [195, 197], "cilk": 195, "tbb": 195, "linux": 195, "contemporari": [195, 197], "openacc": 195, "opencl": 195, "Such": [195, 224, 225], "varieti": [195, 221, 229], "pose": 195, "reminisc": 195, "becam": 195, "invest": [195, 202], "seek": 195, "isol": 195, "fluctuat": 195, "coverag": 195, "supplementari": 195, "gradual": 195, "odditi": [196, 232], "face": [196, 201, 232], "subtl": [196, 232], "classwithvirtualfunct": [196, 232], "somebas": [196, 232], "virtualfunct": [196, 232], "hostclassinst": [196, 232], "deviceclassinst": [196, 232], "cudamalloc": [196, 232], "cudamemcpi": [196, 232], "cudamemcpyhosttodevic": [196, 232], "devicekernel": [196, 232], "somecudapolici": [196, 232], "glanc": [196, 232], "fine": [196, 202, 232], "crash": [196, 232], "nomin": [196, 232], "vpointer": [196, 232], "vtabl": [196, 232], "among": [196, 221, 232], "okai": [196, 232], "rememb": [196, 198, 202, 221, 232], "amongst": [196, 232], "hidden": [196, 202, 232], "derefer": [196, 232], "credit": [196, 232], "pablo": [196, 232], "aria": [196, 220, 232], "intro": [196, 232, 234], "faithfulli": [196, 232], "merrili": [196, 232], "pseudocod": [196, 232], "hostinst": [196, 232], "deviceinst": [196, 232], "deivc": [196, 232], "techniqu": [196, 232], "ugli": [196, 232], "repo": [196, 207, 232], "setafield": [196, 232], "somehostvalu": [196, 232], "naiv": [196, 200, 232], "wit": [196, 232], "said": [196, 201, 232], "solv": 196, "educ": [196, 232], "slack": [196, 207, 217, 218, 220, 232], "aspect": [197, 199, 200, 221], "programm": [197, 198, 200, 202, 226], "distinct": 197, "exascal": [197, 204], "consult": [197, 202], "ang": 197, "elect": 197, "show": [197, 198, 199, 202, 219], "die": [197, 199], "acceler": [197, 221, 228, 230], "reachabl": 197, "et": [197, 217], "al": [197, 204], "proxi": 197, "sandia": [197, 210, 221], "nation": [197, 210], "laboratori": 197, "lawrenc": 197, "berkelei": 197, "consider": 197, "finit": [197, 223, 225], "packag": [197, 204, 217, 219, 220, 225], "slower": [197, 202], "dram": 197, "volatil": [197, 199, 202, 206], "routin": [197, 224, 225], "collis": 197, "gain": 197, "topic": [197, 198, 217], "coher": [197, 202], "hennessi": 197, "paterson": 197, "weak": 197, "therebi": 197, "fifth": [197, 201], "quantit": 197, "morgan": 197, "kaufmann": 197, "tempt": 197, "author": [197, 204], "background": 197, "scientist": 197, "stick": 197, "proof": 197, "forbid": [197, 202], "implic": 197, "filesystem": 197, "overlap": [197, 222], "reproduc": [197, 210, 218], "earli": [197, 220], "awai": [197, 200, 201], "wonder": 197, "great": 197, "unnecessari": [198, 202], "harmless": 198, "anonym": 198, "suppli": 198, "outermost": 198, "stack": [198, 202, 217, 220], "secondli": 198, "circumvent": 198, "harder": 198, "interoper": [198, 200, 212, 224, 234], "prior": [198, 202, 203, 210, 217, 218, 224, 228], "faster": 198, "trip": 198, "fewer": 198, "encapsul": [198, 199, 201], "semir": 198, "maxplu": 198, "x_": 198, "inf": 198, "columnsum": 198, "Be": 198, "convinc": 198, "numrow": 198, "numcol": 198, "cs": 198, "sequenti": [198, 202, 225], "blelloch": 198, "book": 198, "hi": [198, 218], "phd": 198, "dissert": [198, 200], "val_i": 198, "mit": 198, "press": 198, "necess": 198, "unus": [198, 230], "differenti": 198, "bartag": 198, "rabtag": 198, "foobar": [198, 214], "formul": 199, "vari": [199, 202], "hybrid": 199, "pim": 199, "principl": [199, 202], "remot": [199, 207, 221, 234], "send": 199, "undetermin": 199, "prescript": 199, "primit": 199, "spin": 199, "dead": 199, "persist": 199, "diverg": 199, "inspir": 199, "vocabulari": [199, 221], "comfort": 199, "reflect": [199, 202], "rewrit": 199, "unoptim": 199, "optimis": 199, "histori": [200, 221], "struggl": 200, "blog": 200, "insight": 200, "drawback": [200, 230], "quot": 200, "stanford": 200, "tim": 200, "folei": 200, "heart": 200, "black": 200, "box": 200, "matthia": 200, "kretz": 200, "deliv": 200, "vendor": [200, 217, 234], "fairli": 200, "pictur": 200, "clearli": 200, "odd": 200, "quirk": 200, "tag_typ": 200, "sx": 200, "sy": 200, "sz": 200, "sr": 200, "squar": 200, "emit": [200, 201], "4x": 200, "speedup": [200, 228], "skip": [200, 202], "troublesom": 200, "pitfal": [200, 202], "evenli": 200, "divis": 200, "cleaner": 200, "wide": [200, 202, 217, 221], "reach": [200, 202], "throughout": 200, "slight": 200, "quadratic_formula": 200, "x1": 200, "x2": 200, "discrimin": 200, "sqrt_discrimin": 200, "classic": [200, 213], "familiar": [200, 202, 217], "quadrat": 200, "formula": 200, "liter": 200, "mimic": 200, "roadmap": [200, 217], "regard": 200, "very_expensive_funct": 200, "statement": 200, "spend": [200, 202], "lot": [200, 202, 219], "pick": [201, 202, 217], "notat": 201, "vice": 201, "versa": 201, "cross": [201, 220], "plane": 201, "cube": 201, "n_0": 201, "n_1": 201, "n_": 201, "a_0": 201, "a_1": 201, "a_": 201, "a_j": 201, "n_j": 201, "handi": 201, "boundari": 201, "matlab": 201, "python": [201, 207, 219, 221, 234], "colon": 201, "fourth": 201, "elabor": 201, "a_sub": 201, "won": [201, 202], "cheaper": 201, "keyword": [201, 203, 206, 207], "easiest": [201, 203], "dens": [201, 207, 234], "inconveni": 201, "my_view_typ": 201, "my_subview_typ": 201, "my_subview_type_deduc": 201, "fast": [202, 219], "intim": 202, "factor": 202, "coder": 202, "tie": 202, "hard": 202, "evolv": 202, "reliev": 202, "burden": [202, 217], "ty": 202, "expert": 202, "easi": [202, 203], "ellips": 202, "asterisk": 202, "typecast": 202, "a_ptr": 202, "malloc": 202, "a0": 202, "arbitrarili": 202, "unprotect": 202, "badli": 202, "therefor": [202, 233], "advis": [202, 210], "deconstructor": 202, "disallow": 202, "indirectli": 202, "novic": 202, "THE": [202, 210, 219], "FOR": [202, 210], "IS": [202, 210], "NO": [202, 210], "rag": 202, "reorgan": 202, "v_outer": 202, "assigne": 202, "wors": 202, "yourself": [202, 219], "destroi": [202, 214], "rid": 202, "inner_view_typ": 202, "outer_view_typ": 202, "numout": 202, "numinn": 202, "to_str": 202, "device_out": 202, "dispos": 202, "nonown": 202, "a_nonconst": 202, "nonconst": 202, "a_const": 202, "readonlyfunct": 202, "skew": 202, "parenthes": 202, "enclos": 202, "comma": 202, "delimit": 202, "a_ijk": 202, "rest": 202, "slow": 202, "leftmost": 202, "exempt": 202, "unwind": 202, "incorrect": 202, "100x50x4": 202, "50": 202, "200x50x4": 202, "300x60x4": 202, "300": 202, "java": 202, "s_1": 202, "s_2": 202, "s_3": 202, "dim1": 202, "extent_n": 202, "conserv": 202, "benefici": 202, "heavi": 202, "stringent": 202, "overflow": 202, "lapack": [202, 234], "idea": 202, "lda": 202, "morton": 202, "thereof": 202, "viewmap": 202, "renam": 202, "coalesc": 202, "callbla": 202, "callsomeblasfunct": 202, "invalid_argu": 202, "100000": 202, "biject": 202, "accessspac": 202, "viewallocatewithoutiniti": 202, "affin": 202, "memcopi": 202, "discourag": [202, 209], "circumv": 202, "defeat": 202, "polymorp": 202, "legaci": [202, 212], "legacyfunct": 202, "x_raw": 202, "len": 202, "myfunct": 202, "somelibraryfunct": 202, "reference_is_lvalu": 202, "sometrait": 202, "someothertrait": 202, "ca": 202, "a_atom": 202, "irregularli": 202, "a_ra": 202, "shorter": 202, "fault": 202, "prolifer": 202, "csr": 202, "spmatvec": 202, "ind": 202, "x_ra": 202, "y_i": 202, "accordingli": 202, "x_view": 202, "functionthattakeskokkosview": 202, "safest": 202, "tree": [203, 219, 231], "exceedingli": 203, "devil": 203, "kokkos_install_prefix": 203, "compiler_used_to_build_kokko": 203, "cmake_polici": 203, "cmp0074": 203, "cmake_build_instal": 203, "cmake_build_in_tre": 203, "kokkos_install_fold": 203, "craype_link_typ": 203, "miss": 203, "benchmark": [203, 221], "bytes_and_flop": 203, "nvlink": [203, 226], "displai": 203, "dev": [203, 219, 221], "articl": 204, "9485033": 204, "trott": [204, 210], "christian": [204, 210, 217], "lebrun": 204, "grandi\u00e9": 204, "damien": [204, 217], "arndt": 204, "daniel": 204, "ciesko": 204, "jan": 204, "dang": 204, "vinh": 204, "ellingwood": 204, "nathan": 204, "gayatri": 204, "rahulkumar": 204, "harvei": 204, "evan": 204, "hollman": 204, "daisi": 204, "ibanez": 204, "dan": 204, "liber": 204, "nevin": 204, "madsen": 204, "jonathan": 204, "mile": 204, "jeff": 204, "poliakoff": 204, "david": 204, "powel": 204, "ami": 204, "rajamanickam": 204, "sivasankaran": 204, "simberg": 204, "mikael": 204, "sunderland": 204, "turcksin": 204, "bruno": 204, "wilk": 204, "jeremiah": 204, "journal": 204, "ieee": 204, "transact": 204, "titl": 204, "2022": [204, 213], "volum": 204, "805": 204, "817": 204, "doi": 204, "1109": 204, "tpd": 204, "2021": [204, 213], "3097283": 204, "ecosystem": [204, 207], "9502936": 204, "berger": 204, "vergiat": 204, "luc": 204, "grandi": 204, "nader": 204, "gligor": 204, "milo": 204, "shipman": 204, "galen": 204, "womeldorff": 204, "geoff": 204, "scienc": [204, 220], "comprehens": [204, 213, 219], "mcse": 204, "3098509": 204, "carteredwards20143202": 204, "manycor": 204, "3202": 204, "3216": 204, "issn": 204, "0743": 204, "7315": 204, "1016": 204, "jpdc": 204, "07": [204, 219], "003": 204, "url": 204, "sciencedirect": 204, "pii": 204, "s0743731514001257": 204, "carter": 204, "edward": 204, "pull": [205, 217, 219, 221, 231], "licens": [205, 207], "bsd": [205, 210], "commerci": 205, "req": 205, "activeexecutionmemoryspac": 206, "host_execution_spac": 206, "host_memory_spac": 206, "kokkos_restrict_execution_to_": 206, "data_spac": 206, "hip_safe_cal": 206, "create_inst": 206, "partition_mast": 206, "num_partit": 206, "partition_s": 206, "kokkos_openmp_inst": 206, "access_error": 206, "kokkos_hip_spac": 206, "hip_internal_safe_call_deprec": 206, "kokkos_hip_error": 206, "kokkos_openmp": 206, "openmpintern": 206, "validate_partit": 206, "profilingsect": 206, "getnam": 206, "kokkos_profiling_profilesect": 206, "getsectionid": 206, "kokkos_hip_parallel_team": 206, "kokkos_sycl_parallel_team": 206, "kokkos_openmptarget_exec": 206, "kokkos_cuda_parallel_team": 206, "kokkos_cudaspac": 206, "number_of_alloc": 206, "kokkos_hpx": 206, "masterlock": 206, "kokkos_attribute_nodiscard": 206, "amathfunct": 206, "clamp": 206, "is_reducer_typ": 206, "index_list_typ": 206, "always_use_kokkos_sort": 206, "finalize_al": 206, "withoutinitializing_t": 206, "wi": 206, "kokkos_thread_loc": 206, "thread_loc": 206, "is_view": 206, "cuda_internal_safe_call_deprec": 206, "cuda_safe_cal": 206, "trail": 206, "kokkosviewlabel": 206, "kokkos_macro": 206, "kokkos_atom": 206, "kokkos_arrai": 206, "kokkos_half": 206, "kokkos_tim": 206, "kokkos_sort": 206, "kokkos_bit": 206, "kokkos_errorreport": 206, "batch": [207, 234], "pykokko": 207, "checkpoint": 207, "mdspan": 207, "p0009": 207, "stdbla": 207, "p1673": 207, "kokkosteam": [207, 218], "instal": [207, 208, 221, 226], "cmake": [207, 213, 227], "video": 207, "lectur": 207, "slide": 207, "cite": 207, "sensit": 208, "recal": 208, "dkeyword_nam": 208, "kokkos_enable_compiler_warn": 208, "relax": 208, "kokkos_enable_cuda_ldg_intrins": 208, "um": 208, "kokkos_enable_deprecated_cod": 208, "kokkos_enable_exampl": 208, "kokkos_enable_large_mem_test": 208, "kokkos_enable_test": 208, "kokkos_cuda_dir": 208, "cuda_root": 208, "kokkos_hwloc_dir": 208, "hwloc_root": 208, "kokkos_memkind_dir": 208, "memkind_root": 208, "kokkos_libdl_dir": 208, "libdl_root": 208, "kokkos_librt_dir": 208, "librt_root": 208, "hpx_dir": 208, "hpx_root": 208, "config": [208, 219, 221], "kokkos_arch_n": 208, "kokkos_arch_a64fx": 208, "sve": 208, "kokkos_arch_amd_gfx906": 208, "kokkos_arch_amd_gfx908": 208, "kokkos_arch_amd_gfx90a": 208, "kokkos_arch_amd_gfx1030": 208, "kokkos_arch_amd_gfx1100": 208, "7900xt": 208, "gfx1100": 208, "kokkos_arch_amdavx": 208, "amdavx": 208, "armv80": 208, "armv8_thunderx": 208, "armv8_thunderx2": 208, "kokkos_arch_bdw": 208, "kokkos_arch_bgq": 208, "kepler32": 208, "kokkos_arch_knl": 208, "maxwell52": 208, "maxwell53": 208, "kokkos_arch_skx": 208, "skx": 208, "kokkos_arch_snb": 208, "kokkos_arch_spr": 208, "sapphir": 208, "turing75": 208, "volta70": 208, "volta72": 208, "kokkos_arch_wsm": 208, "wsm": 208, "kokkos_arch_zen": 208, "kokkos_arch_zen2": 208, "kokkos_arch_zen3": 208, "wherea": 208, "ahead": [208, 217], "amd_gfx1100": 208, "amd_gfx906": 208, "amd_gfx908": 208, "mi210": 208, "mi250": 208, "mi250x": 208, "amd_gfx90a": 208, "amd_gfx1030": 208, "compatibilti": 209, "do_math": 209, "sqrt5": 209, "ambigu": 209, "highli": 209, "z1": 209, "z2": 209, "z3": 209, "copyright": 210, "2020": 210, "ntess": 210, "contract": [210, 228], "de": [210, 217], "na0003525": 210, "govern": 210, "retain": 210, "redistribut": 210, "permit": 210, "materi": 210, "corpor": 210, "contributor": 210, "endors": 210, "permiss": [210, 219, 221], "BY": 210, "AS": 210, "warranti": 210, "BUT": 210, "OF": 210, "merchant": 210, "shall": [210, 218], "liabl": 210, "incident": 210, "exemplari": 210, "consequenti": 210, "damag": 210, "procur": [210, 217], "substitut": 210, "servic": 210, "loss": 210, "profit": 210, "busi": 210, "interrupt": 210, "theori": [210, 228], "liabil": 210, "strict": 210, "tort": 210, "neglig": 210, "IF": 210, "SUCH": 210, "contact": 210, "crtrott": 210, "gov": 210, "introduct": [212, 221, 234], "unawar": 213, "appleclang": 213, "intelllvm": 213, "2023": 213, "pthread": [213, 219, 221], "wall": [213, 219], "wunus": 213, "wshadow": [213, 219], "pedant": [213, 219], "werror": [213, 219], "wsign": [213, 219], "wtype": [213, 219], "wignor": 213, "wempti": 213, "wclobber": 213, "wuniniti": 213, "master": [213, 219, 221], "rigor": 213, "some_var": 214, "frobrnic": 214, "foobat": 214, "frobnic": 214, "pencil": 215, "button": 215, "feedback": [216, 217, 220], "workflow": [216, 220, 223], "ramp": 217, "overarch": 217, "outdat": 217, "anymor": 217, "facto": 217, "month": [217, 219], "phase": [217, 220], "defect": 217, "upcom": 217, "seamless": 217, "anticip": 217, "soon": 217, "deploy": [217, 220], "engag": 217, "fund": [217, 220], "agenc": [217, 220], "monitor": 217, "hpe": 217, "kit": 217, "research": 217, "channel": [217, 218, 220], "hackathon": 217, "chanel": 217, "bi": 217, "annual": 217, "usergroup": [217, 218], "influenc": 217, "sustain": 217, "mainten": [217, 221], "proven": 217, "audienc": 217, "committe": 217, "greatest": 217, "matur": 217, "train": 217, "bump": 217, "leadership": 217, "prioriti": [217, 218], "thrust": 217, "person": [217, 221], "refin": 217, "unassign": 217, "aren": 217, "weekli": [217, 218], "reassign": 217, "obsolet": 217, "changelog": [217, 219], "avenu": 217, "week": [217, 220], "mondai": 217, "urgent": 217, "triag": 217, "preliminari": 217, "agenda": 217, "kept": 217, "nucleu": 217, "ongo": 217, "ephemer": 217, "dai": [217, 219], "unpaid": 217, "longer": 217, "wherev": 217, "nda": 217, "held": 217, "wednesdai": 217, "2pm": 217, "pm": 217, "mt": 217, "00": [217, 219], "utc": 217, "zoom": 217, "six": 217, "candid": [217, 220], "cherri": 217, "nearing": 217, "delai": 217, "creation": 217, "ship": 217, "partner": [217, 218], "announc": 217, "invit": [217, 220], "onto": 217, "regress": 217, "unaddress": 217, "approxim": 217, "overview": [217, 225], "enhanc": [218, 219, 230], "priorit": 218, "mileston": 218, "slot": 218, "15feb18": 219, "x86": [219, 221], "043": 219, "196": 219, "128": 219, "pgi": 219, "103": 219, "174": 219, "cygwin": 219, "64bit": 219, "test_all_sandia": [219, 221], "trilino": [219, 220, 221, 225], "atdm": 219, "lammp": [219, 220], "sparc": 219, "master_histori": 219, "snapshot": [219, 221], "clone": [219, 221], "git": 219, "nohup": 219, "tail": 219, "watch": 219, "white": [219, 221], "shepard": [219, 221], "shepard_jenkins_run_script_serial_intel": [219, 221], "pristin": [219, 221], "rerun": 219, "token": [219, 234], "oldtag": 219, "newtag": 219, "04": 219, "rubi": 219, "gitthub_changelog_gener": 219, "indevelop": 219, "cat": 219, "md": 219, "cleanup": 219, "commit": [219, 221], "owner": [219, 221, 226], "clariti": [219, 230], "noteworthi": 219, "checkout": [219, 221], "majornumb": 219, "minornumb": 219, "weekssinceminornumberupd": 219, "sha1": 219, "append": [219, 231], "03": 219, "27": 219, "da314444": 219, "29ccb58a": 219, "amend": 219, "mm": [219, 224], "dd": 219, "yyyi": 219, "sem": [219, 221], "checkin": [219, 221], "disk": [219, 228], "ram": 219, "ceerws1113": 219, "trilinos_path": 219, "pwd": 219, "untrack": 219, "py": [219, 221], "backtrack": 219, "server": [220, 221], "approv": [220, 221], "jenkin": [220, 221], "travi": 220, "institut": 220, "durat": 220, "pipelin": 220, "verif": 220, "offici": [220, 221], "judg": 220, "thorough": 220, "wider": 220, "poc": 220, "reproduct": 220, "arborx": 220, "million": 220, "nnsa": 220, "offic": 220, "snl": 220, "empir": 220, "sparta": 220, "sierra": 220, "ornl": 220, "cabana": [220, 222], "anl": 220, "petsc": 220, "publicli": 220, "advertis": 220, "role": 221, "databas": 221, "fork": 221, "privileg": 221, "865": 221, "begun": 221, "conclus": 221, "haap": 221, "secondari": 221, "outag": 221, "scroll": 221, "ohpc": 221, "srn": 221, "apollo": 221, "bowman": 221, "elli": 221, "hansen": 221, "e5": 221, "2698": 221, "kokkos_dev": 221, "ride": 221, "p8": 221, "tuleta": 221, "fireston": 221, "garrison": 221, "tesla": 221, "k40": 221, "k80": 221, "p100": 221, "36": 221, "sullivan": 221, "mac": 221, "bed": 221, "submiss": 221, "connect": 221, "webcar": 221, "intranet": 221, "staff": 221, "leader": 221, "assist": 221, "csri": 221, "csu": 221, "administ": 221, "daili": 221, "regimen": 221, "suit": 221, "dashboard": 221, "identif": 221, "flow": 221, "terminolog": 221, "joint": 221, "simul": [221, 226, 229, 230], "qthread": 221, "briefli": 221, "generate_makefil": 221, "bash": 221, "makefil": 221, "spot": 221, "jenkins_test_driv": 221, "testing_script": 221, "sha": 221, "accomplish": [221, 225], "prepare_trilinos_repo": 221, "shepard_jenkins_run_script_pthread_intel": 221, "workspac": 221, "white_run_jenkins_script_cuda": 221, "white_run_jenkins_script_omp": 221, "test_kokkos_master_develop_promot": 221, "checkintest": 221, "flavor": 221, "speed": 221, "central": 221, "equat": 221, "viz": 221, "accuraci": 221, "replica": 221, "nearli": 221, "hundr": 221, "unit_test": 221, "performance_test": 221, "perf_test": 221, "scrutini": 221, "inadequaci": 221, "defici": 221, "halo": 222, "averag": 222, "interop": [222, 234], "window": 222, "demonstr": [223, 224, 225, 228], "quantiti": 223, "ratio": 223, "ultim": 223, "count_adjacent_el": 223, "elements_to_nod": 223, "number_of_nod": 223, "elements_per_nod": 223, "scatter_elements_per_nod": 223, "create_scatter_view": 223, "access_elements_per_nod": 223, "node_of_el": 223, "sum_to_nod": 223, "element_valu": 223, "node_valu": 223, "scatter_node_valu": 223, "access_node_valu": 223, "average_to_nod": 223, "flcl": 224, "daxpi": 224, "ndarrai": 224, "flcl_ndarray_t": 224, "dope": 224, "flatten": [224, 225], "_flcl_nd_array_t": 224, "flcl_ndarray_max_rank": 224, "f90": 224, "nd_array_t": 224, "c_size_t": 224, "nd_array_max_rank": 224, "c_ptr": 224, "procedur": 224, "to_nd_arrai": 224, "to_nd_array_l_1d": 224, "to_nd_array_i32_1d": 224, "to_nd_array_i64_1d": 224, "to_nd_array_r32_1d": 224, "to_nd_array_r64_1d": 224, "to_nd_array_l_2d": 224, "to_nd_array_i32_2d": 224, "to_nd_array_i64_2d": 224, "to_nd_array_r32_2d": 224, "to_nd_array_r64_2d": 224, "to_nd_array_l_3d": 224, "to_nd_array_i32_3d": 224, "to_nd_array_i64_3d": 224, "to_nd_array_r32_3d": 224, "to_nd_array_r64_3d": 224, "view_from_ndarrai": 224, "axpi": 224, "flcl_mod": 224, "c_doubl": 224, "allocat": 224, "f_y": 224, "c_y": 224, "alpha": 224, "subroutin": 224, "iso_c_bind": 224, "inout": 224, "f_axpi": 224, "nd_arrai": 224, "earlier": 224, "c_axpi": 224, "nd_array_i": 224, "nd_array_x": 224, "tensor": 225, "pde": 225, "inputdata": 225, "inputfield": 225, "outputfield": 225, "tripl": 225, "paral": 225, "for_all_cel": 225, "merit": 225, "notion": 225, "natur": 225, "mdr_for_all_cel": 225, "wiki": 225, "intrepid2": 225, "intrepid2_arraytoolsdef": 225, "intrepid": 225, "complementari": 226, "scalabl": 226, "walk": 226, "source_rank": 226, "destination_rank": 226, "number_of_doubl": 226, "my_rank": 226, "mpi_comm": 226, "comm": 226, "mpi_comm_world": 226, "mpi_comm_rank": 226, "mpi_send": 226, "mpi_doubl": 226, "mpi_recv": 226, "quit": 226, "pcie": 226, "unstructur": 226, "sent": 226, "redudantli": 226, "filter": 226, "subset_scann": 226, "keys_in": 226, "desired_key_in": 226, "subset_indices_in": 226, "m_kei": 226, "m_desired_kei": 226, "m_subset_indic": 226, "final_pass": 226, "is_in": 226, "find_subset": 226, "desired_kei": 226, "subset_s": 226, "local_sum": 226, "subset_indic": 226, "transmit": 226, "pack_messag": 226, "all_element_data": 226, "kokkos_enable_deprecated_code_4": 227, "tediou": 227, "appar": 227, "acess": 227, "spell": [227, 232], "myview": 227, "c_style_memori": 227, "c_style_alloc": 227, "concur": 228, "stagger": 228, "littl": 228, "hostexecspac": 228, "deviceexecspac": 228, "device_range_polici": 228, "host_range_polici": 228, "viewvectortyp": 228, "viewmatrixtyp": 228, "xval": 228, "init_src_view": 228, "p_x": 228, "p_a": 228, "init_a": 228, "init_x": 228, "h_x": 228, "h_y": 228, "nrepeat": 228, "synch": 228, "yax": 228, "temp2": 228, "ini_src_view": 228, "occupi": 228, "attent": 228, "paid": 228, "opportun": [228, 230], "range_polici": 228, "v_r": 228, "v_r1": 228, "h_v": 228, "get_initial_st": 228, "get_rhs_func": 228, "serialize_st": 228, "view_r": 228, "exhibit": 229, "cabana_soa": 229, "vectorlength": 229, "membertyp": 229, "cabana_aosoa": 229, "performancetrait": 229, "memorymanag": 229, "carri": 229, "evolut": 230, "particleinteract": 230, "particleposit": 230, "po": 230, "particleforc": 230, "particleneighbor": 230, "pairforc": 230, "parallelis": 230, "rectifi": 230, "qualiti": 230, "plai": 230, "tagphase1": 230, "tagphase2": 230, "compute1": 230, "compute2": 230, "prescrib": 231, "predetermin": 231, "surrog": 231, "roll": 231, "b1": 231, "b2": 231, "b3": 231, "fib": 231, "wait_list": 231, "a_f1": 231, "b_f1": 231, "b_f2": 231, "a_f2": 231, "tm": 231, "vertex": 231, "subteam": 231, "visit": 231, "vertic": 231, "exce": 231, "threshold": 231, "unvisit": 231, "frontier": 231, "st": 231, "edg": 231, "greatli": 231, "neccessari": 232, "myloop": 232, "kokkos_class_lambda": 232, "implementationptr": 232, "make_shar": 232, "oh": 232, "strictli": 232, "nominmax": 233, "uninterpret": 233, "redefin": 233, "dnominmax": 233, "multidim": 234, "safeti": 234, "pga": 234, "analysi": 234, "linear": 234, "algebra": 234, "solver": 234}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [178, 5, 1, "_CPPv410HostMirror", "HostMirror"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [174, 0, 1, "_CPPv412LayoutStride", "LayoutStride"], [132, 0, 1, "_CPPv410ScopeGuard", "ScopeGuard"], [132, 2, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK10ScopeGuard", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERR10ScopeGuard", "ScopeGuard::ScopeGuard"], [132, 2, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard"], [132, 4, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::Args"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argc"], [132, 3, 1, "_CPPv4IDpEN10ScopeGuard10ScopeGuardEDpRR4Args", "ScopeGuard::ScopeGuard::args"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERK13InitArguments", "ScopeGuard::ScopeGuard::arguments"], [132, 3, 1, "_CPPv4N10ScopeGuard10ScopeGuardERiA_Pc", "ScopeGuard::ScopeGuard::argv"], [132, 2, 1, "_CPPv4N10ScopeGuardaSERK10ScopeGuard", "ScopeGuard::operator="], [132, 2, 1, "_CPPv4N10ScopeGuardaSERR10ScopeGuard", "ScopeGuard::operator="], [132, 2, 1, "_CPPv4N10ScopeGuardD0Ev", "ScopeGuard::~ScopeGuard"], [178, 5, 1, "_CPPv412array_layout", "array_layout"], [178, 5, 1, "_CPPv415const_data_type", "const_data_type"], [178, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [178, 5, 1, "_CPPv410const_type", "const_type"], [178, 5, 1, "_CPPv416const_value_type", "const_value_type"], [178, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [178, 5, 1, "_CPPv411device_type", "device_type"], [178, 5, 1, "_CPPv49dimension", "dimension"], [178, 5, 1, "_CPPv415execution_space", "execution_space"], [178, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [178, 5, 1, "_CPPv412memory_space", "memory_space"], [178, 5, 1, "_CPPv413memory_traits", "memory_traits"], [178, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [178, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [178, 5, 1, "_CPPv414non_const_type", "non_const_type"], [178, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [178, 5, 1, "_CPPv412pointer_type", "pointer_type"], [178, 5, 1, "_CPPv414reference_type", "reference_type"], [178, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [178, 5, 1, "_CPPv49size_type", "size_type"], [178, 5, 1, "_CPPv410specialize", "specialize"], [178, 5, 1, "_CPPv410value_type", "value_type"], [108, 6, 1, "_CPPv4I00E4BAnd", "BAnd"], [108, 7, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd"], [108, 7, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd"], [108, 8, 1, "_CPPv4N4BAnd4BAndER10value_type", "BAnd::BAnd::value_"], [108, 8, 1, "_CPPv4N4BAnd4BAndERK16result_view_type", "BAnd::BAnd::value_"], [108, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Scalar"], [108, 9, 1, "_CPPv4I00E4BAnd", "BAnd::Space"], [108, 7, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init"], [108, 8, 1, "_CPPv4NK4BAnd4initER10value_type", "BAnd::init::val"], [108, 7, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join"], [108, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::dest"], [108, 8, 1, "_CPPv4NK4BAnd4joinER10value_typeRK10value_type", "BAnd::join::src"], [108, 10, 1, "_CPPv4N4BAnd7reducerE", "BAnd::reducer"], [108, 7, 1, "_CPPv4NK4BAnd9referenceEv", "BAnd::reference"], [108, 10, 1, "_CPPv4N4BAnd16result_view_typeE", "BAnd::result_view_type"], [108, 10, 1, "_CPPv4N4BAnd10value_typeE", "BAnd::value_type"], [108, 7, 1, "_CPPv4NK4BAnd4viewEv", "BAnd::view"], [109, 6, 1, "_CPPv4I00E3BOr", "BOr"], [109, 7, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr"], [109, 7, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr"], [109, 8, 1, "_CPPv4N3BOr3BOrER10value_type", "BOr::BOr::value_"], [109, 8, 1, "_CPPv4N3BOr3BOrERK16result_view_type", "BOr::BOr::value_"], [109, 9, 1, "_CPPv4I00E3BOr", "BOr::Scalar"], [109, 9, 1, "_CPPv4I00E3BOr", "BOr::Space"], [109, 7, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init"], [109, 8, 1, "_CPPv4NK3BOr4initER10value_type", "BOr::init::val"], [109, 7, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join"], [109, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::dest"], [109, 8, 1, "_CPPv4NK3BOr4joinER10value_typeRK10value_type", "BOr::join::src"], [109, 10, 1, "_CPPv4N3BOr7reducerE", "BOr::reducer"], [109, 7, 1, "_CPPv4NK3BOr9referenceEv", "BOr::reference"], [109, 10, 1, "_CPPv4N3BOr16result_view_typeE", "BOr::result_view_type"], [109, 10, 1, "_CPPv4N3BOr10value_typeE", "BOr::value_type"], [109, 7, 1, "_CPPv4NK3BOr4viewEv", "BOr::view"], [214, 6, 1, "_CPPv4I0DpE10CoolerView", "CoolerView"], [214, 11, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView"], [214, 8, 1, "_CPPv4N10CoolerView10CoolerViewERR10CoolerView", "CoolerView::CoolerView::rhs"], [214, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::DataType"], [214, 9, 1, "_CPPv4I0DpE10CoolerView", "CoolerView::Traits"], [214, 10, 1, "_CPPv4N10CoolerView9data_typeE", "CoolerView::data_type"], [214, 11, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo"], [214, 9, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::U"], [214, 8, 1, "_CPPv4I0EN10CoolerView3fooE1U", "CoolerView::foo::x"], [214, 10, 1, "_CPPv4N10CoolerView6foobarE", "CoolerView::foobar"], [214, 10, 1, "_CPPv4N10CoolerView6foobatE", "CoolerView::foobat"], [214, 12, 1, "_CPPv4N10CoolerView8some_varE", "CoolerView::some_var"], [214, 11, 1, "_CPPv4N10CoolerViewD0Ev", "CoolerView::~CoolerView"], [75, 6, 1, "_CPPv4I0000E8DualView", "DualView"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg1Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg2Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::Arg3Type"], [75, 9, 1, "_CPPv4I0000E8DualView", "DualView::DataType"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView"], [75, 11, 1, "_CPPv4N8DualView8DualViewEv", "DualView::DualView"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::arg0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::arg_prop"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::args"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::d_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK5t_devRK6t_host", "DualView::DualView::h_view_"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::label"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n0"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n1"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n2"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n3"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n4"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n5"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n6"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKN4Impl12ViewCtorPropIDp1PEEKNSt9enable_ifIXntN4Impl12ViewCtorPropIDp1PE11has_pointerEE6size_tE4typeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERKNSt6stringEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::DualView::n7"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SD2S12S22S3ERK4Arg0Dp4Args", "DualView::DualView::src"], [75, 8, 1, "_CPPv4N8DualView8DualViewERK8DualViewI2SS2LS2DS2MSE", "DualView::DualView::src"], [75, 11, 1, "_CPPv4N8DualView16clear_sync_stateEv", "DualView::clear_sync_state"], [75, 12, 1, "_CPPv4N8DualView6d_viewE", "DualView::d_view"], [75, 7, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent"], [75, 9, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6extentENSt9enable_ifINSt11is_integralI5iTypeE5valueE6size_tE4typeERK5iType", "DualView::extent::r"], [75, 7, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int"], [75, 9, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView10extent_intENSt9enable_ifINSt11is_integralI5iTypeE5valueEiE4typeERK5iType", "DualView::extent_int::r"], [75, 11, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side"], [75, 9, 1, "_CPPv4I0EN8DualView15get_device_sideEiv", "DualView::get_device_side::Device"], [75, 12, 1, "_CPPv4N8DualView6h_viewE", "DualView::h_view"], [75, 10, 1, "_CPPv4N8DualView17host_mirror_spaceE", "DualView::host_mirror_space"], [75, 11, 1, "_CPPv4NK8DualView12is_allocatedEv", "DualView::is_allocated"], [75, 12, 1, "_CPPv4N8DualView15modified_deviceE", "DualView::modified_device"], [75, 12, 1, "_CPPv4N8DualView14modified_flagsE", "DualView::modified_flags"], [75, 12, 1, "_CPPv4N8DualView13modified_hostE", "DualView::modified_host"], [75, 11, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify"], [75, 9, 1, "_CPPv4I0EN8DualView6modifyEvv", "DualView::modify::Device"], [75, 11, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync"], [75, 9, 1, "_CPPv4I0ENK8DualView9need_syncEbv", "DualView::need_sync::Device"], [75, 11, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n0"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n1"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n2"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n3"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n4"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n5"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n6"], [75, 8, 1, "_CPPv4N8DualView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::realloc::n7"], [75, 11, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n0"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n1"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n2"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n3"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n4"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n5"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n6"], [75, 8, 1, "_CPPv4N8DualView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "DualView::resize::n7"], [75, 7, 1, "_CPPv4NK8DualView4spanEv", "DualView::span"], [75, 7, 1, "_CPPv4N8DualView18span_is_contiguousEv", "DualView::span_is_contiguous"], [75, 11, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride"], [75, 9, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::iType"], [75, 8, 1, "_CPPv4I0ENK8DualView6strideEvP5iType", "DualView::stride::stride_"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 11, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXooNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 9, 1, "_CPPv4I0EN8DualView4syncEvRKN4Impl9enable_ifIXoontNSt7is_sameIN6traits9data_typeEN6traits19non_const_data_typeEE5valueENSt7is_sameI6DeviceiE5valueEEiE4typeE", "DualView::sync::Device"], [75, 10, 1, "_CPPv4N8DualView5t_devE", "DualView::t_dev"], [75, 10, 1, "_CPPv4N8DualView11t_dev_constE", "DualView::t_dev_const"], [75, 10, 1, "_CPPv4N8DualView22t_dev_const_randomreadE", "DualView::t_dev_const_randomread"], [75, 10, 1, "_CPPv4N8DualView25t_dev_const_randomread_umE", "DualView::t_dev_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView14t_dev_const_umE", "DualView::t_dev_const_um"], [75, 10, 1, "_CPPv4N8DualView8t_dev_umE", "DualView::t_dev_um"], [75, 10, 1, "_CPPv4N8DualView6t_hostE", "DualView::t_host"], [75, 10, 1, "_CPPv4N8DualView12t_host_constE", "DualView::t_host_const"], [75, 10, 1, "_CPPv4N8DualView23t_host_const_randomreadE", "DualView::t_host_const_randomread"], [75, 10, 1, "_CPPv4N8DualView26t_host_const_randomread_umE", "DualView::t_host_const_randomread_um"], [75, 10, 1, "_CPPv4N8DualView15t_host_const_umE", "DualView::t_host_const_um"], [75, 10, 1, "_CPPv4N8DualView9t_host_umE", "DualView::t_host_um"], [75, 10, 1, "_CPPv4N8DualView15t_modified_flagE", "DualView::t_modified_flag"], [75, 10, 1, "_CPPv4N8DualView16t_modified_flagsE", "DualView::t_modified_flags"], [75, 10, 1, "_CPPv4N8DualView6traitsE", "DualView::traits"], [75, 7, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view"], [75, 9, 1, "_CPPv4I0EN8DualView4viewERKN4Impl4if_cINSt7is_sameIN5t_dev12memory_spaceEN6Device12memory_spaceEE5valueE5t_dev6t_hostE4typeEv", "DualView::view::Device"], [76, 6, 1, "_CPPv4I0000E11DynRankView", "DynRankView"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::DataType"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView"], [76, 11, 1, "_CPPv4N11DynRankView11DynRankViewEv", "DynRankView::DynRankView"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::args"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::indices"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::layout"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringEDpRK7IntType", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERKNSt6stringERK12array_layout", "DynRankView::DynRankView::name"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesDpRK7IntType", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK15AllocPropertiesRK12array_layout", "DynRankView::DynRankView::prop"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeDpRK7IntType", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12pointer_typeRK12array_layout", "DynRankView::DynRankView::ptr"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK11DynRankViewI2DTDp4PropEDp4Args", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK4ViewI2RTDp2RPE", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERR11DynRankView", "DynRankView::DynRankView::rhs"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceDpRK7IntType", "DynRankView::DynRankView::space"], [76, 8, 1, "_CPPv4N11DynRankView11DynRankViewERK12ScratchSpaceRK12array_layout", "DynRankView::DynRankView::space"], [76, 10, 1, "_CPPv4N11DynRankView10HostMirrorE", "DynRankView::HostMirror"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::LayoutType"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemorySpace"], [76, 9, 1, "_CPPv4I0000E11DynRankView", "DynRankView::MemoryTraits"], [76, 11, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i0"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i1"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i2"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i3"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i4"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i5"], [76, 8, 1, "_CPPv4NK11DynRankView6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "DynRankView::access::i6"], [76, 10, 1, "_CPPv4N11DynRankView12array_layoutE", "DynRankView::array_layout"], [76, 10, 1, "_CPPv4N11DynRankView15const_data_typeE", "DynRankView::const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView23const_scalar_array_typeE", "DynRankView::const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView10const_typeE", "DynRankView::const_type"], [76, 10, 1, "_CPPv4N11DynRankView16const_value_typeE", "DynRankView::const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankView4dataEv", "DynRankView::data"], [76, 10, 1, "_CPPv4N11DynRankView9data_typeE", "DynRankView::data_type"], [76, 10, 1, "_CPPv4N11DynRankView11device_typeE", "DynRankView::device_type"], [76, 10, 1, "_CPPv4N11DynRankView9dimensionE", "DynRankView::dimension"], [76, 10, 1, "_CPPv4N11DynRankView15execution_spaceE", "DynRankView::execution_space"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6extentE6size_tRK5iType", "DynRankView::extent::iType"], [76, 11, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int"], [76, 8, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView10extent_intEiRK5iType", "DynRankView::extent_int::iType"], [76, 10, 1, "_CPPv4N11DynRankView17host_mirror_spaceE", "DynRankView::host_mirror_space"], [76, 11, 1, "_CPPv4NK11DynRankView12is_allocatedEv", "DynRankView::is_allocated"], [76, 11, 1, "_CPPv4NK11DynRankView5labelEv", "DynRankView::label"], [76, 11, 1, "_CPPv4NK11DynRankView6layoutEv", "DynRankView::layout"], [76, 10, 1, "_CPPv4N11DynRankView12memory_spaceE", "DynRankView::memory_space"], [76, 10, 1, "_CPPv4N11DynRankView13memory_traitsE", "DynRankView::memory_traits"], [76, 10, 1, "_CPPv4N11DynRankView19non_const_data_typeE", "DynRankView::non_const_data_type"], [76, 10, 1, "_CPPv4N11DynRankView27non_const_scalar_array_typeE", "DynRankView::non_const_scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView14non_const_typeE", "DynRankView::non_const_type"], [76, 10, 1, "_CPPv4N11DynRankView20non_const_value_typeE", "DynRankView::non_const_value_type"], [76, 11, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()"], [76, 8, 1, "_CPPv4NK11DynRankViewclEDpRK7IntType", "DynRankView::operator()::indices"], [76, 10, 1, "_CPPv4N11DynRankView12pointer_typeE", "DynRankView::pointer_type"], [76, 11, 1, "_CPPv4NK11DynRankView4rankEv", "DynRankView::rank"], [76, 10, 1, "_CPPv4N11DynRankView14reference_typeE", "DynRankView::reference_type"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size"], [76, 11, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N0"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N1"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N2"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N3"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N4"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N5"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N6"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N7"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "DynRankView::required_allocation_size::N8"], [76, 8, 1, "_CPPv4N11DynRankView24required_allocation_sizeERK12array_layout", "DynRankView::required_allocation_size::layout"], [76, 10, 1, "_CPPv4N11DynRankView17scalar_array_typeE", "DynRankView::scalar_array_type"], [76, 10, 1, "_CPPv4N11DynRankView9size_typeE", "DynRankView::size_type"], [76, 11, 1, "_CPPv4NK11DynRankView4spanEv", "DynRankView::span"], [76, 11, 1, "_CPPv4NK11DynRankView18span_is_contiguousEv", "DynRankView::span_is_contiguous"], [76, 10, 1, "_CPPv4N11DynRankView10specializeE", "DynRankView::specialize"], [76, 11, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride"], [76, 8, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::dim"], [76, 9, 1, "_CPPv4I0ENK11DynRankView6strideE6size_tRK5iType", "DynRankView::stride::iType"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_0Ev", "DynRankView::stride_0"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_1Ev", "DynRankView::stride_1"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_2Ev", "DynRankView::stride_2"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_3Ev", "DynRankView::stride_3"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_4Ev", "DynRankView::stride_4"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_5Ev", "DynRankView::stride_5"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_6Ev", "DynRankView::stride_6"], [76, 11, 1, "_CPPv4NK11DynRankView8stride_7Ev", "DynRankView::stride_7"], [76, 11, 1, "_CPPv4NK11DynRankView9use_countEv", "DynRankView::use_count"], [76, 10, 1, "_CPPv4N11DynRankView10value_typeE", "DynRankView::value_type"], [77, 6, 1, "_CPPv4I0DpE11DynamicView", "DynamicView"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::DataType"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView"], [77, 11, 1, "_CPPv4N11DynamicView11DynamicViewEv", "DynamicView::DynamicView"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::arg_label"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::max_extent"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERKNSt6stringEKjKj", "DynamicView::DynamicView::min_chunk_size"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERK11DynamicViewI2RTDp2RPE", "DynamicView::DynamicView::rhs"], [77, 8, 1, "_CPPv4N11DynamicView11DynamicViewERR11DynamicView", "DynamicView::DynamicView::rhs"], [77, 10, 1, "_CPPv4N11DynamicView10HostMirrorE", "DynamicView::HostMirror"], [77, 9, 1, "_CPPv4I0DpE11DynamicView", "DynamicView::P"], [77, 7, 1, "_CPPv4NK11DynamicView17allocation_extentEv", "DynamicView::allocation_extent"], [77, 10, 1, "_CPPv4N11DynamicView10array_typeE", "DynamicView::array_type"], [77, 7, 1, "_CPPv4NK11DynamicView10chunk_sizeEv", "DynamicView::chunk_size"], [77, 10, 1, "_CPPv4N11DynamicView10const_typeE", "DynamicView::const_type"], [77, 7, 1, "_CPPv4NK11DynamicView4dataEv", "DynamicView::data"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6extentE6size_tRK5iType", "DynamicView::extent::iType"], [77, 7, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int"], [77, 8, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView10extent_intEiRK5iType", "DynamicView::extent_int::iType"], [77, 11, 1, "_CPPv4NK11DynamicView12is_allocatedEv", "DynamicView::is_allocated"], [77, 11, 1, "_CPPv4N11DynamicView5labelEv", "DynamicView::label"], [77, 10, 1, "_CPPv4N11DynamicView14non_const_typeE", "DynamicView::non_const_type"], [77, 7, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::args"], [77, 8, 1, "_CPPv4NK11DynamicViewclERK2I0DpRK4Args", "DynamicView::operator()::i0"], [77, 10, 1, "_CPPv4N11DynamicView12pointer_typeE", "DynamicView::pointer_type"], [77, 10, 1, "_CPPv4N11DynamicView14reference_typeE", "DynamicView::reference_type"], [77, 12, 1, "_CPPv4N11DynamicView34reference_type_is_lvalue_referenceE", "DynamicView::reference_type_is_lvalue_reference"], [77, 11, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial"], [77, 9, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::IntType"], [77, 8, 1, "_CPPv4I0EN11DynamicView13resize_serialEvRK7IntType", "DynamicView::resize_serial::n"], [77, 7, 1, "_CPPv4NK11DynamicView4sizeEv", "DynamicView::size"], [77, 7, 1, "_CPPv4NK11DynamicView4spanEv", "DynamicView::span"], [77, 7, 1, "_CPPv4NK11DynamicView18span_is_contiguousEv", "DynamicView::span_is_contiguous"], [77, 7, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride"], [77, 8, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::dim"], [77, 9, 1, "_CPPv4I0ENK11DynamicView6strideEvRK5iType", "DynamicView::stride::iType"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_0Ev", "DynamicView::stride_0"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_1Ev", "DynamicView::stride_1"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_2Ev", "DynamicView::stride_2"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_3Ev", "DynamicView::stride_3"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_4Ev", "DynamicView::stride_4"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_5Ev", "DynamicView::stride_5"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_6Ev", "DynamicView::stride_6"], [77, 7, 1, "_CPPv4NK11DynamicView8stride_7Ev", "DynamicView::stride_7"], [77, 10, 1, "_CPPv4N11DynamicView6traitsE", "DynamicView::traits"], [77, 7, 1, "_CPPv4NK11DynamicView9use_countEv", "DynamicView::use_count"], [130, 6, 1, "_CPPv413InitArguments", "InitArguments"], [130, 11, 1, "_CPPv4N13InitArguments13InitArgumentsEv", "InitArguments::InitArguments"], [130, 12, 1, "_CPPv4N13InitArguments9device_idE", "InitArguments::device_id"], [130, 12, 1, "_CPPv4N13InitArguments16disable_warningsE", "InitArguments::disable_warnings"], [130, 12, 1, "_CPPv4N13InitArguments8ndevicesE", "InitArguments::ndevices"], [130, 12, 1, "_CPPv4N13InitArguments8num_numaE", "InitArguments::num_numa"], [130, 12, 1, "_CPPv4N13InitArguments11num_threadsE", "InitArguments::num_threads"], [130, 12, 1, "_CPPv4N13InitArguments11skip_deviceE", "InitArguments::skip_device"], [131, 6, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [131, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [131, 11, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [131, 8, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [131, 11, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [131, 11, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [131, 11, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [131, 8, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [171, 11, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [171, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy"], [171, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [171, 11, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [171, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy"], [171, 11, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy"], [171, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [171, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ExecSpace"], [171, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ExecSpace"], [171, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [171, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewDest"], [171, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [171, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::ViewDest"], [171, 9, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [171, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [171, 9, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [171, 9, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::ViewSrc"], [171, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [171, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::dest"], [171, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [171, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [171, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::dest"], [171, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::dest"], [171, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::exec_space"], [171, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::exec_space"], [171, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::exec_space"], [171, 8, 1, "_CPPv4I000EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [171, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK8ViewDestRK7ViewSrc", "Kokkos::deep_copy::src"], [171, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [171, 8, 1, "_CPPv4I00EN6Kokkos9deep_copyEvRK9ExecSpaceRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [171, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRK8ViewDestRKN8ViewDest10value_typeE", "Kokkos::deep_copy::src"], [171, 8, 1, "_CPPv4I0EN6Kokkos9deep_copyEvRN7ViewSrc10value_typeERK7ViewSrc", "Kokkos::deep_copy::src"], [110, 6, 1, "_CPPv4I00E4LAnd", "LAnd"], [110, 7, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd"], [110, 7, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd"], [110, 8, 1, "_CPPv4N4LAnd4LAndER10value_type", "LAnd::LAnd::value_"], [110, 8, 1, "_CPPv4N4LAnd4LAndERK16result_view_type", "LAnd::LAnd::value_"], [110, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Scalar"], [110, 9, 1, "_CPPv4I00E4LAnd", "LAnd::Space"], [110, 7, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init"], [110, 8, 1, "_CPPv4NK4LAnd4initER10value_type", "LAnd::init::val"], [110, 7, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join"], [110, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::dest"], [110, 8, 1, "_CPPv4NK4LAnd4joinER10value_typeRK10value_type", "LAnd::join::src"], [110, 10, 1, "_CPPv4N4LAnd7reducerE", "LAnd::reducer"], [110, 7, 1, "_CPPv4NK4LAnd9referenceEv", "LAnd::reference"], [110, 10, 1, "_CPPv4N4LAnd16result_view_typeE", "LAnd::result_view_type"], [110, 10, 1, "_CPPv4N4LAnd10value_typeE", "LAnd::value_type"], [110, 7, 1, "_CPPv4NK4LAnd4viewEv", "LAnd::view"], [111, 6, 1, "_CPPv4I00E3LOr", "LOr"], [111, 7, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr"], [111, 7, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr"], [111, 8, 1, "_CPPv4N3LOr3LOrER10value_type", "LOr::LOr::value_"], [111, 8, 1, "_CPPv4N3LOr3LOrERK16result_view_type", "LOr::LOr::value_"], [111, 9, 1, "_CPPv4I00E3LOr", "LOr::Scalar"], [111, 9, 1, "_CPPv4I00E3LOr", "LOr::Space"], [111, 7, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init"], [111, 8, 1, "_CPPv4NK3LOr4initER10value_type", "LOr::init::val"], [111, 7, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join"], [111, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::dest"], [111, 8, 1, "_CPPv4NK3LOr4joinER10value_typeRK10value_type", "LOr::join::src"], [111, 10, 1, "_CPPv4N3LOr7reducerE", "LOr::reducer"], [111, 7, 1, "_CPPv4NK3LOr9referenceEv", "LOr::reference"], [111, 10, 1, "_CPPv4N3LOr16result_view_typeE", "LOr::result_view_type"], [111, 10, 1, "_CPPv4N3LOr10value_typeE", "LOr::value_type"], [111, 7, 1, "_CPPv4NK3LOr4viewEv", "LOr::view"], [172, 6, 1, "_CPPv410LayoutLeft", "LayoutLeft"], [172, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERK10LayoutLeft", "LayoutLeft::LayoutLeft"], [172, 11, 1, "_CPPv4N10LayoutLeft10LayoutLeftERR10LayoutLeft", "LayoutLeft::LayoutLeft"], [172, 7, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft"], [172, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N0"], [172, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N1"], [172, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N2"], [172, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N3"], [172, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N4"], [172, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N5"], [172, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N6"], [172, 8, 1, "_CPPv4N10LayoutLeft10LayoutLeftE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutLeft::LayoutLeft::N7"], [172, 10, 1, "_CPPv4N10LayoutLeft12array_layoutE", "LayoutLeft::array_layout"], [172, 12, 1, "_CPPv4N10LayoutLeft9dimensionE", "LayoutLeft::dimension"], [172, 12, 1, "_CPPv4N10LayoutLeft23is_extent_constructibleE", "LayoutLeft::is_extent_constructible"], [172, 11, 1, "_CPPv4N10LayoutLeftaSERK10LayoutLeft", "LayoutLeft::operator="], [172, 11, 1, "_CPPv4N10LayoutLeftaSERR10LayoutLeft", "LayoutLeft::operator="], [173, 6, 1, "_CPPv411LayoutRight", "LayoutRight"], [173, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERK11LayoutRight", "LayoutRight::LayoutRight"], [173, 11, 1, "_CPPv4N11LayoutRight11LayoutRightERR11LayoutRight", "LayoutRight::LayoutRight"], [173, 7, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight"], [173, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N0"], [173, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N1"], [173, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N2"], [173, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N3"], [173, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N4"], [173, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N5"], [173, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N6"], [173, 8, 1, "_CPPv4N11LayoutRight11LayoutRightE6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutRight::LayoutRight::N7"], [173, 10, 1, "_CPPv4N11LayoutRight12array_layoutE", "LayoutRight::array_layout"], [173, 12, 1, "_CPPv4N11LayoutRight9dimensionE", "LayoutRight::dimension"], [173, 12, 1, "_CPPv4N11LayoutRight23is_extent_constructibleE", "LayoutRight::is_extent_constructible"], [173, 11, 1, "_CPPv4N11LayoutRightaSERK11LayoutRight", "LayoutRight::operator="], [173, 11, 1, "_CPPv4N11LayoutRightaSERR11LayoutRight", "LayoutRight::operator="], [174, 11, 1, "_CPPv412LayoutStrideRK12LayoutStride", "LayoutStride"], [174, 11, 1, "_CPPv412LayoutStrideRR12LayoutStride", "LayoutStride"], [174, 7, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N0"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N1"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N2"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N3"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N4"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N5"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N6"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::N7"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S0"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S1"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S2"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S3"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S4"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S5"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S6"], [174, 8, 1, "_CPPv412LayoutStride6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "LayoutStride::S7"], [148, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 11, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 11, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [148, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [148, 11, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [148, 8, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [148, 8, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [112, 6, 1, "_CPPv4I00E3Max", "Max"], [112, 7, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max"], [112, 7, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max"], [112, 8, 1, "_CPPv4N3Max3MaxER10value_type", "Max::Max::value_"], [112, 8, 1, "_CPPv4N3Max3MaxERK16result_view_type", "Max::Max::value_"], [112, 9, 1, "_CPPv4I00E3Max", "Max::Scalar"], [112, 9, 1, "_CPPv4I00E3Max", "Max::Space"], [112, 7, 1, "_CPPv4NK3Max4initER10value_type", "Max::init"], [112, 8, 1, "_CPPv4NK3Max4initER10value_type", "Max::init::val"], [112, 7, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join"], [112, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::dest"], [112, 8, 1, "_CPPv4NK3Max4joinER10value_typeRK10value_type", "Max::join::src"], [112, 10, 1, "_CPPv4N3Max7reducerE", "Max::reducer"], [112, 7, 1, "_CPPv4NK3Max9referenceEv", "Max::reference"], [112, 10, 1, "_CPPv4N3Max16result_view_typeE", "Max::result_view_type"], [112, 10, 1, "_CPPv4N3Max10value_typeE", "Max::value_type"], [112, 7, 1, "_CPPv4NK3Max4viewEv", "Max::view"], [113, 6, 1, "_CPPv4I000E6MaxLoc", "MaxLoc"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Index"], [113, 7, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc"], [113, 7, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc"], [113, 8, 1, "_CPPv4N6MaxLoc6MaxLocER10value_type", "MaxLoc::MaxLoc::value_"], [113, 8, 1, "_CPPv4N6MaxLoc6MaxLocERK16result_view_type", "MaxLoc::MaxLoc::value_"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Scalar"], [113, 9, 1, "_CPPv4I000E6MaxLoc", "MaxLoc::Space"], [113, 7, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init"], [113, 8, 1, "_CPPv4NK6MaxLoc4initER10value_type", "MaxLoc::init::val"], [113, 7, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join"], [113, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::dest"], [113, 8, 1, "_CPPv4NK6MaxLoc4joinER10value_typeRK10value_type", "MaxLoc::join::src"], [113, 10, 1, "_CPPv4N6MaxLoc7reducerE", "MaxLoc::reducer"], [113, 7, 1, "_CPPv4NK6MaxLoc9referenceEv", "MaxLoc::reference"], [113, 10, 1, "_CPPv4N6MaxLoc16result_view_typeE", "MaxLoc::result_view_type"], [113, 10, 1, "_CPPv4N6MaxLoc10value_typeE", "MaxLoc::value_type"], [113, 7, 1, "_CPPv4NK6MaxLoc4viewEv", "MaxLoc::view"], [114, 6, 1, "_CPPv4I00E3Min", "Min"], [114, 7, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min"], [114, 7, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min"], [114, 8, 1, "_CPPv4N3Min3MinER10value_type", "Min::Min::value_"], [114, 8, 1, "_CPPv4N3Min3MinERK16result_view_type", "Min::Min::value_"], [114, 9, 1, "_CPPv4I00E3Min", "Min::Scalar"], [114, 9, 1, "_CPPv4I00E3Min", "Min::Space"], [114, 7, 1, "_CPPv4NK3Min4initER10value_type", "Min::init"], [114, 8, 1, "_CPPv4NK3Min4initER10value_type", "Min::init::val"], [114, 7, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join"], [114, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::dest"], [114, 8, 1, "_CPPv4NK3Min4joinER10value_typeRK10value_type", "Min::join::src"], [114, 10, 1, "_CPPv4N3Min7reducerE", "Min::reducer"], [114, 7, 1, "_CPPv4NK3Min9referenceEv", "Min::reference"], [114, 10, 1, "_CPPv4N3Min16result_view_typeE", "Min::result_view_type"], [114, 10, 1, "_CPPv4N3Min10value_typeE", "Min::value_type"], [114, 7, 1, "_CPPv4NK3Min4viewEv", "Min::view"], [115, 6, 1, "_CPPv4I000E6MinLoc", "MinLoc"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Index"], [115, 7, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc"], [115, 7, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc"], [115, 8, 1, "_CPPv4N6MinLoc6MinLocER10value_type", "MinLoc::MinLoc::value_"], [115, 8, 1, "_CPPv4N6MinLoc6MinLocERK16result_view_type", "MinLoc::MinLoc::value_"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Scalar"], [115, 9, 1, "_CPPv4I000E6MinLoc", "MinLoc::Space"], [115, 7, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init"], [115, 8, 1, "_CPPv4NK6MinLoc4initER10value_type", "MinLoc::init::val"], [115, 7, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join"], [115, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::dest"], [115, 8, 1, "_CPPv4NK6MinLoc4joinER10value_typeRK10value_type", "MinLoc::join::src"], [115, 10, 1, "_CPPv4N6MinLoc7reducerE", "MinLoc::reducer"], [115, 7, 1, "_CPPv4NK6MinLoc9referenceEv", "MinLoc::reference"], [115, 10, 1, "_CPPv4N6MinLoc16result_view_typeE", "MinLoc::result_view_type"], [115, 10, 1, "_CPPv4N6MinLoc10value_typeE", "MinLoc::value_type"], [115, 7, 1, "_CPPv4NK6MinLoc4viewEv", "MinLoc::view"], [116, 6, 1, "_CPPv4I00E6MinMax", "MinMax"], [116, 7, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax"], [116, 7, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax"], [116, 8, 1, "_CPPv4N6MinMax6MinMaxER10value_type", "MinMax::MinMax::value_"], [116, 8, 1, "_CPPv4N6MinMax6MinMaxERK16result_view_type", "MinMax::MinMax::value_"], [116, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Scalar"], [116, 9, 1, "_CPPv4I00E6MinMax", "MinMax::Space"], [116, 7, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init"], [116, 8, 1, "_CPPv4NK6MinMax4initER10value_type", "MinMax::init::val"], [116, 7, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join"], [116, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::dest"], [116, 8, 1, "_CPPv4NK6MinMax4joinER10value_typeRK10value_type", "MinMax::join::src"], [116, 10, 1, "_CPPv4N6MinMax7reducerE", "MinMax::reducer"], [116, 7, 1, "_CPPv4NK6MinMax9referenceEv", "MinMax::reference"], [116, 10, 1, "_CPPv4N6MinMax16result_view_typeE", "MinMax::result_view_type"], [116, 10, 1, "_CPPv4N6MinMax10value_typeE", "MinMax::value_type"], [116, 7, 1, "_CPPv4NK6MinMax4viewEv", "MinMax::view"], [117, 6, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc"], [117, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc"], [117, 7, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc"], [117, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocER10value_type", "MinMaxLoc::MinMaxLoc::value_"], [117, 8, 1, "_CPPv4N9MinMaxLoc9MinMaxLocERK16result_view_type", "MinMaxLoc::MinMaxLoc::value_"], [117, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Scalar"], [117, 9, 1, "_CPPv4I00E9MinMaxLoc", "MinMaxLoc::Space"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4initER10value_type", "MinMaxLoc::init::val"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::dest"], [117, 8, 1, "_CPPv4NK9MinMaxLoc4joinER10value_typeRK10value_type", "MinMaxLoc::join::src"], [117, 10, 1, "_CPPv4N9MinMaxLoc7reducerE", "MinMaxLoc::reducer"], [117, 7, 1, "_CPPv4NK9MinMaxLoc9referenceEv", "MinMaxLoc::reference"], [117, 10, 1, "_CPPv4N9MinMaxLoc16result_view_typeE", "MinMaxLoc::result_view_type"], [117, 10, 1, "_CPPv4N9MinMaxLoc10value_typeE", "MinMaxLoc::value_type"], [117, 7, 1, "_CPPv4NK9MinMaxLoc4viewEv", "MinMaxLoc::view"], [118, 6, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar"], [118, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Index"], [118, 9, 1, "_CPPv4I00E15MinMaxLocScalar", "MinMaxLocScalar::Scalar"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7max_locE", "MinMaxLocScalar::max_loc"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7max_valE", "MinMaxLocScalar::max_val"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7min_locE", "MinMaxLocScalar::min_loc"], [118, 12, 1, "_CPPv4N15MinMaxLocScalar7min_valE", "MinMaxLocScalar::min_val"], [118, 11, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator="], [118, 8, 1, "_CPPv4N15MinMaxLocScalaraSERK15MinMaxLocScalar", "MinMaxLocScalar::operator=::rhs"], [119, 6, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar"], [119, 9, 1, "_CPPv4I0E12MinMaxScalar", "MinMaxScalar::Scalar"], [119, 12, 1, "_CPPv4N12MinMaxScalar7max_valE", "MinMaxScalar::max_val"], [119, 12, 1, "_CPPv4N12MinMaxScalar7min_valE", "MinMaxScalar::min_val"], [119, 11, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator="], [119, 8, 1, "_CPPv4N12MinMaxScalaraSERK12MinMaxScalar", "MinMaxScalar::operator=::rhs"], [149, 11, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [149, 8, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [149, 11, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [149, 8, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [120, 6, 1, "_CPPv4I00E4Prod", "Prod"], [120, 7, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod"], [120, 7, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod"], [120, 8, 1, "_CPPv4N4Prod4ProdER10value_type", "Prod::Prod::value_"], [120, 8, 1, "_CPPv4N4Prod4ProdERK16result_view_type", "Prod::Prod::value_"], [120, 9, 1, "_CPPv4I00E4Prod", "Prod::Scalar"], [120, 9, 1, "_CPPv4I00E4Prod", "Prod::Space"], [120, 7, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init"], [120, 8, 1, "_CPPv4NK4Prod4initER10value_type", "Prod::init::val"], [120, 7, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join"], [120, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::dest"], [120, 8, 1, "_CPPv4NK4Prod4joinER10value_typeRK10value_type", "Prod::join::src"], [120, 10, 1, "_CPPv4N4Prod7reducerE", "Prod::reducer"], [120, 7, 1, "_CPPv4NK4Prod9referenceEv", "Prod::reference"], [120, 10, 1, "_CPPv4N4Prod16result_view_typeE", "Prod::result_view_type"], [120, 10, 1, "_CPPv4N4Prod10value_typeE", "Prod::value_type"], [120, 7, 1, "_CPPv4NK4Prod4viewEv", "Prod::view"], [150, 11, 1, "_CPPv411RangePolicyv", "RangePolicy"], [150, 11, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 11, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 8, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::space"], [121, 7, 1, "_CPPv47ReducerR10value_type", "Reducer"], [121, 7, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [121, 8, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [121, 8, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [79, 6, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::DataType"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::ExecSpace"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Layout"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::Op"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERK4ViewI2RTDp2RPE", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView"], [79, 11, 1, "_CPPv4N11ScatterView11ScatterViewEv", "ScatterView::ScatterView"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::arg_prop"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKN6Kokkos4Impl12ViewCtorPropIDp1PEEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::dims"], [79, 8, 1, "_CPPv4N11ScatterView11ScatterViewERKNSt6stringEDp4Dims", "ScatterView::ScatterView::name"], [79, 11, 1, "_CPPv4NK11ScatterView6accessEv", "ScatterView::access"], [79, 11, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into"], [79, 8, 1, "_CPPv4NK11ScatterView15contribute_intoERK4ViewI2DTDp2RPE", "ScatterView::contribute_into::dest"], [79, 9, 1, "_CPPv4I0_i00_iE11ScatterView", "ScatterView::contribution"], [79, 10, 1, "_CPPv4N11ScatterView14data_type_infoE", "ScatterView::data_type_info"], [79, 10, 1, "_CPPv4N11ScatterView18internal_data_typeE", "ScatterView::internal_data_type"], [79, 10, 1, "_CPPv4N11ScatterView18internal_view_typeE", "ScatterView::internal_view_type"], [79, 11, 1, "_CPPv4NK11ScatterView12is_allocatedEv", "ScatterView::is_allocated"], [79, 10, 1, "_CPPv4N11ScatterView23original_reference_typeE", "ScatterView::original_reference_type"], [79, 10, 1, "_CPPv4N11ScatterView19original_value_typeE", "ScatterView::original_value_type"], [79, 10, 1, "_CPPv4N11ScatterView18original_view_typeE", "ScatterView::original_view_type"], [79, 11, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n0"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n1"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n2"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n3"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n4"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n5"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n6"], [79, 8, 1, "_CPPv4N11ScatterView7reallocEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::realloc::n7"], [79, 11, 1, "_CPPv4N11ScatterView5resetEv", "ScatterView::reset"], [79, 11, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except"], [79, 8, 1, "_CPPv4N11ScatterView12reset_exceptERK4ViewI2DTDp2RPE", "ScatterView::reset_except::view"], [79, 11, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n0"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n1"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n2"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n3"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n4"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n5"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n6"], [79, 8, 1, "_CPPv4N11ScatterView6resizeEK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_tK6size_t", "ScatterView::resize::n7"], [79, 11, 1, "_CPPv4NK11ScatterView7subviewEv", "ScatterView::subview"], [123, 6, 1, "_CPPv4I00E3Sum", "Sum"], [123, 9, 1, "_CPPv4I00E3Sum", "Sum::Scalar"], [123, 9, 1, "_CPPv4I00E3Sum", "Sum::Space"], [123, 7, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum"], [123, 7, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum"], [123, 8, 1, "_CPPv4N3Sum3SumER10value_type", "Sum::Sum::value_"], [123, 8, 1, "_CPPv4N3Sum3SumERK16result_view_type", "Sum::Sum::value_"], [123, 7, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init"], [123, 8, 1, "_CPPv4NK3Sum4initER10value_type", "Sum::init::val"], [123, 7, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join"], [123, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::dest"], [123, 8, 1, "_CPPv4NK3Sum4joinER10value_typeRK10value_type", "Sum::join::src"], [123, 10, 1, "_CPPv4N3Sum7reducerE", "Sum::reducer"], [123, 7, 1, "_CPPv4NK3Sum9referenceEv", "Sum::reference"], [123, 10, 1, "_CPPv4N3Sum16result_view_typeE", "Sum::result_view_type"], [123, 10, 1, "_CPPv4N3Sum10value_typeE", "Sum::value_type"], [123, 7, 1, "_CPPv4NK3Sum4viewEv", "Sum::view"], [151, 6, 1, "_CPPv417TeamHandleConcept", "TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERK17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptERR17TeamHandleConcept", "TeamHandleConcept::TeamHandleConcept"], [151, 11, 1, "_CPPv4N17TeamHandleConcept17TeamHandleConceptEv", "TeamHandleConcept::TeamHandleConcept"], [151, 10, 1, "_CPPv4N17TeamHandleConcept15execution_spaceE", "TeamHandleConcept::execution_space"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept11league_rankEv", "TeamHandleConcept::league_rank"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept11league_sizeEv", "TeamHandleConcept::league_size"], [151, 11, 1, "_CPPv4N17TeamHandleConceptaSERK17TeamHandleConcept", "TeamHandleConcept::operator="], [151, 11, 1, "_CPPv4N17TeamHandleConceptaSERR17TeamHandleConcept", "TeamHandleConcept::operator="], [151, 10, 1, "_CPPv4N17TeamHandleConcept20scratch_memory_spaceE", "TeamHandleConcept::scratch_memory_space"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept12team_barrierEv", "TeamHandleConcept::team_barrier"], [151, 7, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast"], [151, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::Closure"], [151, 9, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::T"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::T"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::f"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::source_team_rank"], [151, 8, 1, "_CPPv4I00ENK17TeamHandleConcept14team_broadcastEvRK7ClosureR1TKi", "TeamHandleConcept::team_broadcast::value"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept14team_broadcastEvR1TKi", "TeamHandleConcept::team_broadcast::value"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept9team_rankEv", "TeamHandleConcept::team_rank"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::ReducerType"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept11team_reduceEvRK11ReducerType", "TeamHandleConcept::team_reduce::reducer"], [151, 7, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan"], [151, 9, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::T"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::global"], [151, 8, 1, "_CPPv4I0ENK17TeamHandleConcept9team_scanE1TRK1TPC1T", "TeamHandleConcept::team_scan::value"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch"], [151, 8, 1, "_CPPv4NK17TeamHandleConcept12team_scratchEi", "TeamHandleConcept::team_scratch::level"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept10team_shmemEv", "TeamHandleConcept::team_shmem"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept9team_sizeEv", "TeamHandleConcept::team_size"], [151, 7, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch"], [151, 8, 1, "_CPPv4NK17TeamHandleConcept14thread_scratchEi", "TeamHandleConcept::thread_scratch::level"], [151, 11, 1, "_CPPv4N17TeamHandleConceptD0Ev", "TeamHandleConcept::~TeamHandleConcept"], [152, 6, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy"], [152, 9, 1, "_CPPv4IDpE10TeamPolicy", "TeamPolicy::Args"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERK10TeamPolicy", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyERR10TeamPolicy", "TeamPolicy::TeamPolicy"], [152, 11, 1, "_CPPv4N10TeamPolicy10TeamPolicyEv", "TeamPolicy::TeamPolicy"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::league_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::space"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::space"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::team_size"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_type10index_type10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 8, 1, "_CPPv4N10TeamPolicy10TeamPolicyE15execution_space10index_typeN4Impl6AUTO_tE10index_type", "TeamPolicy::TeamPolicy::vector_length"], [152, 11, 1, "_CPPv4NK10TeamPolicy10chunk_sizeEv", "TeamPolicy::chunk_size"], [152, 10, 1, "_CPPv4N10TeamPolicy15execution_spaceE", "TeamPolicy::execution_space"], [152, 10, 1, "_CPPv4N10TeamPolicy10index_typeE", "TeamPolicy::index_type"], [152, 10, 1, "_CPPv4N10TeamPolicy17iteration_patternE", "TeamPolicy::iteration_pattern"], [152, 10, 1, "_CPPv4N10TeamPolicy13launch_boundsE", "TeamPolicy::launch_bounds"], [152, 11, 1, "_CPPv4NK10TeamPolicy11league_sizeEv", "TeamPolicy::league_size"], [152, 10, 1, "_CPPv4N10TeamPolicy11member_typeE", "TeamPolicy::member_type"], [152, 10, 1, "_CPPv4N10TeamPolicy13schedule_typeE", "TeamPolicy::schedule_type"], [152, 11, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::level"], [152, 8, 1, "_CPPv4NK10TeamPolicy12scratch_sizeEii", "TeamPolicy::scratch_size::team_size_"], [152, 11, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max"], [152, 8, 1, "_CPPv4N10TeamPolicy16scratch_size_maxEi", "TeamPolicy::scratch_size_max::level"], [152, 11, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size"], [152, 8, 1, "_CPPv4N10TeamPolicy14set_chunk_sizeEi", "TeamPolicy::set_chunk_size::chunk"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size"], [152, 11, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::level"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_team"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl12PerTeamValueERKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 8, 1, "_CPPv4N10TeamPolicy16set_scratch_sizeERKiRKN4Impl14PerThreadValueERKN4Impl12PerTeamValueE", "TeamPolicy::set_scratch_size::per_thread"], [152, 11, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy17team_scratch_sizeEi", "TeamPolicy::team_scratch_size::level"], [152, 11, 1, "_CPPv4NK10TeamPolicy9team_sizeEv", "TeamPolicy::team_size"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::FunctorType"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::FunctorType"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_max::f"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy13team_size_maxEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_max::f"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended"], [152, 11, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::FunctorType"], [152, 9, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::FunctorType"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK14ParallelForTag", "TeamPolicy::team_size_recommended::f"], [152, 8, 1, "_CPPv4I0ENK10TeamPolicy21team_size_recommendedEiRK11FunctorTypeRK17ParallelReduceTag", "TeamPolicy::team_size_recommended::f"], [152, 11, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size"], [152, 8, 1, "_CPPv4NK10TeamPolicy19thread_scratch_sizeEi", "TeamPolicy::thread_scratch_size::level"], [152, 11, 1, "_CPPv4N10TeamPolicy17vector_length_maxEv", "TeamPolicy::vector_length_max"], [152, 10, 1, "_CPPv4N10TeamPolicy8work_tagE", "TeamPolicy::work_tag"], [153, 6, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange"], [153, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::Rank"], [153, 9, 1, "_CPPv4I00E17TeamThreadMDRange", "TeamThreadMDRange::TeamHandle"], [153, 11, 1, "_CPPv4N17TeamThreadMDRange17TeamThreadMDRangeE4team8extent_18extent_2z", "TeamThreadMDRange::TeamThreadMDRange"], [149, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [149, 11, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [149, 8, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [155, 6, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange"], [155, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::Rank"], [155, 9, 1, "_CPPv4I00E17TeamVectorMDRange", "TeamVectorMDRange::TeamHandle"], [155, 11, 1, "_CPPv4N17TeamVectorMDRange17TeamVectorMDRangeE4team8extent_18extent_2z", "TeamVectorMDRange::TeamVectorMDRange"], [157, 6, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange"], [157, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::Rank"], [157, 9, 1, "_CPPv4I00E19ThreadVectorMDRange", "ThreadVectorMDRange::TeamHandle"], [157, 11, 1, "_CPPv4N19ThreadVectorMDRange19ThreadVectorMDRangeE4team8extent_18extent_2z", "ThreadVectorMDRange::ThreadVectorMDRange"], [149, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [149, 11, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [149, 8, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [81, 6, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Device"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Key"], [81, 11, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap"], [81, 8, 1, "_CPPv4N12UnorderedMap12UnorderedMapE8uint32_t", "UnorderedMap::UnorderedMap::capacity_hint"], [81, 9, 1, "_CPPv4I000E12UnorderedMap", "UnorderedMap::Value"], [81, 7, 1, "_CPPv4NK12UnorderedMap8capacityEv", "UnorderedMap::capacity"], [81, 11, 1, "_CPPv4N12UnorderedMap5clearEv", "UnorderedMap::clear"], [81, 7, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists"], [81, 8, 1, "_CPPv4NK12UnorderedMap6existsE3Key", "UnorderedMap::exists::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find"], [81, 8, 1, "_CPPv4NK12UnorderedMap4findE3Key", "UnorderedMap::find::key"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert"], [81, 7, 1, "_CPPv4NK12UnorderedMap6insertE3key", "UnorderedMap::insert"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::key"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::op"], [81, 8, 1, "_CPPv4NK12UnorderedMap6insertE3Key5Value6Insert", "UnorderedMap::insert::value"], [81, 7, 1, "_CPPv4NK12UnorderedMap12is_allocatedEv", "UnorderedMap::is_allocated"], [81, 7, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap6key_atE8uint32_t", "UnorderedMap::key_at::index"], [81, 11, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash"], [81, 8, 1, "_CPPv4N12UnorderedMap6rehashE8uint32_t", "UnorderedMap::rehash::requested_capacity"], [81, 11, 1, "_CPPv4NK12UnorderedMap4sizeEv", "UnorderedMap::size"], [81, 7, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8valid_atE8uint32_t", "UnorderedMap::valid_at::index"], [81, 7, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at"], [81, 8, 1, "_CPPv4NK12UnorderedMap8value_atE8uint32_t", "UnorderedMap::value_at::index"], [81, 6, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes9AtomicAddE", "UnorderedMapInsertOpTypes::AtomicAdd"], [81, 6, 1, "_CPPv4N25UnorderedMapInsertOpTypes4NoOpE", "UnorderedMapInsertOpTypes::NoOp"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValueTypeView"], [81, 9, 1, "_CPPv4I00E25UnorderedMapInsertOpTypes", "UnorderedMapInsertOpTypes::ValuesIdxType"], [81, 6, 1, "_CPPv424UnorderedMapInsertResult", "UnorderedMapInsertResult"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult8existingEv", "UnorderedMapInsertResult::existing"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult6failedEv", "UnorderedMapInsertResult::failed"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult5indexEv", "UnorderedMapInsertResult::index"], [81, 7, 1, "_CPPv4NK24UnorderedMapInsertResult7successEv", "UnorderedMapInsertResult::success"], [178, 11, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View"], [178, 11, 1, "_CPPv44View12pointer_typeRK12array_layout", "View"], [178, 11, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [178, 11, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [178, 11, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View"], [178, 11, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View"], [178, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [178, 11, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [178, 11, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [178, 11, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [178, 11, 1, "_CPPv44ViewRR4View", "View"], [178, 11, 1, "_CPPv44Viewv", "View"], [178, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [178, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::indices"], [178, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [178, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::indices"], [178, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [178, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::layout"], [178, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [178, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::layout"], [178, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [178, 8, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [178, 8, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [178, 8, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::prop"], [178, 8, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::prop"], [178, 8, 1, "_CPPv44View12pointer_typeDpRK7IntType", "View::ptr"], [178, 8, 1, "_CPPv44View12pointer_typeRK12array_layout", "View::ptr"], [178, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [178, 8, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [178, 8, 1, "_CPPv44ViewRR4View", "View::rhs"], [178, 8, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [178, 8, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [178, 11, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [178, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [178, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [178, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [178, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [178, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [178, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [178, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [178, 8, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [174, 10, 1, "_CPPv412array_layout", "array_layout"], [178, 11, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [178, 8, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [104, 11, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add"], [104, 9, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::T"], [104, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_addvPC1TK1T", "atomic_add::value"], [105, 11, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_add_fetch1TPC1TK1T", "atomic_add_fetch::value"], [104, 11, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and"], [104, 9, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::T"], [104, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_andvPC1TK1T", "atomic_and::value"], [105, 11, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_and_fetch1TPC1TK1T", "atomic_and_fetch::value"], [104, 11, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign"], [104, 9, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::T"], [104, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::ptr_to_value"], [104, 8, 1, "_CPPv4I0E13atomic_assignvPC1TK1T", "atomic_assign::value"], [99, 11, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange"], [99, 9, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::T"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::comparison_value"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::new_value"], [99, 8, 1, "_CPPv4I0E23atomic_compare_exchange1TPC1TK1TK1T", "atomic_compare_exchange::ptr_to_value"], [100, 11, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong"], [100, 9, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::T"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::comparison_value"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::new_value"], [100, 8, 1, "_CPPv4I0E30atomic_compare_exchange_strongbPC1TK1TK1T", "atomic_compare_exchange_strong::ptr_to_value"], [104, 11, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement"], [104, 9, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::T"], [104, 8, 1, "_CPPv4I0E16atomic_decrementvPC1T", "atomic_decrement::ptr_to_value"], [105, 11, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_div_fetch1TPC1TK1T", "atomic_div_fetch::value"], [101, 11, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange"], [101, 9, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::T"], [101, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::new_value"], [101, 8, 1, "_CPPv4I0E15atomic_exchange1TPC1TK1T", "atomic_exchange::ptr_to_value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_add1TPC1TK1T", "atomic_fetch_add::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_and1TPC1TK1T", "atomic_fetch_and::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_div1TPC1TK1T", "atomic_fetch_div::value"], [102, 11, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift"], [102, 9, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::T"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::ptr_to_value"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_lshift1TPC1TKj", "atomic_fetch_lshift::shift"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_max1TPC1TK1T", "atomic_fetch_max::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_min1TPC1TK1T", "atomic_fetch_min::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mod1TPC1TK1T", "atomic_fetch_mod::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_mul1TPC1TK1T", "atomic_fetch_mul::value"], [102, 11, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or"], [102, 9, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::T"], [102, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::ptr_to_value"], [102, 8, 1, "_CPPv4I0E15atomic_fetch_or1TPC1TK1T", "atomic_fetch_or::value"], [102, 11, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift"], [102, 9, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::T"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::ptr_to_value"], [102, 8, 1, "_CPPv4I0E19atomic_fetch_rshift1TPC1TKj", "atomic_fetch_rshift::shift"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_sub1TPC1TK1T", "atomic_fetch_sub::value"], [102, 11, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor"], [102, 9, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::T"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::ptr_to_value"], [102, 8, 1, "_CPPv4I0E16atomic_fetch_xor1TPC1TK1T", "atomic_fetch_xor::value"], [104, 11, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment"], [104, 9, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::T"], [104, 8, 1, "_CPPv4I0E16atomic_incrementvPC1T", "atomic_increment::ptr_to_value"], [103, 11, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load"], [103, 9, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::T"], [103, 8, 1, "_CPPv4I0E11atomic_load1TPC1T", "atomic_load::ptr_to_value"], [105, 11, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch"], [105, 9, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::T"], [105, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E19atomic_lshift_fetch1TPC1TKj", "atomic_lshift_fetch::shift"], [104, 11, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max"], [104, 9, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::T"], [104, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_maxvPC1TK1T", "atomic_max::value"], [105, 11, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_max_fetch1TPC1TK1T", "atomic_max_fetch::value"], [104, 11, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min"], [104, 9, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::T"], [104, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_minvPC1TK1T", "atomic_min::value"], [105, 11, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_min_fetch1TPC1TK1T", "atomic_min_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_mod_fetch1TPC1TK1T", "atomic_mod_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_mul_fetch1TPC1TK1T", "atomic_mul_fetch::value"], [104, 11, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or"], [104, 9, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::T"], [104, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::ptr_to_value"], [104, 8, 1, "_CPPv4I0E9atomic_orvPC1TK1T", "atomic_or::value"], [105, 11, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch"], [105, 9, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::T"], [105, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E15atomic_or_fetch1TPC1TK1T", "atomic_or_fetch::value"], [105, 11, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch"], [105, 9, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::T"], [105, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E19atomic_rshift_fetch1TPC1TKj", "atomic_rshift_fetch::shift"], [106, 11, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store"], [106, 9, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::T"], [106, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::new_value"], [106, 8, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::ptr_to_value"], [104, 11, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub"], [104, 9, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::T"], [104, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::ptr_to_value"], [104, 8, 1, "_CPPv4I0E10atomic_subvPC1TK1T", "atomic_sub::value"], [105, 11, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_sub_fetch1TPC1TK1T", "atomic_sub_fetch::value"], [105, 11, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch"], [105, 9, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::T"], [105, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::ptr_to_value"], [105, 8, 1, "_CPPv4I0E16atomic_xor_fetch1TPC1TK1T", "atomic_xor_fetch::value"], [4, 7, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::DataType"], [4, 9, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::Properties"], [4, 8, 1, "_CPPv4I0DpE5beginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "begin::view"], [4, 7, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::DataType"], [4, 9, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::Properties"], [4, 8, 1, "_CPPv4I0DpE6cbeginDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cbegin::view"], [4, 7, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::DataType"], [4, 9, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::Properties"], [4, 8, 1, "_CPPv4I0DpE4cendDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "cend::view"], [163, 6, 1, "_CPPv4I0E7complex", "complex"], [163, 9, 1, "_CPPv4I0E7complex", "complex::Scalar"], [163, 11, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [163, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [163, 7, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [163, 7, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [163, 7, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [163, 9, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [163, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [163, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [163, 9, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [163, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [163, 8, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [163, 8, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [163, 8, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [163, 8, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [163, 12, 1, "_CPPv4N7complex2imE", "complex::im"], [163, 7, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [163, 7, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [163, 7, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [163, 8, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [163, 11, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [163, 11, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [163, 7, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [163, 7, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [163, 9, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [163, 9, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [163, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [163, 8, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [163, 8, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [163, 8, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [163, 11, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [163, 7, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [163, 7, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [163, 9, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [163, 9, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [163, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [163, 8, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [163, 8, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [163, 8, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [163, 11, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [163, 7, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [163, 7, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [163, 9, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [163, 9, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [163, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [163, 8, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [163, 8, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [163, 8, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [163, 11, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [163, 7, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [163, 7, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [163, 9, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [163, 9, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [163, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [163, 8, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [163, 8, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [163, 8, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [163, 11, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [163, 7, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [163, 7, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [163, 9, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [163, 9, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [163, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [163, 8, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [163, 8, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [163, 8, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [163, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [163, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [163, 9, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [163, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [163, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [163, 8, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [163, 11, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [163, 7, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [163, 7, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [163, 9, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [163, 9, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [163, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [163, 8, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [163, 8, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [163, 8, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [163, 12, 1, "_CPPv4N7complex2reE", "complex::re"], [163, 7, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [163, 7, 1, "_CPPv4N7complex4realEv", "complex::real"], [163, 7, 1, "_CPPv4NK7complex4realEv", "complex::real"], [163, 8, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [163, 10, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [79, 11, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::dest"], [79, 8, 1, "_CPPv410contributeR4ViewI3DT1Dp2VPERKN6Kokkos12Experimental11ScatterViewI3DT22LY2ES2OP2CT2DPEE", "contribute::src"], [170, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror"], [170, 11, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror"], [170, 11, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror"], [170, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror"], [170, 11, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror"], [170, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::Space"], [170, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::Space"], [170, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewCtorArgs"], [170, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::ViewType"], [170, 9, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::ViewType"], [170, 9, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::ViewType"], [170, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::ViewType"], [170, 9, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::ViewType"], [170, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::arg_prop"], [170, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror::space"], [170, 8, 1, "_CPPv4I00E13create_mirror14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror::space"], [170, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror::src"], [170, 8, 1, "_CPPv4I0E13create_mirrorN8ViewType10HostMirrorERK8ViewType", "create_mirror::src"], [170, 8, 1, "_CPPv4I0DpE13create_mirrorDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror::v"], [170, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view"], [170, 11, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view"], [170, 11, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view"], [170, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view"], [170, 11, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view"], [170, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::Space"], [170, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::Space"], [170, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewCtorArgs"], [170, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [170, 9, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::ViewType"], [170, 9, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::ViewType"], [170, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::ViewType"], [170, 9, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::ViewType"], [170, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::arg_prop"], [170, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::space"], [170, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view::space"], [170, 8, 1, "_CPPv4I00E18create_mirror_view14ImplMirrorTypeDTN6Kokkos19WithoutInitializingEERK5SpaceRK8ViewType", "create_mirror_view::src"], [170, 8, 1, "_CPPv4I0DpE18create_mirror_viewDaRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view::src"], [170, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorEDTN6Kokkos19WithoutInitializingEERK8ViewType", "create_mirror_view::src"], [170, 8, 1, "_CPPv4I0E18create_mirror_viewN8ViewType10HostMirrorERK8ViewType", "create_mirror_view::src"], [170, 11, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy"], [170, 11, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy"], [170, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::Space"], [170, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewCtorArgs"], [170, 9, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::ViewType"], [170, 9, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::ViewType"], [170, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::arg_prop"], [170, 8, 1, "_CPPv4I00E27create_mirror_view_and_copy14ImplMirrorTypeRK5SpaceRK8ViewType", "create_mirror_view_and_copy::space"], [170, 8, 1, "_CPPv4I0DpE27create_mirror_view_and_copy14ImplMirrorTypeRKN4Impl12ViewCtorPropIDp12ViewCtorArgsEERK8ViewType", "create_mirror_view_and_copy::src"], [178, 11, 1, "_CPPv4NK4dataEv", "data"], [174, 12, 1, "_CPPv49dimension", "dimension"], [4, 7, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance"], [4, 9, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::IteratorType"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::first"], [4, 8, 1, "_CPPv4I0E8distanceN12IteratorType15difference_typeE12IteratorType12IteratorType", "distance::last"], [4, 7, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::DataType"], [4, 9, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::Properties"], [4, 8, 1, "_CPPv4I0DpE3endDaRKN6Kokkos4ViewI8DataTypeDp10PropertiesEE", "end::view"], [178, 11, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [178, 8, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [178, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [178, 11, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [178, 8, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [178, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [214, 11, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator"], [214, 8, 1, "_CPPv412frobrnicatorR10CoolerView", "frobrnicator::v"], [121, 7, 1, "_CPPv4NK4initER10value_type", "init"], [121, 8, 1, "_CPPv4NK4initER10value_type", "init::val"], [178, 11, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [178, 11, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [178, 8, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [174, 12, 1, "_CPPv423is_extent_constructible", "is_extent_constructible"], [4, 11, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap"], [4, 9, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::IteratorType"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::first"], [4, 8, 1, "_CPPv4I0E9iter_swapv12IteratorType12IteratorType", "iter_swap::last"], [121, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [121, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [121, 8, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [126, 11, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free"], [126, 9, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::MemorySpace"], [126, 8, 1, "_CPPv4I0E11kokkos_freevPv", "kokkos_free::ptr"], [127, 11, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc"], [127, 11, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc"], [127, 9, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::MemorySpace"], [127, 9, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::MemorySpace"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::label"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPv6size_t", "kokkos_malloc::size"], [127, 8, 1, "_CPPv4I0E13kokkos_mallocPvRK6string6size_t", "kokkos_malloc::size"], [128, 11, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc"], [128, 9, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::MemorySpace"], [128, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::new_size"], [128, 8, 1, "_CPPv4I0E14kokkos_reallocPvPv6size_t", "kokkos_realloc::ptr"], [178, 11, 1, "_CPPv4NK5labelEv", "label"], [178, 11, 1, "_CPPv4NK6layoutEv", "layout"], [178, 11, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [178, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [178, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [178, 11, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [178, 8, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [174, 11, 1, "_CPPv4aSRK12LayoutStride", "operator="], [174, 11, 1, "_CPPv4aSRR12LayoutStride", "operator="], [178, 11, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [214, 11, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator=="], [178, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [178, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [214, 9, 1, "_CPPv4I0Eeqb10CoolerView7ViewSrc", "operator==::ViewSrc"], [174, 7, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions"], [174, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::dimen"], [174, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::order"], [174, 8, 1, "_CPPv416order_dimensionsKiPCK10iTypeOrderPCK10iTypeDimen", "order_dimensions::rank"], [159, 11, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space"], [159, 11, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space"], [159, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::Args"], [159, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::ExecSpace"], [159, 9, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::ExecSpace"], [159, 9, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::T"], [159, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::args"], [159, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::space"], [159, 8, 1, "_CPPv4I0DpE15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceDp4Args", "partition_space::space"], [159, 8, 1, "_CPPv4I00E15partition_spaceNSt6vectorI9ExecSpaceEERK9ExecSpaceRKNSt6vectorI1TEE", "partition_space::weigths"], [178, 11, 1, "_CPPv44rankv", "rank"], [178, 11, 1, "_CPPv412rank_dynamicv", "rank_dynamic"], [121, 7, 1, "_CPPv4NK9referenceEv", "reference"], [178, 11, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [178, 11, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [178, 8, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [178, 8, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [178, 11, 1, "_CPPv4NK4sizeEv", "size"], [178, 11, 1, "_CPPv4NK4spanEv", "span"], [178, 11, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [178, 11, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [178, 11, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [174, 12, 1, "_CPPv46stride", "stride"], [178, 8, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [178, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [178, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [178, 8, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [178, 11, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [178, 11, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [178, 11, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [178, 11, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [178, 11, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [178, 11, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [178, 11, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [178, 11, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [177, 11, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview"], [177, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::Args"], [177, 9, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::ViewType"], [177, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::args"], [177, 8, 1, "_CPPv4I0DpE7subview11IMPL_DETAILRK8ViewTypeDp4Args", "subview::v"], [178, 11, 1, "_CPPv4NK9use_countEv", "use_count"], [82, 6, 1, "_CPPv4I00E6vector", "vector"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Arg1Type"], [82, 9, 1, "_CPPv4I00E6vector", "vector::Scalar"], [82, 11, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::n"], [82, 8, 1, "_CPPv4N6vector6assignE6size_tRK6Scalar", "vector::assign::val"], [82, 11, 1, "_CPPv4N6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector4backEv", "vector::back"], [82, 11, 1, "_CPPv4NK6vector5beginEv", "vector::begin"], [82, 11, 1, "_CPPv4N6vector5clearEv", "vector::clear"], [82, 10, 1, "_CPPv4N6vector14const_iteratorE", "vector::const_iterator"], [82, 10, 1, "_CPPv4N6vector13const_pointerE", "vector::const_pointer"], [82, 10, 1, "_CPPv4N6vector15const_referenceE", "vector::const_reference"], [82, 11, 1, "_CPPv4NK6vector4dataEv", "vector::data"], [82, 11, 1, "_CPPv4N6vector14device_to_hostEv", "vector::device_to_host"], [82, 11, 1, "_CPPv4NK6vector5emptyEv", "vector::empty"], [82, 11, 1, "_CPPv4NK6vector3endEv", "vector::end"], [82, 11, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find"], [82, 8, 1, "_CPPv4NK6vector4findE6Scalar", "vector::find::val"], [82, 11, 1, "_CPPv4N6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector5frontEv", "vector::front"], [82, 11, 1, "_CPPv4NK6vector14host_to_deviceEv", "vector::host_to_device"], [82, 11, 1, "_CPPv4NK6vector12is_allocatedEv", "vector::is_allocated"], [82, 11, 1, "_CPPv4N6vector9is_sortedEv", "vector::is_sorted"], [82, 10, 1, "_CPPv4N6vector8iteratorE", "vector::iterator"], [82, 11, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::comp_val"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::start"], [82, 8, 1, "_CPPv4NK6vector11lower_boundERK6size_tRK6size_tRK6Scalar", "vector::lower_bound::theEnd"], [82, 11, 1, "_CPPv4NK6vector8max_sizeEv", "vector::max_size"], [82, 11, 1, "_CPPv4N6vector9on_deviceEv", "vector::on_device"], [82, 11, 1, "_CPPv4N6vector7on_hostEv", "vector::on_host"], [82, 7, 1, "_CPPv4NK6vectorclEi", "vector::operator()"], [82, 8, 1, "_CPPv4NK6vectorclEi", "vector::operator()::i"], [82, 7, 1, "_CPPv4NK6vectorixEi", "vector::operator[]"], [82, 8, 1, "_CPPv4NK6vectorixEi", "vector::operator[]::i"], [82, 10, 1, "_CPPv4N6vector7pointerE", "vector::pointer"], [82, 11, 1, "_CPPv4N6vector8pop_backEv", "vector::pop_back"], [82, 11, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back"], [82, 8, 1, "_CPPv4N6vector9push_backE6Scalar", "vector::push_back::val"], [82, 10, 1, "_CPPv4N6vector9referenceE", "vector::reference"], [82, 11, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve"], [82, 8, 1, "_CPPv4N6vector7reserveE6size_t", "vector::reserve::n"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize"], [82, 11, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_t", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::n"], [82, 8, 1, "_CPPv4N6vector6resizeE6size_tRK6Scalar", "vector::resize::val"], [82, 11, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation"], [82, 8, 1, "_CPPv4N6vector18set_overallocationEf", "vector::set_overallocation::extra"], [82, 11, 1, "_CPPv4NK6vector4sizeEv", "vector::size"], [82, 11, 1, "_CPPv4NK6vector4spanEv", "vector::span"], [82, 10, 1, "_CPPv4N6vector10value_typeE", "vector::value_type"], [82, 11, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector"], [82, 11, 1, "_CPPv4N6vector6vectorEv", "vector::vector"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::n"], [82, 8, 1, "_CPPv4N6vector6vectorEi6Scalar", "vector::vector::val"], [121, 7, 1, "_CPPv4NK4viewEv", "view"], [179, 11, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc"], [179, 9, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::Args"], [179, 8, 1, "_CPPv4IDpE10view_alloc12impl_definedDpRK4Args", "view_alloc::args"], [179, 11, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap"], [179, 9, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::Args"], [179, 8, 1, "_CPPv4IDpE9view_wrap12impl_definedDpRK4Args", "view_wrap::args"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:class", "7": "cppkokkos:kokkosinlinefunction", "8": "cppkokkos:functionParam", "9": "cppkokkos:templateParam", "10": "cppkokkos:type", "11": "cppkokkos:function", "12": "cppkokkos:member"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "class", "C++ class"], "7": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "8": ["cppkokkos", "functionParam", "C++ function parameter"], "9": ["cppkokkos", "templateParam", "C++ template parameter"], "10": ["cppkokkos", "type", "C++ type"], "11": ["cppkokkos", "function", "C++ function"], "12": ["cppkokkos", "member", "C++ member"]}, "titleterms": {"api": [0, 72, 73, 83, 84, 181, 186, 217], "algorithm": [0, 3, 72, 206, 231], "random": [1, 202], "number": [1, 223], "rand": 1, "gener": [1, 32, 88, 129, 187, 220], "synopsi": [1, 2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 135, 140, 141, 142, 149, 150, 154, 156, 158, 160, 168], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 77, 79, 81, 84, 121, 130, 131, 132, 133, 134, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 168, 169, 171, 174, 175, 176, 177, 178, 182, 183, 184, 190, 191, 193, 197, 198, 200, 214, 222, 228, 231], "sort": [2, 10], "nest": [2, 84, 85, 192], "polici": [2, 85, 90, 94, 148, 150, 192, 199], "team": [2, 90, 186, 192, 199], "thread": [2, 192, 194, 197], "level": [2, 85], "addit": [2, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "inform": [2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 187], "sampl": 2, "output": 2, "std": [3, 194], "iter": [4, 81], "kokko": [4, 86, 87, 94, 129, 135, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 186, 187, 194, 196, 197, 202, 203, 204, 206, 207, 213, 216, 217, 219, 220, 221, 224, 225, 231, 233], "experiment": [4, 129, 135, 165, 182, 183, 184], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "note": [4, 87, 132, 136, 137, 138], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 134, 143, 144, 145, 146, 148, 150, 171, 178, 182, 183, 184, 229], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 121, 133, 134, 143, 144, 145, 146, 159, 169, 171, 213, 217, 218, 227], "distanc": 4, "return": [4, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71], "iter_swap": 4, "minimum": 5, "maximum": 5, "modifi": [6, 7], "sequenc": [6, 7, 231], "non": [7, 74, 129, 135, 194, 214, 229], "numer": [8, 89, 139], "partit": 9, "adjacent_differ": 11, "descript": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 81, 82, 99, 100, 101, 102, 103, 104, 105, 106, 126, 127, 128, 132, 149, 151, 152, 153, 154, 155, 156, 157, 158, 163, 169, 170, 172, 173, 174, 175, 176, 177, 179, 214], "adjacent_find": 12, "all_of": 13, "any_of": 14, "copi": [15, 129, 143, 171, 202], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 202], "count_if": 20, "equal": 21, "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 227], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 107, 121, 189, 190, 191, 198], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 202, 206], "core": [72, 83, 206], "bitset": 74, "class": [74, 121, 140, 141, 142, 148, 150, 160, 168, 178, 206], "interfac": [74, 78, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 130, 131, 133, 134, 143, 144, 145, 146, 148, 153, 155, 157, 159, 169, 171, 178, 182, 183, 184, 214], "constbitset": 74, "member": [74, 121, 124, 129, 135, 140, 141, 142, 148, 150, 160, 168, 178, 206, 214, 229], "function": [74, 121, 125, 129, 135, 138, 140, 141, 142, 147, 160, 178, 182, 184, 185, 196, 198, 202, 206, 209, 214, 229, 232], "dualview": 75, "usag": [75, 76, 80, 82, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 132, 140, 141, 142, 145, 146, 148, 149, 150, 152, 154, 156, 159, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 225, 228, 231], "dynrankview": 76, "assign": [76, 124, 160, 178, 184, 200], "rule": [76, 178, 202], "dynamicview": 77, "offsetview": 78, "construct": [78, 129, 202], "scatterview": [79, 185, 223], "staticcrsgraph": 80, "unorderedmap": 81, "insert": 81, "us": [81, 129, 143, 187, 198, 202, 203, 222, 224, 225, 227, 231], "default": [81, 129, 202], "unorderedmapinsertoptyp": 81, "noop": 81, "atomicadd": 81, "vector": [82, 192, 194, 200], "detect": [84, 129], "idiom": [84, 202], "an": [84, 87, 147, 198, 200, 218], "express": 84, "typedef": [84, 121, 129, 135, 140, 141, 142, 160, 178, 182, 183], "execut": [85, 88, 90, 129, 148, 150, 187, 192, 197, 198, 199, 202, 228], "top": [85, 231], "common": [85, 138, 148, 150], "argument": [85, 148, 150, 193], "all": [85, 129, 148, 150, 162], "initi": [86, 134, 193, 202, 225], "final": [86, 133, 193], "scopeguard": [86, 132], "concept": 87, "introduct": [87, 195], "approach": 87, "overview": 87, "The": [87, 196, 200, 207, 227, 232], "executionspac": 87, "implement": [87, 225], "deviceexecutionspac": 87, "some": [87, 171], "de": 87, "facto": 87, "design": 87, "thought": 87, "memoryspac": 87, "executionpolici": [87, 147], "teammemb": 87, "functor": [87, 94, 198, 231], "A": [87, 201, 219], "deleg": 87, "macro": [88, 186, 206], "version": [88, 213], "set": 88, "space": [88, 92, 93, 129, 135, 187, 197, 198, 199, 202], "backend": [88, 208, 221], "option": [88, 150, 208], "c": [88, 125, 186, 194, 201, 207, 217, 230], "standard": [88, 202, 207], "third": [88, 208], "parti": [88, 208], "librari": [88, 194, 200, 207, 208], "architectur": [88, 208], "parallel": [90, 94, 192, 198, 225], "dispatch": [90, 198], "pattern": [90, 94, 199, 228, 231], "tag": [90, 198, 230], "calcul": 90, "stl": 91, "compat": [91, 186, 217], "issu": [91, 203, 209, 217, 218], "access": [92, 178, 182, 183, 202], "task": [94, 231], "Will": 94, "work": [94, 196, 207, 228, 231, 232], "my": [94, 196, 232], "problem": [94, 196, 202, 225, 232], "basic": [94, 192, 200], "predecessor": 94, "schedul": 94, "wait": 94, "aggreg": 94, "prioriti": 94, "trait": [95, 139, 185, 199, 202], "is_array_layout": 95, "is_execution_polici": 95, "is_memory_spac": 95, "is_memory_trait": 95, "is_reduc": 95, "is_spac": 95, "util": 96, "view": [97, 171, 178, 180, 194, 201, 202], "relat": [97, 207], "atom": [98, 185, 202], "atomic_compare_exchang": 99, "atomic_compare_exchange_strong": 100, "atomic_exchang": 101, "atomic_fetch_": 102, "op": [102, 104, 105], "atomic_load": 103, "atomic_": [104, 105], "_fetch": 105, "atomic_stor": 106, "built": [107, 121, 189, 190], "band": 108, "bor": 109, "land": 110, "lor": 111, "max": [112, 182], "maxloc": 113, "min": [114, 182], "minloc": 115, "minmax": 116, "minmaxloc": 117, "minmaxlocscalar": 118, "minmaxscalar": 119, "prod": 120, "reducerconcept": 121, "public": [121, 124, 140, 141, 142, 148, 150, 160, 168, 178, 206], "constructor": [121, 129, 135, 140, 141, 142, 148, 150, 160, 168, 178, 182, 183], "In": [121, 189, 190], "reduct": [122, 183, 188, 198, 200], "scalar": [122, 190], "type": [122, 180, 190, 200, 201, 202, 206], "sum": [123, 223], "vallocscalar": 124, "variabl": 124, "oper": [124, 182, 183, 185, 200, 224, 225, 228, 230], "style": 125, "memori": [125, 135, 185, 192, 194, 197, 199, 202], "manag": [125, 194, 202, 221], "kokkos_fre": 126, "kokkos_malloc": 127, "kokkos_realloc": 128, "cuda": [129, 187, 194, 203, 226], "hip": [129, 209], "sycl": 129, "hpx": 129, "openmp": [129, 194], "openmptarget": 129, "serial": [129, 225, 228], "executionspaceconcept": 129, "alias": [129, 206], "base": 129, "configur": [129, 187, 203], "defaultexecutionspac": 129, "defaulthostexecutionspac": 129, "veri": 129, "simplest": 129, "Not": 129, "Being": 129, "more": 129, "facil": [129, 135], "initargu": 130, "see": [130, 131, 132, 134, 137, 138], "also": [130, 131, 132, 134, 137, 138], "initializationset": 131, "semant": [133, 134, 143, 144, 145, 146, 159, 171], "cudaspac": 135, "cudahostpinnedspac": 135, "cudauvmspac": 135, "hipspac": 135, "hiphostpinnedspac": 135, "hipmanagedspac": 135, "sycldeviceusmspac": 135, "syclhostusmspac": 135, "syclsharedusmspac": 135, "hostspac": 135, "sharedspac": [135, 227], "sharedhostpinnedspac": 135, "memoryspaceconcept": 135, "bit": 136, "manipul": 136, "mathemat": [137, 209], "constant": [137, 209], "math": 138, "parallelfortag": 140, "parallelreducetag": 141, "parallelscantag": 142, "fenc": 143, "time": 143, "kernel": [143, 192, 228], "asynchron": 143, "deep": [143, 202], "parallel_for": 144, "parallel_reduc": 145, "parallel_scan": 146, "what": [147, 202, 232], "mdrangepolici": [148, 225], "specif": 148, "nestedpolici": 149, "list": [149, 187], "perteam": 149, "perthread": 149, "teamthreadrang": [149, 154], "teamthreadmdrang": [149, 153], "teamvectorrang": [149, 156], "teamvectormdrang": [149, 155], "threadvectorrang": [149, 158], "threadvectormdrang": [149, 157], "rangepolici": [150, 225], "initarg": 150, "teamhandleconcept": 151, "teampolici": 152, "partition_spac": 159, "pair": 160, "convers": [160, 202], "abort": 161, "complex": 163, "device_id": 164, "num_thread": 166, "printf": 167, "timer": 168, "subview": [169, 177, 201], "create_mirror": 170, "_view": 170, "deep_copi": 171, "thing": 171, "you": [171, 202], "can": [171, 202], "cannot": 171, "do": [171, 202, 232], "how": [171, 196, 201, 202, 232], "get": [171, 202], "layout": [171, 178, 199, 202], "incompat": 171, "layoutleft": 172, "layoutright": 173, "layoutstrid": 174, "realloc": 175, "resiz": [176, 202], "enum": 178, "data": [178, 194, 202], "dimens": [178, 201, 202], "stride": [178, 202], "other": [178, 186, 202, 206], "nonmemb": 178, "view_alloc": 179, "like": 180, "simd": [181, 182, 200], "templat": [182, 183, 184, 215, 229, 230], "width": [182, 183], "load": [182, 184], "store": [182, 184], "method": [182, 183, 184], "valu": [182, 183, 223], "arithmet": 182, "comparison": [182, 183], "cmath": 182, "global": [182, 183], "simd_mask": 183, "boolean": 183, "where_express": 184, "where": 184, "gather": [184, 217], "scatter": 184, "10": 185, "1": [185, 187, 189, 192, 193, 194, 195, 197, 198, 199, 201, 202, 228], "write": 185, "conflict": 185, "Their": 185, "resolut": 185, "With": 185, "2": [185, 187, 190, 192, 193, 194, 197, 198, 199, 201, 202, 228], "free": [185, 206], "3": [185, 187, 191, 192, 193, 194, 197, 198, 199, 201, 202, 206, 213, 231], "4": [185, 187, 192, 193, 194, 198, 199, 202, 213], "12": [186, 194], "backward": 186, "futur": [186, 197], "user": 186, "defin": 186, "abi": 186, "deprec": [186, 206], "header": [186, 193, 206], "right": 186, "reserv": 186, "miscellan": 186, "proof": 186, "compil": [187, 213, 219, 221], "cmake": [187, 203, 208], "build": [187, 203, 213], "system": [187, 213], "instal": [187, 203], "packag": [187, 203], "tree": 187, "generate_makefil": 187, "bash": 187, "spack": [187, 203], "develop": [187, 203, 217], "keyword": [187, 208], "trilino": 187, "branch": 187, "gnu": 187, "makefil": [187, 203], "5": [187, 193, 198, 199, 202], "6": [187, 199, 202], "restrict": [187, 192], "9": [188, 189, 190, 191], "custom": [188, 190, 191, 220], "8": 192, "hierarch": 192, "motiv": [192, 197], "creat": [192, 202], "instanc": [192, 197], "scratch": 192, "pad": 192, "loop": [192, 198], "barrier": 192, "singl": [192, 226], "executor": 192, "0": 193, "includ": 193, "command": 193, "line": 193, "struct": 193, "code": [193, 194, 196, 200, 227, 228, 232], "13": 194, "interoper": 194, "legaci": 194, "structur": [194, 224, 229], "raw": [194, 202, 203], "alloc": [194, 224], "through": [194, 231], "extern": 194, "fundament": 194, "own": 194, "call": 194, "14": 196, "virtual": [196, 232], "v": [196, 232], "tabl": [196, 232], "pointer": [196, 202, 232], "eri": [196, 232], "annoi": [196, 232], "gpu": [196, 232], "Then": [196, 232], "why": [196, 202, 232], "doesn": [196, 232], "t": [196, 202, 232], "fix": [196, 232], "thi": [196, 202, 217, 232], "complic": [196, 232], "question": [196, 207, 232], "follow": [196, 232], "up": [196, 232], "machin": 197, "model": [197, 199, 207, 217], "abstract": 197, "figur": 197, "conceptu": 197, "high": 197, "perform": [197, 200, 207, 221, 228], "comput": [197, 221, 223, 228], "node": [197, 223], "program": [197, 199, 207, 212, 217, 224], "safeti": 197, "7": [198, 202, 206], "specifi": [198, 202], "bodi": 198, "lambda": 198, "should": 198, "i": [198, 202, 232], "join": 198, "init": 198, "arrai": [198, 202, 224, 225, 229], "result": 198, "scan": 198, "name": [198, 203], "rang": 199, "15": 200, "background": 200, "idea": 200, "deal": [200, 230], "remaind": 200, "condit": [200, 231], "ternari": 200, "11": 201, "slice": 201, "take": 201, "deduct": 201, "degener": 201, "obtain": 201, "multidimension": [202, 224], "need": [202, 232], "mai": 202, "make": 202, "probabl": 202, "don": 202, "want": 202, "s": 202, "realli": [202, 232], "const": 202, "entri": 202, "index": 202, "refer": [202, 225], "lifetim": 202, "depend": 202, "explicitli": 202, "placement": 202, "hostmirror": 202, "unmanag": 202, "special": 202, "philosophi": 203, "known": [203, 209], "knownissu": 203, "crai": 203, "fortran": [203, 224], "inlin": 203, "vs": 203, "uvm": 203, "cite": 204, "contribut": 205, "document": [205, 215], "x": [206, 213], "namespac": 206, "updat": 206, "portabl": [207, 232], "websit": 207, "content": 207, "devic": [208, 228, 232], "enabl": 208, "tpl": 208, "amd": 208, "licens": 210, "guid": 212, "coolerview": 214, "plan": [216, 217], "test": [216, 220, 221], "project": 217, "stabil": 217, "activ": 217, "support": [217, 219], "platform": [217, 221], "capabl": 217, "iso": 217, "releas": [217, 220], "priorit": 217, "coordin": 217, "process": [217, 220], "feedback": 218, "report": 218, "attach": 219, "identif": 219, "b": 219, "file": 219, "promot": 219, "txt": 219, "chang": 220, "pull": 220, "request": 220, "nightli": 220, "integr": 220, "intern": 220, "prefer": 220, "commun": 220, "workflow": 221, "compon": 221, "softwar": 221, "git": 221, "repositori": 221, "batch": 221, "queue": 221, "account": 221, "script": 221, "unit": 221, "case": [222, 224, 225, 231, 232], "averag": 223, "element": 223, "adjac": 223, "full": 223, "interop": 224, "multi": 225, "dimension": 225, "formul": 225, "mpi": 226, "halo": 226, "exchang": 226, "send": 226, "messag": 226, "awar": 226, "separ": 226, "out": 226, "identifi": 226, "subset": 226, "indic": 226, "extract": 226, "from": 227, "kokkos_enable_cuda_uvm": 227, "altern": 227, "transit": 227, "overlap": 228, "host": 228, "actor": [228, 231], "subject": [228, 231], "assumpt": [228, 231], "constraint": [228, 231], "precondit": [228, 231], "while": 228, "cabana": 229, "soa": 229, "aosoa": 229, "pre": 230, "17": 230, "post": 231, "recurs": 231, "fibonacci": 231, "flow": 231, "n": 231, "divid": 231, "graph": 231, "down": 231, "bf": 231, "But": 232, "side": 232, "doe": 232, "nvcc": 232, "solv": 232, "window": 233, "h": 233, "video": 234, "lectur": 234, "slide": 234}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})