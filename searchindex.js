Search.setIndex({"docnames": ["API/algorithms-index", "API/algorithms/Random-Number", "API/algorithms/Sort", "API/algorithms/std-algorithms-index", "API/algorithms/std-algorithms/Iterators", "API/algorithms/std-algorithms/StdMinMaxElement", "API/algorithms/std-algorithms/StdModSeq", "API/algorithms/std-algorithms/StdNonModSeq", "API/algorithms/std-algorithms/StdNumeric", "API/algorithms/std-algorithms/StdPartioningOps", "API/algorithms/std-algorithms/StdSorting", "API/algorithms/std-algorithms/all/StdAdjacentDifference", "API/algorithms/std-algorithms/all/StdAdjacentFind", "API/algorithms/std-algorithms/all/StdAllOf", "API/algorithms/std-algorithms/all/StdAnyOf", "API/algorithms/std-algorithms/all/StdCopy", "API/algorithms/std-algorithms/all/StdCopyBackward", "API/algorithms/std-algorithms/all/StdCopyIf", "API/algorithms/std-algorithms/all/StdCopy_n", "API/algorithms/std-algorithms/all/StdCount", "API/algorithms/std-algorithms/all/StdCountIf", "API/algorithms/std-algorithms/all/StdEqual", "API/algorithms/std-algorithms/all/StdExclusiveScan", "API/algorithms/std-algorithms/all/StdFill", "API/algorithms/std-algorithms/all/StdFill_n", "API/algorithms/std-algorithms/all/StdFind", "API/algorithms/std-algorithms/all/StdFindEnd", "API/algorithms/std-algorithms/all/StdFindFirstOf", "API/algorithms/std-algorithms/all/StdFindIf", "API/algorithms/std-algorithms/all/StdFindIfNot", "API/algorithms/std-algorithms/all/StdForEach", "API/algorithms/std-algorithms/all/StdForEachN", "API/algorithms/std-algorithms/all/StdGenerate", "API/algorithms/std-algorithms/all/StdGenerate_n", "API/algorithms/std-algorithms/all/StdInclusiveScan", "API/algorithms/std-algorithms/all/StdIsPartitioned", "API/algorithms/std-algorithms/all/StdIsSorted", "API/algorithms/std-algorithms/all/StdIsSortedUntil", "API/algorithms/std-algorithms/all/StdLexicographicalCompare", "API/algorithms/std-algorithms/all/StdMaxElement", "API/algorithms/std-algorithms/all/StdMinElement", "API/algorithms/std-algorithms/all/StdMinMaxElement", "API/algorithms/std-algorithms/all/StdMismatch", "API/algorithms/std-algorithms/all/StdMove", "API/algorithms/std-algorithms/all/StdMoveBackward", "API/algorithms/std-algorithms/all/StdNoneOf", "API/algorithms/std-algorithms/all/StdPartitionCopy", "API/algorithms/std-algorithms/all/StdPartitionPoint", "API/algorithms/std-algorithms/all/StdReduce", "API/algorithms/std-algorithms/all/StdRemove", "API/algorithms/std-algorithms/all/StdRemoveCopy", "API/algorithms/std-algorithms/all/StdRemoveCopyIf", "API/algorithms/std-algorithms/all/StdRemoveIf", "API/algorithms/std-algorithms/all/StdReplace", "API/algorithms/std-algorithms/all/StdReplaceCopy", "API/algorithms/std-algorithms/all/StdReplaceCopyIf", "API/algorithms/std-algorithms/all/StdReplaceIf", "API/algorithms/std-algorithms/all/StdReverse", "API/algorithms/std-algorithms/all/StdReverseCopy", "API/algorithms/std-algorithms/all/StdRotate", "API/algorithms/std-algorithms/all/StdRotateCopy", "API/algorithms/std-algorithms/all/StdSearch", "API/algorithms/std-algorithms/all/StdSearchN", "API/algorithms/std-algorithms/all/StdShiftLeft", "API/algorithms/std-algorithms/all/StdShiftRight", "API/algorithms/std-algorithms/all/StdSwapRanges", "API/algorithms/std-algorithms/all/StdTransform", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan", "API/algorithms/std-algorithms/all/StdTransformReduce", "API/algorithms/std-algorithms/all/StdUnique", "API/algorithms/std-algorithms/all/StdUniqueCopy", "API/alphabetical", "API/containers-index", "API/containers/Bitset", "API/containers/DualView", "API/containers/DynRankView", "API/containers/DynamicView", "API/containers/Offset-View", "API/containers/ScatterView", "API/containers/StaticCrsGraph", "API/containers/Unordered-Map", "API/containers/vector", "API/core-index", "API/core/Detection-Idiom", "API/core/Execution-Policies", "API/core/Initialize-and-Finalize", "API/core/KokkosConcepts", "API/core/Macros", "API/core/Numerics", "API/core/ParallelDispatch", "API/core/STL-Compatibility", "API/core/SpaceAccessibility", "API/core/Spaces", "API/core/Task-Parallelism", "API/core/Traits", "API/core/Utilities", "API/core/View", "API/core/atomics", "API/core/atomics/atomic_compare_exchange", "API/core/atomics/atomic_compare_exchange_strong", "API/core/atomics/atomic_exchange", "API/core/atomics/atomic_fetch_op", "API/core/atomics/atomic_load", "API/core/atomics/atomic_op", "API/core/atomics/atomic_op_fetch", "API/core/atomics/atomic_store", "API/core/builtin_reducers", "API/core/builtinreducers/BAnd", "API/core/builtinreducers/BOr", "API/core/builtinreducers/LAnd", "API/core/builtinreducers/LOr", "API/core/builtinreducers/Max", "API/core/builtinreducers/MaxLoc", "API/core/builtinreducers/Min", "API/core/builtinreducers/MinLoc", "API/core/builtinreducers/MinMax", "API/core/builtinreducers/MinMaxLoc", "API/core/builtinreducers/MinMaxLocScalar", "API/core/builtinreducers/MinMaxScalar", "API/core/builtinreducers/Prod", "API/core/builtinreducers/ReducerConcept", "API/core/builtinreducers/ReductionScalarTypes", "API/core/builtinreducers/Sum", "API/core/builtinreducers/ValLocScalar", "API/core/c_style_memory_management", "API/core/c_style_memory_management/free", "API/core/c_style_memory_management/malloc", "API/core/c_style_memory_management/realloc", "API/core/execution_spaces", "API/core/initialize_finalize/InitArguments", "API/core/initialize_finalize/InitializationSettings", "API/core/initialize_finalize/ScopeGuard", "API/core/initialize_finalize/finalize", "API/core/initialize_finalize/initialize", "API/core/memory_spaces", "API/core/numerics/bit-manipulation", "API/core/numerics/mathematical-constants", "API/core/numerics/mathematical-functions", "API/core/numerics/numeric-traits", "API/core/parallel-dispatch/ParallelForTag", "API/core/parallel-dispatch/ParallelReduceTag", "API/core/parallel-dispatch/ParallelScanTag", "API/core/parallel-dispatch/fence", "API/core/parallel-dispatch/parallel_for", "API/core/parallel-dispatch/parallel_reduce", "API/core/parallel-dispatch/parallel_scan", "API/core/policies/ExecutionPolicyConcept", "API/core/policies/MDRangePolicy", "API/core/policies/NestedPolicies", "API/core/policies/RangePolicy", "API/core/policies/TeamHandleConcept", "API/core/policies/TeamPolicy", "API/core/policies/TeamThreadMDRange", "API/core/policies/TeamThreadRange", "API/core/policies/TeamVectorMDRange", "API/core/policies/TeamVectorRange", "API/core/policies/ThreadVectorMDRange", "API/core/policies/ThreadVectorRange", "API/core/spaces/partition_space", "API/core/stl-compat/pair", "API/core/utilities/abort", "API/core/utilities/all", "API/core/utilities/complex", "API/core/utilities/experimental", "API/core/utilities/timer", "API/core/view/Subview_type", "API/core/view/create_mirror", "API/core/view/deep_copy", "API/core/view/layoutLeft", "API/core/view/layoutRight", "API/core/view/layoutStride", "API/core/view/realloc", "API/core/view/resize", "API/core/view/subview", "API/core/view/view", "API/core/view/view_alloc", "API/core/view/view_like", "API/simd-index", "API/simd/simd", "API/simd/simd_mask", "API/simd/where_expression", "DeprecationPage", "ProgrammingGuide/Atomic-Operations", "ProgrammingGuide/Compatibility", "ProgrammingGuide/Compiling", "ProgrammingGuide/Custom-Reductions", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types", "ProgrammingGuide/Custom-Reductions-Custom-Reducers", "ProgrammingGuide/HierarchicalParallelism", "ProgrammingGuide/Initialization", "ProgrammingGuide/Interoperability", "ProgrammingGuide/Introduction", "ProgrammingGuide/Kokkos-and-Virtual-Functions", "ProgrammingGuide/Machine-Model", "ProgrammingGuide/ParallelDispatch", "ProgrammingGuide/ProgrammingModel", "ProgrammingGuide/SIMD", "ProgrammingGuide/Subviews", "ProgrammingGuide/View", "building", "citation", "contributing", "index", "keywords", "known-issues", "license", "mydefs", "programmingguide", "requirements", "testing-and-issue-tracking", "testing-and-issue-tracking/Requirements-Issues-and-Feedback", "testing-and-issue-tracking/Testing-Process-Details", "testing-and-issue-tracking/Testing-Processes", "testing-and-issue-tracking/Testing-Workflow-Components", "usecases", "usecases/Average-To-Nodes", "usecases/Kokkos-Fortran-Interoperability", "usecases/MDRangePolicy", "usecases/MPI-Halo-Exchange", "usecases/Moving_from_EnableUVM_to_SharedSpace", "usecases/OverlappingHostAndDeviceWork", "usecases/SoA-and-AoSoA-with-Cabana", "usecases/TaggedOperators", "usecases/Tasking", "usecases/VirtualFunctions", "usecases/WindowsHeader", "videolectures"], "filenames": ["API/algorithms-index.rst", "API/algorithms/Random-Number.md", "API/algorithms/Sort.md", "API/algorithms/std-algorithms-index.rst", "API/algorithms/std-algorithms/Iterators.md", "API/algorithms/std-algorithms/StdMinMaxElement.rst", "API/algorithms/std-algorithms/StdModSeq.rst", "API/algorithms/std-algorithms/StdNonModSeq.rst", "API/algorithms/std-algorithms/StdNumeric.rst", "API/algorithms/std-algorithms/StdPartioningOps.rst", "API/algorithms/std-algorithms/StdSorting.rst", "API/algorithms/std-algorithms/all/StdAdjacentDifference.md", "API/algorithms/std-algorithms/all/StdAdjacentFind.md", "API/algorithms/std-algorithms/all/StdAllOf.md", "API/algorithms/std-algorithms/all/StdAnyOf.md", "API/algorithms/std-algorithms/all/StdCopy.md", "API/algorithms/std-algorithms/all/StdCopyBackward.md", "API/algorithms/std-algorithms/all/StdCopyIf.md", "API/algorithms/std-algorithms/all/StdCopy_n.md", "API/algorithms/std-algorithms/all/StdCount.md", "API/algorithms/std-algorithms/all/StdCountIf.md", "API/algorithms/std-algorithms/all/StdEqual.md", "API/algorithms/std-algorithms/all/StdExclusiveScan.md", "API/algorithms/std-algorithms/all/StdFill.md", "API/algorithms/std-algorithms/all/StdFill_n.md", "API/algorithms/std-algorithms/all/StdFind.md", "API/algorithms/std-algorithms/all/StdFindEnd.md", "API/algorithms/std-algorithms/all/StdFindFirstOf.md", "API/algorithms/std-algorithms/all/StdFindIf.md", "API/algorithms/std-algorithms/all/StdFindIfNot.md", "API/algorithms/std-algorithms/all/StdForEach.md", "API/algorithms/std-algorithms/all/StdForEachN.md", "API/algorithms/std-algorithms/all/StdGenerate.md", "API/algorithms/std-algorithms/all/StdGenerate_n.md", "API/algorithms/std-algorithms/all/StdInclusiveScan.md", "API/algorithms/std-algorithms/all/StdIsPartitioned.md", "API/algorithms/std-algorithms/all/StdIsSorted.md", "API/algorithms/std-algorithms/all/StdIsSortedUntil.md", "API/algorithms/std-algorithms/all/StdLexicographicalCompare.md", "API/algorithms/std-algorithms/all/StdMaxElement.md", "API/algorithms/std-algorithms/all/StdMinElement.md", "API/algorithms/std-algorithms/all/StdMinMaxElement.md", "API/algorithms/std-algorithms/all/StdMismatch.md", "API/algorithms/std-algorithms/all/StdMove.md", "API/algorithms/std-algorithms/all/StdMoveBackward.md", "API/algorithms/std-algorithms/all/StdNoneOf.md", "API/algorithms/std-algorithms/all/StdPartitionCopy.md", "API/algorithms/std-algorithms/all/StdPartitionPoint.md", "API/algorithms/std-algorithms/all/StdReduce.md", "API/algorithms/std-algorithms/all/StdRemove.md", "API/algorithms/std-algorithms/all/StdRemoveCopy.md", "API/algorithms/std-algorithms/all/StdRemoveCopyIf.md", "API/algorithms/std-algorithms/all/StdRemoveIf.md", "API/algorithms/std-algorithms/all/StdReplace.md", "API/algorithms/std-algorithms/all/StdReplaceCopy.md", "API/algorithms/std-algorithms/all/StdReplaceCopyIf.md", "API/algorithms/std-algorithms/all/StdReplaceIf.md", "API/algorithms/std-algorithms/all/StdReverse.md", "API/algorithms/std-algorithms/all/StdReverseCopy.md", "API/algorithms/std-algorithms/all/StdRotate.md", "API/algorithms/std-algorithms/all/StdRotateCopy.md", "API/algorithms/std-algorithms/all/StdSearch.md", "API/algorithms/std-algorithms/all/StdSearchN.md", "API/algorithms/std-algorithms/all/StdShiftLeft.md", "API/algorithms/std-algorithms/all/StdShiftRight.md", "API/algorithms/std-algorithms/all/StdSwapRanges.md", "API/algorithms/std-algorithms/all/StdTransform.md", "API/algorithms/std-algorithms/all/StdTransformExclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformInclusiveScan.md", "API/algorithms/std-algorithms/all/StdTransformReduce.md", "API/algorithms/std-algorithms/all/StdUnique.md", "API/algorithms/std-algorithms/all/StdUniqueCopy.md", "API/alphabetical.md", "API/containers-index.rst", "API/containers/Bitset.rst", "API/containers/DualView.md", "API/containers/DynRankView.md", "API/containers/DynamicView.md", "API/containers/Offset-View.md", "API/containers/ScatterView.md", "API/containers/StaticCrsGraph.rst", "API/containers/Unordered-Map.md", "API/containers/vector.md", "API/core-index.rst", "API/core/Detection-Idiom.rst", "API/core/Execution-Policies.rst", "API/core/Initialize-and-Finalize.rst", "API/core/KokkosConcepts.rst", "API/core/Macros.rst", "API/core/Numerics.rst", "API/core/ParallelDispatch.rst", "API/core/STL-Compatibility.rst", "API/core/SpaceAccessibility.rst", "API/core/Spaces.rst", "API/core/Task-Parallelism.rst", "API/core/Traits.rst", "API/core/Utilities.rst", "API/core/View.rst", "API/core/atomics.rst", "API/core/atomics/atomic_compare_exchange.md", "API/core/atomics/atomic_compare_exchange_strong.md", "API/core/atomics/atomic_exchange.md", "API/core/atomics/atomic_fetch_op.md", "API/core/atomics/atomic_load.md", "API/core/atomics/atomic_op.md", "API/core/atomics/atomic_op_fetch.md", "API/core/atomics/atomic_store.rst", "API/core/builtin_reducers.rst", "API/core/builtinreducers/BAnd.rst", "API/core/builtinreducers/BOr.rst", "API/core/builtinreducers/LAnd.rst", "API/core/builtinreducers/LOr.rst", "API/core/builtinreducers/Max.rst", "API/core/builtinreducers/MaxLoc.rst", "API/core/builtinreducers/Min.rst", "API/core/builtinreducers/MinLoc.rst", "API/core/builtinreducers/MinMax.rst", "API/core/builtinreducers/MinMaxLoc.rst", "API/core/builtinreducers/MinMaxLocScalar.rst", "API/core/builtinreducers/MinMaxScalar.rst", "API/core/builtinreducers/Prod.rst", "API/core/builtinreducers/ReducerConcept.rst", "API/core/builtinreducers/ReductionScalarTypes.rst", "API/core/builtinreducers/Sum.rst", "API/core/builtinreducers/ValLocScalar.rst", "API/core/c_style_memory_management.rst", "API/core/c_style_memory_management/free.md", "API/core/c_style_memory_management/malloc.md", "API/core/c_style_memory_management/realloc.md", "API/core/execution_spaces.rst", "API/core/initialize_finalize/InitArguments.md", "API/core/initialize_finalize/InitializationSettings.rst", "API/core/initialize_finalize/ScopeGuard.md", "API/core/initialize_finalize/finalize.rst", "API/core/initialize_finalize/initialize.rst", "API/core/memory_spaces.rst", "API/core/numerics/bit-manipulation.rst", "API/core/numerics/mathematical-constants.rst", "API/core/numerics/mathematical-functions.rst", "API/core/numerics/numeric-traits.rst", "API/core/parallel-dispatch/ParallelForTag.rst", "API/core/parallel-dispatch/ParallelReduceTag.rst", "API/core/parallel-dispatch/ParallelScanTag.rst", "API/core/parallel-dispatch/fence.rst", "API/core/parallel-dispatch/parallel_for.rst", "API/core/parallel-dispatch/parallel_reduce.rst", "API/core/parallel-dispatch/parallel_scan.rst", "API/core/policies/ExecutionPolicyConcept.rst", "API/core/policies/MDRangePolicy.rst", "API/core/policies/NestedPolicies.rst", "API/core/policies/RangePolicy.rst", "API/core/policies/TeamHandleConcept.md", "API/core/policies/TeamPolicy.md", "API/core/policies/TeamThreadMDRange.md", "API/core/policies/TeamThreadRange.rst", "API/core/policies/TeamVectorMDRange.md", "API/core/policies/TeamVectorRange.rst", "API/core/policies/ThreadVectorMDRange.md", "API/core/policies/ThreadVectorRange.rst", "API/core/spaces/partition_space.md", "API/core/stl-compat/pair.md", "API/core/utilities/abort.rst", "API/core/utilities/all.md", "API/core/utilities/complex.rst", "API/core/utilities/experimental.md", "API/core/utilities/timer.rst", "API/core/view/Subview_type.md", "API/core/view/create_mirror.md", "API/core/view/deep_copy.md", "API/core/view/layoutLeft.md", "API/core/view/layoutRight.md", "API/core/view/layoutStride.md", "API/core/view/realloc.md", "API/core/view/resize.md", "API/core/view/subview.md", "API/core/view/view.rst", "API/core/view/view_alloc.md", "API/core/view/view_like.rst", "API/simd-index.rst", "API/simd/simd.md", "API/simd/simd_mask.md", "API/simd/where_expression.md", "DeprecationPage.md", "ProgrammingGuide/Atomic-Operations.md", "ProgrammingGuide/Compatibility.md", "ProgrammingGuide/Compiling.md", "ProgrammingGuide/Custom-Reductions.rst", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers.md", "ProgrammingGuide/Custom-Reductions-Built-In-Reducers-with-Custom-Scalar-Types.md", "ProgrammingGuide/Custom-Reductions-Custom-Reducers.md", "ProgrammingGuide/HierarchicalParallelism.md", "ProgrammingGuide/Initialization.md", "ProgrammingGuide/Interoperability.md", "ProgrammingGuide/Introduction.md", "ProgrammingGuide/Kokkos-and-Virtual-Functions.md", "ProgrammingGuide/Machine-Model.md", "ProgrammingGuide/ParallelDispatch.md", "ProgrammingGuide/ProgrammingModel.md", "ProgrammingGuide/SIMD.md", "ProgrammingGuide/Subviews.md", "ProgrammingGuide/View.md", "building.md", "citation.rst", "contributing.rst", "index.rst", "keywords.rst", "known-issues.rst", "license.rst", "mydefs.rst", "programmingguide.rst", "requirements.rst", "testing-and-issue-tracking.rst", "testing-and-issue-tracking/Requirements-Issues-and-Feedback.md", "testing-and-issue-tracking/Testing-Process-Details.md", "testing-and-issue-tracking/Testing-Processes.md", "testing-and-issue-tracking/Testing-Workflow-Components.md", "usecases.rst", "usecases/Average-To-Nodes.md", "usecases/Kokkos-Fortran-Interoperability.md", "usecases/MDRangePolicy.md", "usecases/MPI-Halo-Exchange.md", "usecases/Moving_from_EnableUVM_to_SharedSpace.md", "usecases/OverlappingHostAndDeviceWork.md", "usecases/SoA-and-AoSoA-with-Cabana.md", "usecases/TaggedOperators.md", "usecases/Tasking.md", "usecases/VirtualFunctions.md", "usecases/WindowsHeader.md", "videolectures.rst"], "titles": ["API: Algorithms", "Random-Number", "Sort", "Std Algorithms", "Iterators", "Minimum/maximum", "Modifying Sequence", "Non-modifying Sequence", "Numeric", "Partitioning", "Sorting", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_difference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">adjacent_find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">all_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">any_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">copy_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">count_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_end</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_first_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">find_if_not</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">for_each_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">generate_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_partitioned</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">is_sorted_until</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">lexicographical_compare</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">min_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">minmax_element</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mismatch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">move_backward</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">none_of</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partition_point</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">remove_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_copy_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">replace_if</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reverse_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rotate_copy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">search_n</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_left</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">shift_right</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">swap_ranges</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_exclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_inclusive_scan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">transform_reduce</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unique_copy</span></code>", "API in Alphabetical Order", "API: Containers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Bitset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DualView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynRankView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DynamicView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OffsetView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ScatterView</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">StaticCrsGraph</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnorderedMap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vector</span></code>", "API: Core", "Detection Idiom", "Execution Policies", "Initialize and Finalize", "Kokkos Concepts", "Macros", "Numerics", "Parallel Execution/Dispatch", "STL Compatibility Issues", "Space Accessibility", "Spaces", "Task-Parallelism", "Traits", "Utilities", "View and related", "Atomics", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_compare_exchange_strong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_exchange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_fetch_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_load</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_[op]_fetch</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atomic_store</span></code>", "Built-in Reducers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LAnd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LOr</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Max</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Min</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLoc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxLocScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinMaxScalar</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Prod</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducerConcept</span></code>", "Reduction Scalar Types", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ValLocScalar</span></code>", "C-style memory management", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_free</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_malloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kokkos_realloc</span></code>", "Execution Spaces", "InitArguments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">InitializationSettings</span></code>", "ScopeGuard", "<code class=\"docutils literal notranslate\"><span class=\"pre\">finalize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">initialize</span></code>", "Memory Spaces", "Bit manipulation", "Mathematical constants", "Common math functions", "Numeric traits", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelForTag()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelReduceTag()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParallelScanTag()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fence()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_for()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_reduce()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">parallel_scan()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ExecutionPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MDRangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NestedPolicies</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">RangePolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamHandleConcept</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamPolicy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamThreadRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TeamVectorRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorMDRange</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ThreadVectorRange</span></code>", "Kokkos::partition_space()", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::pair</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::abort</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::ALL</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::complex</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Experimental</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Timer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos::Subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">create_mirror[_view]</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deep_copy()</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutLeft</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutRight</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LayoutStride</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">realloc</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">resize</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">subview</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">View</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">view_alloc()</span></code>", "View-like Types", "API: SIMD", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Experimental::simd_mask</span></code>", "Interface", "Deprecation", "10. Atomic Operations", "12 Backwards &amp; Future Compatibility", "4. Compiling", "9. Custom Reductions", "9.1 Built-In-Reducers", "9.2 Built-In Reducers with Custom Scalar Types", "9.3 Custom Reducers", "8. Hierarchical Parallelism", "5. Initialization", "13. Interoperability and Legacy Codes", "1. Introduction", "14. Kokkos and Virtual Functions", "2. Machine Model", "7. Parallel dispatch", "3: Programming Model", "15. SIMD Types", "11: Subviews", "6: View: Multidimensional array", "Build, Install and Use", "Citing Kokkos", "Contributing", "Kokkos: The Programming Model", "CMake Keywords", "Known issues", "License", "&lt;no title&gt;", "Programming Guide", "Requirements", "Testing and Issue Tracking", "Requirements, Issues and Feedback", "Attachments", "Kokkos Testing Processes and Change Process", "Kokkos Testing Workflow Components", "Use Cases and Examples", "ScatterView averaging elements to nodes", "Fortran Interop Use Case", "MDRangePolicy Use Case", "MPI Halo Exchange", "Moving code from requiring <code class=\"docutils literal notranslate\"><span class=\"pre\">Kokkos_ENABLE_CUDA_UVM</span></code> to using <code class=\"docutils literal notranslate\"><span class=\"pre\">SharedSpace</span></code>", "Overlapping Host and Device work", "Array of Structures and Structure of Arrays with Cabana", "Tagged Operators", "Kokkos Tasking Use Case", "Virtual Functions", "Kokkos and <code class=\"docutils literal notranslate\"><span class=\"pre\">Windows.h</span></code>", "Video lectures and slides"], "terms": {"random": [0, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 76, 131, 132, 134, 135, 175, 197], "number": [0, 4, 18, 19, 20, 24, 31, 33, 63, 64, 72, 74, 76, 77, 81, 82, 87, 89, 121, 127, 129, 131, 132, 134, 136, 137, 151, 159, 163, 165, 175, 179, 180, 183, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 213, 214, 219, 220, 223, 225], "gener": [0, 6, 33, 72, 83, 85, 87, 90, 94, 134, 135, 148, 150, 152, 179, 180, 183, 184, 187, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 210, 213, 215], "sort": [0, 3, 36, 37, 82, 182], "nest": [0, 87, 92, 94, 147, 149, 153, 154, 155, 156, 157, 158, 184, 187, 194, 195, 196, 197, 219, 224, 226, 228], "polici": [0, 72, 83, 87, 140, 141, 142, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 182, 185, 189, 191, 192, 196, 219, 222, 224], "team": [0, 72, 85, 87, 94, 140, 141, 142, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 158, 187, 192, 194, 195, 196, 203, 212, 215, 225, 226], "thread": [0, 1, 72, 74, 79, 81, 85, 87, 88, 92, 94, 129, 131, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 182, 183, 185, 186, 187, 191, 193, 196, 197, 200, 201, 204, 205, 215, 222, 225, 228], "level": [0, 87, 88, 94, 149, 151, 152, 184, 185, 190, 193, 196, 200, 201, 202, 204, 215], "std": [0, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 87, 89, 91, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 129, 131, 132, 138, 139, 143, 144, 145, 146, 148, 154, 156, 158, 159, 160, 163, 166, 167, 168, 174, 175, 176, 179, 180, 181, 182, 198, 199, 200, 223, 226], "templat": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 84, 85, 87, 89, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 129, 132, 135, 136, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 184, 185, 187, 188, 189, 190, 192, 196, 198, 200, 218, 219, 221], "class": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 81, 82, 83, 84, 86, 87, 91, 92, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 118, 119, 122, 124, 126, 127, 128, 129, 131, 132, 134, 135, 139, 144, 145, 146, 154, 156, 158, 159, 163, 166, 167, 168, 172, 173, 174, 176, 177, 179, 180, 181, 182, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 220, 223, 224, 226], "struct": [1, 2, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 48, 51, 52, 56, 67, 69, 72, 77, 81, 84, 94, 118, 119, 121, 124, 129, 130, 132, 134, 135, 140, 141, 142, 144, 145, 153, 155, 157, 160, 166, 169, 170, 171, 182, 184, 187, 188, 189, 190, 192, 196, 200, 218, 223, 225, 226], "rand": [1, 72], "gen_data_typ": 1, "kokkos_inline_funct": [1, 2, 4, 11, 21, 22, 28, 30, 32, 35, 36, 39, 40, 41, 42, 46, 51, 52, 56, 75, 77, 79, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 152, 163, 169, 170, 171, 188, 189, 190, 192, 196, 200, 220], "static": [1, 74, 75, 76, 85, 87, 148, 150, 152, 171, 175, 179, 180, 188, 190, 193, 200, 201, 228], "gen_func_typ": 1, "max": [1, 72, 74, 102, 105, 107, 113, 116, 117, 118, 119, 121, 122, 124, 139, 145, 183, 187, 190, 196, 198, 227], "return": [1, 2, 13, 14, 19, 20, 29, 38, 42, 45, 62, 72, 74, 75, 76, 77, 78, 79, 81, 82, 84, 94, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 131, 133, 134, 135, 139, 144, 150, 151, 152, 154, 156, 158, 159, 160, 163, 165, 166, 167, 168, 174, 175, 179, 180, 181, 183, 184, 188, 189, 190, 192, 195, 198, 200, 217, 218, 219, 220, 221, 222, 225], "type_valu": 1, "draw": [1, 72], "gen": [1, 179, 180], "gen_return_valu": 1, "const": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 129, 131, 132, 134, 135, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 183, 187, 188, 189, 190, 192, 194, 196, 198, 199, 218, 219, 220, 222, 224, 226], "rang": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 94, 144, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 174, 190, 195, 196, 199, 200, 214, 215, 219], "start": [1, 18, 24, 33, 50, 51, 60, 66, 69, 71, 72, 74, 82, 94, 129, 135, 136, 144, 145, 146, 148, 149, 150, 152, 165, 179, 184, 187, 190, 191, 192, 196, 200, 201, 215, 218, 220, 222, 225], "end": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 80, 82, 86, 133, 134, 136, 145, 146, 148, 149, 150, 152, 154, 156, 158, 185, 191, 200, 218, 219, 225, 227], "function": [1, 2, 4, 30, 72, 75, 78, 80, 82, 83, 85, 86, 87, 88, 89, 90, 94, 126, 127, 128, 133, 134, 136, 137, 139, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 165, 166, 167, 182, 184, 185, 188, 189, 190, 191, 192, 193, 197, 198, 199, 205, 206, 209, 216, 217, 218, 219, 220, 222, 224], "special": [1, 39, 40, 41, 72, 75, 76, 84, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 167, 175, 179, 180, 186, 188, 190, 196, 198, 199, 207, 218, 223], "all": [1, 2, 13, 25, 30, 35, 47, 49, 52, 53, 54, 55, 56, 66, 70, 72, 74, 75, 76, 77, 78, 86, 87, 92, 94, 96, 121, 132, 133, 135, 136, 137, 143, 144, 147, 151, 166, 168, 171, 174, 175, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 210, 213, 214, 215, 219, 221, 225, 226], "list": [1, 2, 72, 82, 97, 138, 139, 148, 174, 176, 177, 183, 191, 193, 195, 200, 201, 207, 212, 213, 214, 215, 219, 220, 225], "here": [1, 39, 40, 41, 72, 84, 87, 129, 133, 134, 135, 147, 183, 190, 191, 194, 195, 196, 198, 200, 215, 220, 222, 226], "ar": [1, 2, 4, 19, 21, 36, 37, 38, 39, 40, 41, 42, 46, 50, 53, 59, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88, 90, 94, 97, 107, 116, 117, 121, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 153, 155, 157, 164, 167, 168, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 210, 212, 213, 214, 215, 217, 218, 220, 222, 224, 225, 226, 227], "part": [1, 72, 83, 87, 97, 121, 129, 135, 151, 163, 164, 183, 184, 185, 192, 193, 197, 198, 200, 213, 215, 224], "kokko": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 88, 91, 92, 93, 95, 96, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 157, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 203, 205, 207, 209, 210, 211, 212, 216, 217, 220, 221, 222, 223, 224, 226, 228], "namespac": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 84, 87, 136, 137, 138, 139, 159, 162, 164, 179, 180, 181, 184, 188, 189, 192, 199, 200], "char": [1, 2, 76, 77, 86, 87, 121, 129, 132, 133, 134, 135, 144, 145, 146, 161, 168, 171, 175, 179, 180, 181, 188, 189, 191, 200, 213, 223, 226], "short": [1, 196], "127": 1, "0xff": 1, "256": [1, 198, 225], "32767": 1, "0xffff": 1, "65536": 1, "32768": 1, "int": [1, 2, 4, 21, 25, 28, 30, 35, 42, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 121, 129, 130, 131, 132, 133, 134, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 166, 168, 171, 174, 175, 179, 180, 181, 183, 187, 188, 189, 190, 191, 192, 194, 196, 198, 200, 217, 219, 220, 221, 222, 223, 224, 225, 226], "max_rand": 1, "uint": 1, "max_urand": 1, "long": [1, 81, 87, 121, 138, 185, 193, 195, 196, 200], "max_rand64": 1, "ulong": 1, "max_urand64": 1, "float": [1, 75, 82, 137, 138, 139, 160, 169, 170, 171, 195, 196, 198, 220, 223], "1": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 104, 110, 120, 121, 130, 131, 132, 134, 136, 144, 145, 146, 149, 151, 152, 154, 156, 158, 159, 160, 163, 168, 171, 174, 175, 179, 180, 181, 186, 188, 189, 198, 201, 207, 209, 210, 213, 215, 217, 218, 219, 220, 225, 228], "0f": [1, 160], "doubl": [1, 4, 23, 24, 39, 40, 41, 53, 56, 76, 77, 78, 79, 80, 86, 94, 129, 132, 133, 134, 138, 143, 145, 153, 154, 155, 156, 157, 158, 162, 163, 165, 166, 174, 175, 179, 180, 181, 183, 187, 190, 192, 196, 198, 199, 200, 217, 218, 219, 220, 221, 222], "0": [1, 2, 11, 18, 24, 33, 35, 56, 72, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 94, 108, 109, 111, 121, 123, 129, 131, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 168, 169, 170, 171, 174, 175, 179, 180, 181, 183, 185, 187, 188, 189, 190, 192, 196, 197, 198, 200, 201, 205, 207, 210, 213, 217, 218, 219, 220, 221, 222, 224, 225, 226], "complex": [1, 72, 82, 87, 88, 96, 121, 185, 186, 187, 190, 195, 198, 204, 210], "where": [1, 2, 4, 11, 12, 17, 22, 28, 30, 32, 35, 36, 37, 40, 42, 46, 51, 52, 55, 56, 67, 69, 76, 77, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 144, 153, 157, 159, 168, 175, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 215, 217, 218, 219, 222, 223, 224, 225, 226], "maximum": [1, 3, 72, 77, 78, 82, 102, 104, 105, 107, 112, 113, 116, 117, 118, 119, 129, 152, 187, 190], "valu": [1, 2, 4, 11, 17, 19, 22, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 40, 46, 48, 49, 50, 51, 52, 55, 56, 59, 60, 62, 67, 69, 72, 75, 76, 77, 78, 79, 81, 82, 84, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 129, 131, 134, 135, 136, 139, 144, 145, 146, 150, 151, 152, 154, 156, 158, 160, 167, 168, 174, 175, 181, 183, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 220, 226], "xorshift": 1, "given": [1, 4, 66, 75, 78, 79, 81, 84, 85, 87, 92, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 128, 129, 136, 148, 150, 151, 152, 164, 166, 168, 171, 185, 190, 191, 192, 196, 197, 198, 199, 200, 201, 214, 220, 224, 225], "follow": [1, 37, 39, 40, 41, 75, 76, 77, 78, 79, 81, 86, 87, 88, 90, 91, 92, 97, 121, 129, 135, 138, 151, 168, 175, 179, 180, 183, 184, 185, 187, 188, 189, 190, 191, 192, 196, 198, 199, 200, 201, 205, 206, 207, 210, 213, 215, 217], "enum": [1, 129, 135, 200], "0xffffffffu": 1, "0xffffffffffffffffull": 1, "static_cast": [1, 35], "2": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 82, 84, 88, 121, 130, 134, 146, 151, 153, 155, 157, 159, 160, 168, 171, 172, 173, 174, 175, 179, 186, 187, 189, 198, 205, 207, 209, 210, 213, 215, 225, 226, 228], "int64_t": [1, 78, 85, 146, 148, 150, 152, 179, 180], "file": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 79, 84, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 184, 185, 191, 205, 214, 219, 227], "kokkos_random": [1, 2, 182], "provid": [1, 72, 75, 76, 77, 78, 80, 84, 87, 89, 91, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 132, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 150, 151, 152, 160, 167, 168, 169, 170, 171, 175, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 207, 212, 213, 215, 218, 219, 223, 225, 226], "structur": [1, 4, 72, 76, 94, 97, 131, 175, 191, 195, 197, 199, 200, 216, 217, 219, 220, 224, 225, 228], "necessari": [1, 75, 76, 87, 91, 94, 144, 175, 185, 186, 190, 192, 200, 201, 215, 217, 220, 226], "pseudorandom": 1, "These": [1, 2, 76, 87, 88, 135, 150, 151, 175, 179, 181, 184, 187, 190, 193, 195, 197, 199, 200, 210, 213, 215, 218], "base": [1, 21, 36, 40, 76, 77, 81, 82, 84, 87, 94, 131, 179, 180, 184, 185, 190, 193, 194, 196, 198, 199, 200, 205, 212, 215, 219, 220, 223, 224, 225, 226, 228], "vigna": 1, "sebastiano": 1, "2014": [1, 195, 202], "an": [1, 2, 4, 11, 18, 22, 24, 25, 28, 29, 33, 34, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 92, 94, 107, 115, 121, 123, 127, 129, 133, 134, 135, 136, 138, 143, 144, 145, 146, 148, 150, 151, 152, 155, 160, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 204, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227], "experiment": [1, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 87, 88, 96, 127, 128, 129, 135, 136, 137, 138, 139, 159, 178, 181, 184, 190, 191, 198, 205, 215, 217], "explor": [1, 87, 193], "marsaglia": 1, "s": [1, 75, 77, 79, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 129, 131, 145, 151, 160, 162, 166, 168, 174, 175, 179, 185, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 207, 215, 220, 222, 223, 224, 226], "scrambl": 1, "see": [1, 75, 76, 86, 87, 88, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 135, 139, 144, 145, 147, 150, 151, 152, 166, 175, 185, 187, 189, 190, 191, 194, 195, 196, 199, 200, 201, 203, 205, 210, 215, 226], "http": [1, 138, 202, 204, 213], "arxiv": 1, "org": [1, 138, 185, 202], "ab": [1, 138, 179], "1402": 1, "6246": 1, "The": [1, 2, 4, 11, 12, 13, 14, 16, 19, 20, 21, 22, 26, 27, 30, 38, 39, 40, 41, 42, 45, 48, 61, 62, 63, 64, 69, 72, 75, 76, 77, 78, 80, 81, 82, 84, 88, 89, 90, 91, 94, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 131, 133, 134, 135, 137, 138, 144, 145, 146, 147, 148, 151, 152, 159, 163, 167, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 205, 212, 213, 214, 215, 217, 218, 219, 220, 223, 224, 225, 227], "themselv": [1, 94, 195, 196, 197], "have": [1, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 55, 57, 58, 59, 60, 63, 65, 69, 70, 71, 75, 78, 82, 87, 88, 91, 94, 121, 129, 131, 132, 136, 139, 143, 144, 151, 153, 154, 155, 156, 167, 171, 172, 173, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206, 210, 213, 215, 217, 220, 223, 224, 225, 226], "two": [1, 2, 11, 12, 22, 34, 36, 39, 40, 41, 42, 46, 48, 69, 75, 77, 78, 81, 87, 94, 121, 129, 131, 134, 135, 136, 150, 159, 168, 183, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 212, 214, 215, 217, 218, 219, 220, 226, 227], "compon": [1, 163, 171, 195, 211], "state": [1, 72, 75, 81, 87, 133, 190, 196, 198, 200], "pool": [1, 72, 190, 200], "actual": [1, 77, 129, 135, 147, 151, 152, 183, 190, 192, 195, 196, 197, 200, 201, 213, 215], "A": [1, 2, 22, 34, 41, 46, 48, 69, 72, 73, 75, 76, 77, 78, 79, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 140, 141, 142, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 162, 166, 167, 168, 169, 170, 171, 174, 175, 183, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 207, 214, 215, 218, 222, 224, 225, 226], "manag": [1, 72, 73, 75, 76, 79, 81, 83, 86, 87, 88, 97, 127, 128, 175, 185, 195, 201, 204, 212, 220, 228], "so": [1, 2, 82, 87, 91, 94, 129, 183, 184, 185, 190, 191, 192, 194, 195, 196, 198, 199, 200, 203, 210, 212, 213, 215, 218, 222, 226], "each": [1, 2, 4, 11, 23, 30, 31, 32, 62, 67, 68, 69, 72, 75, 76, 77, 78, 82, 85, 87, 94, 138, 144, 145, 152, 153, 155, 157, 159, 160, 169, 170, 171, 175, 183, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 213, 215, 217, 219, 220, 223, 225, 226], "activ": [1, 23, 24, 53, 56, 88, 185, 190, 196, 201, 205, 215], "abl": [1, 76, 94, 129, 135, 175, 176, 183, 190, 193, 195, 198, 200, 220], "grab": 1, "its": [1, 4, 72, 75, 76, 77, 81, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 132, 151, 159, 160, 172, 175, 183, 184, 185, 187, 190, 191, 192, 193, 195, 196, 199, 200, 201, 212, 214, 215, 217, 224], "own": [1, 75, 159, 183, 199, 200, 201, 213, 220], "thi": [1, 2, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 75, 76, 77, 78, 79, 81, 82, 87, 91, 94, 121, 129, 132, 133, 134, 135, 138, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 167, 168, 169, 170, 171, 172, 173, 175, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227], "allow": [1, 75, 76, 78, 79, 81, 82, 86, 87, 94, 129, 131, 134, 135, 145, 147, 151, 152, 167, 169, 170, 171, 175, 176, 183, 184, 185, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 221, 222, 224, 226], "which": [1, 2, 17, 20, 28, 29, 37, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 83, 84, 86, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 159, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 212, 215, 218, 220, 221, 222, 223, 224, 226], "independ": [1, 72, 99, 135, 152, 196, 200, 215, 228], "between": [1, 11, 37, 54, 65, 69, 72, 76, 81, 82, 92, 97, 151, 159, 167, 168, 175, 184, 185, 190, 193, 195, 198, 200, 206, 213, 219, 220, 221, 222], "note": [1, 37, 76, 77, 78, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 143, 144, 150, 151, 152, 159, 168, 175, 183, 185, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 215, 218, 222, 225, 226], "contrast": [1, 149, 154, 156, 158, 190, 200], "curand": 1, "none": [1, 4, 23, 25, 32, 53, 56, 57, 126, 140, 141, 142, 169, 170, 180, 185, 193, 195, 215, 218, 226], "collect": [1, 190, 193, 196, 197, 199, 215, 220, 223], "i": [1, 2, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 34, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 113, 115, 117, 118, 121, 124, 126, 127, 128, 129, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 158, 159, 167, 168, 171, 172, 173, 175, 179, 180, 181, 183, 185, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 210, 215, 219, 220, 222, 224], "e": [1, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 75, 76, 79, 87, 88, 92, 126, 127, 128, 129, 131, 133, 135, 137, 139, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 167, 168, 172, 173, 175, 179, 180, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 210, 213, 215, 221, 226], "can": [1, 2, 4, 11, 21, 22, 25, 28, 30, 39, 40, 41, 42, 69, 72, 75, 76, 77, 81, 84, 85, 87, 88, 94, 121, 129, 130, 131, 134, 135, 139, 144, 145, 148, 149, 150, 151, 152, 157, 158, 171, 172, 173, 175, 176, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 204, 212, 213, 215, 217, 219, 220, 221, 222, 224, 226], "call": [1, 2, 11, 17, 21, 22, 28, 30, 35, 36, 40, 42, 46, 48, 51, 52, 55, 56, 67, 69, 74, 75, 77, 79, 85, 86, 87, 90, 94, 104, 127, 128, 129, 131, 132, 133, 134, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 172, 173, 175, 179, 180, 181, 182, 183, 185, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 218, 220, 222, 226], "insid": [1, 2, 81, 85, 87, 94, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 158, 164, 184, 185, 190, 192, 195, 196, 200, 224, 225, 226, 227], "condit": [1, 12, 13, 14, 19, 20, 25, 30, 35, 45, 53, 57, 60, 76, 175, 183, 190, 192, 195, 196, 207, 214, 222], "devic": [1, 72, 74, 75, 76, 77, 80, 81, 82, 87, 88, 92, 129, 131, 135, 138, 160, 167, 168, 175, 182, 185, 191, 192, 193, 194, 196, 200, 201, 215, 216, 220, 221, 223], "public": [1, 75, 81, 82, 129, 132, 135, 145, 149, 154, 156, 158, 163, 164, 181, 182, 184, 189, 194, 196, 203, 220, 224, 226], "typedef": [1, 75, 81, 82, 94, 149, 150, 151, 154, 156, 158, 163, 165, 184, 187, 188, 189, 190, 192, 196, 200, 218, 222], "device_typ": [1, 75, 76, 77, 81, 87, 129, 135, 167, 175, 200], "generator_typ": 1, "rannum_typ": 1, "seed": [1, 72], "void": [1, 2, 4, 23, 30, 32, 53, 56, 57, 74, 75, 77, 79, 80, 81, 82, 84, 85, 87, 94, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 135, 137, 138, 143, 144, 145, 146, 148, 150, 151, 152, 159, 161, 163, 165, 168, 172, 173, 175, 179, 181, 183, 184, 189, 190, 192, 194, 196, 198, 200, 218, 220, 221, 222, 224, 225, 226], "init": [1, 22, 34, 67, 72, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 189, 220], "num_stat": 1, "get_stat": 1, "free_stat": 1, "intial": [1, 132], "us": [1, 2, 4, 11, 15, 16, 18, 21, 22, 23, 24, 25, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 130, 131, 133, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 167, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 202, 203, 204, 205, 207, 210, 212, 213, 215, 217, 220, 222, 223, 224, 226, 227], "establish": [1, 215, 219], "pool_siz": 1, "random_xorshift64": [1, 72], "serial": [1, 72, 85, 87, 88, 93, 148, 150, 152, 185, 191, 193, 196, 198, 200, 205, 210, 213, 215], "initi": [1, 2, 22, 34, 48, 67, 69, 72, 75, 76, 82, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 130, 131, 132, 133, 144, 145, 146, 160, 163, 168, 171, 175, 176, 179, 180, 181, 182, 185, 186, 188, 189, 190, 192, 194, 195, 196, 209, 213, 215, 221, 222, 226], "make": [1, 75, 76, 87, 94, 136, 151, 175, 182, 183, 184, 185, 187, 190, 194, 195, 196, 198, 201, 213, 218, 220, 221, 224, 226], "process": [1, 89, 135, 185, 191, 197, 198, 199, 201, 204, 211, 215], "platform": [1, 83, 179, 180, 204, 212, 214, 223], "determinist": [1, 48, 69, 197], "request": [1, 75, 77, 129, 140, 141, 142, 145, 151, 152, 190, 191, 195, 197, 203, 212, 213, 215], "lock": [1, 192, 195, 197, 198, 200], "guarante": [1, 75, 76, 79, 92, 94, 129, 135, 144, 145, 146, 164, 175, 184, 185, 192, 195, 196, 197, 198, 221, 225], "ha": [1, 75, 76, 78, 79, 81, 87, 88, 94, 99, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 134, 135, 138, 144, 145, 146, 147, 167, 175, 179, 180, 183, 185, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 215, 217, 218, 224, 225, 226], "privat": [1, 77, 79, 87, 151, 163, 184, 186, 189, 190, 196, 220], "get": [1, 75, 87, 94, 97, 133, 151, 152, 171, 183, 190, 191, 192, 194, 195, 198, 199, 201, 203, 213, 223, 225, 226], "cuda": [1, 72, 75, 85, 87, 88, 93, 135, 148, 150, 152, 159, 168, 190, 191, 193, 196, 197, 198, 200, 204, 205, 213, 215, 221, 222], "involv": [1, 87, 147, 219], "atom": [1, 72, 76, 81, 83, 99, 100, 101, 102, 103, 104, 105, 106, 175, 190, 192, 195, 197, 209, 225, 228], "non": [1, 3, 18, 24, 33, 36, 37, 48, 63, 64, 69, 72, 73, 75, 76, 77, 79, 80, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 134, 136, 168, 175, 181, 182, 183, 185, 190, 191, 195, 196, 197, 198, 200, 205, 213, 222, 224], "upon": [1, 84, 87, 129, 143, 184, 193], "complet": [1, 77, 94, 129, 143, 185, 186, 190, 195, 200, 201, 215, 222, 225], "unlock": 1, "updat": [1, 72, 75, 82, 99, 100, 101, 102, 103, 104, 105, 106, 182, 183, 185, 190, 196, 200, 213, 215, 220, 222, 225], "statu": 1, "onc": [1, 72, 94, 133, 134, 190, 191, 197, 200, 201, 220, 222], "again": [1, 87, 185, 192, 200, 201, 215], "becom": [1, 59, 60, 79, 94, 135, 195, 215, 219], "avail": [1, 74, 77, 81, 82, 87, 88, 97, 129, 131, 135, 137, 138, 139, 152, 179, 180, 185, 190, 193, 195, 196, 198, 200, 201, 215, 217, 219, 220], "within": [1, 2, 4, 79, 82, 92, 129, 134, 144, 145, 146, 148, 151, 185, 190, 195, 197, 200, 218, 219, 220], "select": [1, 72, 74, 91, 131, 162, 174, 181, 193, 195, 200, 210, 215, 225], "from": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 87, 91, 92, 94, 97, 118, 119, 121, 124, 129, 130, 131, 134, 135, 136, 137, 138, 139, 144, 145, 146, 150, 151, 152, 160, 163, 166, 167, 168, 171, 175, 176, 177, 179, 181, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 210, 213, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226], "next": [1, 213, 215, 222, 225], "step": [1, 4, 190, 192, 193, 198, 200, 213, 215, 220], "develop": [1, 91, 144, 190, 193, 195, 197, 200, 203, 204, 210, 212, 213, 214, 215], "functor": [1, 2, 11, 21, 22, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 48, 67, 69, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 179, 180, 190, 192, 195, 200, 219, 220, 222, 224], "desir": [1, 48, 67, 69, 77, 146, 159, 167, 185, 196, 200, 213, 215], "type": [1, 11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 72, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 92, 94, 95, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 129, 131, 135, 136, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 166, 167, 168, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 204, 209, 213, 215, 218, 219, 220, 223, 226], "devicetyp": [1, 129, 135, 223], "respect": [1, 76, 138, 145, 167, 168, 172, 173, 175, 187, 190, 195, 200], "x": [1, 72, 137, 138, 171, 172, 173, 179, 181, 187, 192, 196, 198, 200, 218, 222], "idx": [1, 218], "just": [1, 2, 75, 87, 94, 129, 135, 147, 168, 171, 183, 191, 196, 198, 200, 201, 203, 213, 217, 220], "give": [1, 88, 94, 184, 191, 192, 196, 197, 198, 200, 213], "argument": [1, 11, 17, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 75, 76, 77, 79, 92, 94, 97, 130, 131, 132, 134, 138, 143, 145, 146, 151, 153, 154, 155, 156, 157, 158, 166, 167, 168, 174, 175, 176, 179, 180, 181, 182, 184, 189, 190, 196, 199, 200, 219, 221], "state_argu": 1, "state_idx": 1, "equidistribut": 1, "uint32_t": [1, 81, 179, 180], "urand": 1, "For": [1, 2, 59, 75, 76, 94, 121, 129, 135, 136, 139, 150, 159, 166, 168, 174, 175, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 215, 219, 220, 221, 226], "32": [1, 2, 190, 192, 200, 215], "bit": [1, 72, 74, 76, 87, 89, 175, 180, 194, 196, 198, 199, 200, 226], "unsign": [1, 74, 75, 76, 77, 80, 102, 105, 136, 153, 155, 157, 199, 200, 221], "integ": [1, 59, 60, 75, 76, 81, 85, 94, 136, 138, 148, 150, 152, 174, 175, 190, 196, 198, 200, 218], "three": [1, 75, 87, 138, 143, 183, 184, 185, 190, 193, 195, 196, 198, 200, 201, 214, 219], "option": [1, 72, 75, 76, 85, 94, 129, 131, 144, 145, 146, 148, 152, 175, 182, 184, 185, 187, 190, 191, 192, 193, 196, 200, 201, 213, 215, 219, 221, 223, 224], "shown": [1, 55, 87, 121, 190, 195, 219], "first": [1, 4, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 47, 48, 49, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 74, 75, 76, 79, 84, 87, 92, 94, 127, 129, 134, 151, 159, 160, 169, 174, 175, 179, 180, 181, 185, 187, 190, 191, 192, 194, 195, 196, 200, 203, 218, 219, 222, 226], "default": [1, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 79, 81, 84, 85, 88, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 126, 127, 128, 130, 131, 135, 140, 141, 142, 145, 148, 150, 151, 152, 160, 163, 165, 168, 169, 170, 171, 172, 173, 175, 179, 180, 184, 185, 186, 188, 189, 190, 191, 192, 193, 196, 201, 205, 215, 219, 226], "over": [1, 34, 48, 67, 68, 72, 81, 85, 87, 94, 129, 148, 149, 151, 153, 154, 155, 156, 157, 158, 179, 180, 183, 187, 190, 191, 196, 198, 199, 200, 201, 217, 219, 224], "possibl": [1, 11, 17, 22, 28, 30, 35, 46, 48, 51, 52, 55, 56, 67, 69, 76, 82, 87, 94, 132, 145, 152, 175, 184, 191, 192, 196, 197, 198, 199, 200, 207, 220], "data": [1, 72, 74, 75, 79, 80, 81, 82, 94, 97, 129, 130, 131, 143, 160, 163, 167, 168, 183, 187, 190, 191, 193, 194, 195, 196, 197, 198, 199, 204, 207, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228], "defin": [1, 42, 72, 76, 78, 83, 87, 88, 92, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 148, 150, 151, 152, 154, 156, 158, 161, 162, 164, 167, 175, 177, 179, 180, 185, 188, 189, 190, 192, 195, 196, 200, 214, 215, 217, 218, 223, 227], "abov": [1, 86, 129, 132, 136, 138, 183, 185, 190, 193, 196, 198, 199, 200, 207, 215, 219, 220, 225], "And": [1, 72, 107, 192, 202, 224], "also": [1, 11, 21, 25, 28, 30, 35, 42, 46, 51, 52, 56, 75, 76, 77, 78, 81, 84, 87, 94, 121, 129, 135, 139, 144, 145, 151, 152, 160, 171, 175, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 212, 213, 214, 215, 219, 222, 224], "64": [1, 2, 196, 198, 200], "latter": [1, 94, 145, 175, 190, 195, 200, 215], "cover": [1, 76, 175, 196, 213, 214], "user": [1, 75, 76, 77, 81, 87, 90, 94, 127, 129, 130, 133, 134, 144, 145, 146, 148, 152, 175, 177, 185, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 220, 221, 225, 226, 227], "more": [1, 76, 77, 78, 87, 94, 121, 132, 135, 144, 147, 175, 183, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 219, 224, 225], "other": [1, 46, 75, 78, 87, 92, 94, 134, 135, 144, 145, 146, 151, 153, 154, 155, 156, 159, 167, 168, 169, 170, 171, 182, 183, 185, 190, 192, 194, 195, 196, 197, 198, 199, 201, 204, 207, 210, 213, 215, 218, 220, 221, 224, 226], "scalar": [1, 75, 77, 78, 82, 97, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 145, 163, 168, 175, 179, 180, 183, 186, 187, 189, 190, 192, 196], "uint64_t": [1, 179, 180], "int32_t": [1, 179, 180, 181], "normal": [1, 72, 183, 185, 196, 200, 215], "distribut": [1, 72, 193, 199, 202, 207, 215, 220], "view": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 132, 133, 134, 145, 146, 151, 162, 166, 167, 169, 170, 171, 172, 173, 174, 176, 183, 185, 187, 189, 190, 191, 193, 195, 196, 198, 205, 209, 215, 217, 218, 219, 220, 221, 222, 228], "fill": [1, 6, 21, 24, 25, 28, 30, 35, 39, 40, 42, 179, 180, 187, 190, 192, 194, 196, 200, 226], "includ": [1, 2, 22, 34, 67, 68, 76, 77, 87, 94, 121, 130, 131, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 167, 168, 171, 172, 173, 175, 177, 179, 180, 181, 182, 184, 185, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 207, 213, 214, 215, 218, 221, 223, 226, 227], "main": [1, 2, 76, 86, 97, 121, 130, 131, 132, 133, 134, 144, 145, 146, 164, 168, 171, 175, 179, 180, 181, 185, 188, 189, 191, 198, 200, 201, 218, 221, 222, 226], "argc": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 168, 171, 175, 179, 180, 181, 188, 189, 191, 226], "argv": [1, 2, 76, 86, 121, 131, 132, 133, 134, 144, 145, 146, 168, 171, 175, 179, 180, 181, 188, 189, 191, 226], "scopeguarg": 1, "guard": [1, 132, 182], "random_xorshift64_pool": [1, 2, 72], "random_pool": 1, "12345": 1, "total": [1, 77, 87, 152, 175, 183, 188, 189, 190, 191, 219], "1000000": [1, 168], "count": [1, 7, 13, 14, 27, 45, 62, 74, 76, 77, 87, 94, 136, 144, 145, 146, 149, 154, 156, 158, 175, 183, 190, 196, 199, 224], "parallel_reduc": [1, 72, 79, 87, 90, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 141, 143, 147, 149, 152, 153, 154, 155, 156, 157, 158, 182, 187, 188, 189, 190, 196, 197, 219, 220, 221], "approximate_pi": 1, "kokkos_lambda": [1, 2, 76, 77, 79, 81, 121, 129, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 175, 183, 187, 188, 189, 190, 192, 194, 196, 200, 217, 218, 219, 220, 222, 224, 226], "local_count": 1, "acquir": [1, 76, 87, 175, 191, 192, 197, 200], "engin": [1, 185, 195, 197, 200, 202, 207], "auto": [1, 2, 4, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 78, 79, 81, 82, 94, 131, 132, 137, 139, 144, 145, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 167, 168, 174, 181, 187, 190, 198, 199, 217, 218, 219, 225, 226], "drand": 1, "y": [1, 179, 192, 198, 200, 218, 222], "do": [1, 2, 24, 25, 46, 53, 56, 69, 75, 83, 87, 94, 99, 100, 101, 129, 132, 133, 135, 143, 147, 175, 183, 184, 185, 187, 190, 191, 194, 195, 196, 197, 198, 199, 201, 203, 206, 213, 218, 220, 221, 222, 224], "forget": 1, "releas": [1, 86, 87, 88, 133, 184, 185, 190, 193, 195, 210, 212, 213, 215], "printf": [1, 94, 121, 144, 145, 146, 171, 179, 180, 187, 188, 189, 226], "pi": [1, 89, 137], "f": [1, 87, 94, 138, 151, 152, 160, 182, 213, 218, 219, 225], "n": [1, 2, 18, 24, 31, 33, 63, 64, 74, 75, 77, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 171, 172, 173, 175, 179, 187, 188, 189, 190, 192, 196, 198, 199, 200, 204, 221, 222, 224, 226], "4": [1, 2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 82, 88, 129, 135, 136, 137, 138, 139, 149, 150, 152, 153, 154, 155, 156, 158, 171, 174, 175, 188, 189, 198, 199, 202, 205, 209, 210, 213, 215, 219, 221, 228], "dstviewtyp": 2, "srcviewtyp": 2, "copy_functor": 2, "permuteviewtyp": 2, "copy_permute_functor": 2, "binsort": [2, 182], "valuesviewtyp": 2, "values_range_begin": 2, "values_range_end": 2, "binop1d": 2, "binop3d": 2, "viewtyp": [2, 75, 129, 166, 167, 174, 175, 200], "size_t": [2, 59, 60, 75, 76, 77, 78, 79, 82, 87, 127, 128, 169, 170, 171, 172, 173, 175, 179, 180, 181, 190, 196, 198, 199, 200, 218, 226], "begin": [2, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 72, 78, 80, 82, 87, 127, 128, 148, 149, 150, 152, 154, 156, 158, 200, 215, 218, 219, 227], "parallel": [2, 72, 77, 81, 83, 85, 87, 91, 92, 121, 129, 131, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 183, 185, 187, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 204, 209, 217, 220, 222, 224, 225, 226, 228], "teampolici": [2, 72, 76, 85, 87, 94, 129, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 158, 175, 187, 190, 192, 196], "kernel": [2, 11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 79, 82, 85, 88, 94, 144, 148, 150, 151, 152, 168, 175, 183, 185, 192, 195, 196, 197, 200, 201, 204, 205, 215, 221, 225, 228], "perform": [2, 4, 48, 67, 69, 76, 77, 79, 85, 90, 94, 108, 109, 110, 111, 120, 121, 123, 145, 146, 151, 152, 175, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 200, 202, 205, 212, 214, 218, 219, 223, 228], "teamthreadrang": [2, 72, 85, 87, 144, 145, 157, 158, 187, 190, 192], "threadvectorrang": [2, 72, 85, 87, 144, 145, 146, 190], "header": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 79, 84, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 185, 207, 223, 227], "kokkos_nestedsort": 2, "hpp": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 79, 84, 87, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 184, 189, 191, 198, 218, 219, 221, 223, 226, 227], "teammemb": [2, 94, 152, 190], "sort_team": 2, "t": [2, 19, 23, 24, 25, 35, 53, 54, 55, 56, 57, 72, 75, 84, 87, 94, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 139, 143, 145, 151, 152, 163, 167, 172, 173, 175, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 192, 196, 197, 198, 199, 201, 210, 213, 225], "compar": [2, 21, 26, 27, 36, 38, 39, 40, 41, 42, 61, 62, 76, 77, 99, 131, 175, 196, 198, 200, 210, 213, 215], "comp": [2, 36, 37, 38, 39, 40, 41], "keyviewtyp": 2, "valueviewtyp": 2, "sort_by_key_team": 2, "keyview": 2, "valueview": 2, "sort_thread": 2, "sort_by_key_thread": 2, "intern": [2, 81, 82, 86, 87, 88, 131, 132, 152, 185, 190, 191, 192, 219], "entir": [2, 75, 87, 149, 171, 196, 197, 199, 201, 215, 224, 226], "thei": [2, 75, 78, 87, 88, 94, 129, 132, 133, 135, 137, 144, 147, 159, 168, 183, 184, 190, 194, 196, 197, 198, 200, 210, 212, 213, 215, 217, 220, 224, 226, 227], "mai": [2, 4, 75, 76, 77, 78, 79, 82, 87, 88, 94, 128, 129, 132, 133, 134, 144, 145, 146, 152, 159, 175, 179, 180, 183, 184, 185, 186, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 205, 206, 207, 210, 213, 215, 219, 220, 222, 224, 225], "top": [2, 94, 184, 185, 190, 215], "lambda": [2, 88, 94, 143, 144, 145, 190, 192, 205, 218, 219, 224], "vector": [2, 72, 73, 85, 88, 144, 145, 146, 149, 152, 155, 156, 157, 158, 159, 179, 180, 181, 187, 196, 197, 200, 205, 218, 223], "lane": [2, 72, 85, 149, 155, 156, 157, 158, 179, 190, 197, 198], "either": [2, 75, 76, 80, 81, 85, 94, 113, 115, 117, 131, 144, 145, 151, 168, 172, 173, 175, 181, 184, 185, 188, 189, 190, 191, 196, 200, 201, 213, 215, 225, 227], "loop": [2, 85, 88, 94, 149, 150, 183, 192, 195, 198, 200, 205, 217, 219, 222, 224, 228], "sort_by_kei": 2, "while": [2, 21, 46, 72, 76, 87, 94, 135, 149, 173, 175, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 215, 226], "simultan": [2, 183], "appli": [2, 11, 30, 31, 39, 40, 41, 66, 69, 87, 94, 145, 151, 183, 185, 188, 189, 196, 212, 226], "same": [2, 17, 18, 24, 28, 29, 31, 33, 34, 37, 39, 41, 44, 47, 51, 52, 55, 56, 64, 67, 68, 75, 76, 77, 78, 82, 84, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 128, 132, 134, 138, 144, 145, 146, 151, 152, 153, 154, 155, 156, 159, 166, 167, 168, 175, 183, 185, 190, 191, 192, 195, 196, 198, 199, 200, 201, 213, 215, 219, 220, 221, 223, 225, 226], "permut": 2, "element": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 82, 134, 145, 146, 160, 162, 168, 169, 170, 171, 173, 175, 190, 192, 197, 200, 216, 219, 220, 223], "It": [2, 71, 75, 76, 77, 78, 87, 128, 129, 130, 131, 132, 145, 149, 175, 179, 180, 183, 184, 185, 190, 192, 195, 196, 198, 199, 200, 204, 215, 223, 224], "equival": [2, 39, 40, 41, 70, 71, 78, 92, 129, 151, 174, 185, 190, 196, 198, 199, 200, 218, 223], "kei": [2, 81, 198, 220], "tupl": [2, 148, 223], "accord": [2, 35, 87, 102, 104, 105, 144, 145, 146], "commonli": [2, 195], "entri": [2, 75, 77, 80, 94, 188, 189, 192, 196, 199, 217], "row": [2, 80, 187, 192, 199, 200], "cr": [2, 72, 80], "compress": [2, 80, 200, 220], "spars": [2, 200, 204, 228], "matrix": [2, 187, 199, 200], "requir": [2, 75, 77, 81, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 149, 151, 153, 154, 155, 156, 157, 158, 167, 175, 182, 185, 186, 188, 189, 190, 191, 192, 193, 195, 200, 201, 204, 211, 213, 214, 215, 216, 219, 222, 223, 225], "extent": [2, 75, 76, 77, 78, 80, 129, 153, 155, 157, 168, 169, 170, 171, 172, 173, 174, 175, 183, 196, 200, 217, 218, 224], "version": [2, 72, 76, 84, 91, 129, 130, 131, 132, 134, 137, 138, 175, 184, 185, 191, 194, 196, 198, 201, 205, 213, 214, 215, 226], "take": [2, 76, 77, 78, 85, 87, 92, 94, 102, 104, 105, 129, 134, 135, 145, 147, 152, 169, 170, 171, 182, 183, 184, 189, 190, 191, 195, 196, 197, 198, 200, 213, 215, 217, 219, 222, 228], "object": [2, 11, 22, 30, 75, 76, 81, 86, 87, 88, 107, 131, 132, 133, 134, 135, 136, 149, 151, 171, 175, 181, 182, 185, 189, 190, 191, 192, 196, 198, 200, 224, 226], "order": [2, 16, 36, 37, 41, 44, 49, 52, 57, 58, 74, 76, 85, 86, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 146, 148, 149, 150, 152, 154, 156, 158, 171, 175, 182, 183, 184, 188, 190, 191, 192, 195, 196, 197, 199, 200, 201, 204, 214, 215, 217, 220, 221, 222, 224], "oper": [2, 4, 11, 21, 22, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 46, 48, 51, 52, 53, 54, 56, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 82, 85, 87, 94, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 132, 135, 138, 143, 144, 145, 146, 148, 150, 152, 153, 154, 155, 156, 157, 158, 160, 163, 168, 175, 177, 181, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 200, 206, 209, 215, 216, 220, 225, 226, 228], "should": [2, 4, 17, 30, 55, 59, 60, 74, 75, 87, 92, 94, 118, 119, 121, 124, 129, 133, 134, 135, 144, 146, 179, 180, 181, 183, 184, 185, 187, 190, 191, 192, 193, 194, 195, 199, 200, 201, 210, 213, 215, 220, 226], "member": [2, 87, 94, 130, 131, 139, 144, 145, 146, 153, 154, 155, 156, 163, 176, 181, 184, 187, 189, 190, 194, 196, 200, 215, 224, 225, 226], "accept": [2, 30, 31, 36, 37, 39, 40, 41, 69, 85, 87, 148, 150, 152, 160, 179, 180, 190, 193, 200, 213, 215, 219], "b": [2, 11, 21, 22, 34, 36, 39, 40, 41, 42, 48, 69, 76, 78, 143, 144, 153, 154, 155, 156, 157, 158, 163, 167, 175, 179, 180, 181, 190, 192, 196, 198, 200, 225], "bool": [2, 13, 14, 17, 21, 28, 35, 36, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 74, 75, 76, 77, 79, 81, 82, 84, 87, 92, 100, 129, 130, 131, 135, 146, 158, 175, 180, 181, 182, 189, 191, 196, 198, 220], "true": [2, 12, 13, 14, 17, 20, 21, 28, 35, 36, 37, 38, 39, 40, 41, 45, 46, 51, 52, 55, 56, 62, 72, 74, 75, 76, 77, 79, 81, 82, 92, 94, 100, 129, 130, 131, 134, 135, 153, 154, 155, 156, 157, 158, 159, 168, 169, 170, 174, 175, 180, 181, 183, 185, 189, 192, 198, 200], "onli": [2, 4, 72, 74, 75, 76, 77, 78, 79, 82, 84, 87, 92, 94, 129, 132, 135, 143, 144, 145, 146, 151, 160, 168, 175, 176, 179, 181, 183, 185, 186, 187, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 210, 213, 215, 217, 220, 221, 226], "goe": [2, 200], "befor": [2, 35, 69, 74, 75, 76, 86, 99, 100, 101, 132, 133, 134, 151, 168, 175, 190, 192, 193, 194, 195, 196, 199, 200, 220, 222, 225, 226], "ascend": 2, "descend": [2, 36, 37], "intcompar": 2, "kokkos_funct": [2, 48, 67, 69, 137, 138, 139, 144, 161, 176, 182, 194, 196, 198, 200, 224, 226], "constexpr": [2, 4, 35, 48, 67, 69, 74, 75, 76, 77, 79, 81, 82, 84, 88, 135, 136, 137, 139, 160, 162, 169, 170, 171, 175, 179, 180, 198, 205], "preced": [2, 191, 215], "larger": [2, 74, 76, 77, 152, 171, 175, 183, 200, 203], "final": [2, 72, 76, 79, 83, 87, 130, 131, 132, 134, 144, 145, 146, 158, 168, 171, 173, 175, 179, 180, 181, 182, 186, 188, 189, 190, 193, 196, 200, 217, 220, 221, 226], "barrier": [2, 151, 197, 222], "access": [2, 4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 87, 89, 93, 118, 119, 124, 128, 129, 131, 135, 151, 167, 168, 176, 183, 187, 190, 192, 194, 195, 196, 197, 199, 201, 202, 213, 215, 217, 219, 221, 222, 223, 224, 226, 228], "immedi": [2, 144, 185, 193, 200, 201, 222], "after": [2, 11, 15, 17, 18, 22, 24, 33, 34, 43, 44, 47, 49, 50, 51, 52, 54, 55, 58, 60, 65, 66, 67, 68, 70, 71, 75, 77, 86, 87, 94, 131, 133, 134, 151, 168, 172, 173, 181, 183, 185, 191, 192, 193, 195, 196, 197, 199, 200, 201, 212, 213, 214, 215, 221, 222, 225], "both": [2, 72, 75, 76, 79, 82, 87, 94, 107, 116, 117, 135, 159, 160, 168, 175, 183, 184, 187, 190, 191, 192, 193, 195, 196, 198, 200, 204, 212, 213, 215, 219, 220], "global": [2, 83, 87, 149, 151, 154, 156, 158, 190, 200, 222], "scratch": [2, 76, 129, 152, 175, 195, 197, 228], "memori": [2, 72, 73, 75, 76, 77, 79, 81, 82, 83, 88, 92, 93, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 129, 143, 151, 152, 167, 169, 170, 171, 172, 173, 175, 176, 179, 185, 187, 189, 193, 194, 198, 199, 201, 202, 204, 205, 215, 220, 221, 222, 223, 225, 226, 228], "space": [2, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 85, 86, 87, 90, 95, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 126, 127, 128, 143, 144, 145, 146, 148, 149, 150, 152, 154, 156, 158, 159, 167, 168, 172, 173, 175, 176, 187, 189, 190, 191, 192, 201, 204, 213, 215, 219, 220, 222, 224, 225, 228], "biton": 2, "algorithm": [2, 81, 87, 90, 182, 183, 185, 190, 191, 193, 195, 196, 197, 200, 204, 215, 217, 222, 223], "stabl": 2, "mean": [2, 22, 34, 67, 68, 76, 81, 92, 94, 129, 132, 135, 143, 144, 147, 175, 177, 185, 190, 192, 195, 196, 197, 198, 199, 200, 201, 203, 220, 227], "repeat": [2, 190, 213, 222, 225], "input": [2, 22, 34, 67, 68, 77, 79, 94, 145, 146, 185, 187, 191, 192, 196, 200, 215, 219, 220], "correspond": [2, 76, 79, 87, 117, 121, 134, 160, 166, 169, 170, 171, 174, 175, 190, 191, 196, 197, 200, 212, 213, 224], "might": [2, 129, 164, 181, 183, 190, 191, 192, 193, 194, 195, 196, 199, 200, 219, 226, 227], "ani": [2, 27, 39, 40, 41, 75, 81, 83, 84, 85, 87, 88, 92, 94, 97, 127, 128, 129, 131, 134, 135, 138, 144, 148, 150, 152, 159, 164, 168, 175, 180, 184, 185, 186, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 213, 215, 221, 226], "kokkos_cor": [2, 76, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 182, 184, 189, 191, 221, 226, 227], "execspac": [2, 79, 129, 150, 152, 159, 167, 168, 200], "defaultexecutionspac": [2, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56, 76, 81, 85, 93, 126, 127, 128, 147, 148, 150, 152, 159, 175, 190, 191, 220], "teampol": 2, "teammem": 2, "typenam": [2, 4, 19, 20, 48, 63, 64, 74, 75, 77, 79, 81, 84, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 150, 151, 152, 153, 155, 157, 167, 168, 171, 172, 173, 192, 200, 218, 223], "member_typ": [2, 72, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 187, 190, 192], "10": [2, 24, 34, 48, 69, 77, 78, 82, 86, 132, 133, 134, 146, 168, 175, 185, 190, 196, 200, 202, 209, 210, 213, 215, 226], "rand_pool": 2, "13718": 2, "fill_random": [2, 72], "100": [2, 75, 88, 121, 146, 190, 192, 196, 197, 200, 221], "parallel_for": [2, 72, 76, 77, 79, 81, 87, 90, 94, 129, 140, 143, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 175, 183, 190, 192, 194, 195, 196, 197, 200, 217, 218, 219, 220, 221, 222, 224, 226], "whole": [2, 151, 183, 185, 187, 199, 224], "a_row_i": 2, "subview": [2, 72, 75, 76, 78, 79, 97, 162, 168, 171, 173, 175, 209, 219, 228], "league_rank": [2, 144, 145, 149, 151, 153, 154, 155, 156, 157, 158, 187, 190], "ahost": 2, "create_mirror_view_and_copi": [2, 167], "hostspac": [2, 72, 75, 77, 87, 93, 167, 168, 171, 175, 189, 192, 200, 218], "cout": [2, 129], "j": [2, 80, 149, 155, 158, 159, 190, 192, 195, 196, 200, 202, 219, 222, 224], "vectorlen": 2, "vector_length_max": [2, 152], "now": [2, 87, 129, 135, 147, 159, 168, 175, 181, 184, 190, 192, 194, 195, 198, 200, 217, 226], "column": [2, 80, 192, 196, 199, 200, 215], "a_col_i": 2, "deep_copi": [2, 72, 74, 75, 76, 92, 97, 129, 135, 143, 167, 175, 183, 192, 200, 222], "na": [2, 210, 215], "9": [2, 34, 48, 69, 78, 88, 185, 199, 205, 206, 209, 210, 213, 215], "38": 2, "68": 2, "74": [2, 202], "76": 2, "83": 2, "89": 2, "91": 2, "95": 2, "19": [2, 185, 210], "41": 2, "55": 2, "65": 2, "78": 2, "92": 2, "99": [2, 190], "13": [2, 4, 23, 24, 39, 40, 53, 56, 145, 200, 209, 213], "16": [2, 77, 185, 192, 210, 215], "17": [2, 84, 88, 132, 139, 145, 182, 185, 210, 213], "40": [2, 78], "44": [2, 213], "54": 2, "96": [2, 192], "18": [2, 185, 201, 202, 210, 213], "77": 2, "80": [2, 171], "82": 2, "94": 2, "14": [2, 23, 88, 139, 185, 209, 215], "34": [2, 53, 56, 151], "35": 2, "45": 2, "46": 2, "47": 2, "52": 2, "58": 2, "6": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 137, 139, 146, 168, 175, 196, 205, 209, 210, 213, 228], "25": 2, "37": 2, "51": 2, "81": 2, "3": [2, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 82, 87, 88, 130, 131, 132, 134, 137, 138, 139, 146, 148, 150, 151, 157, 166, 168, 171, 172, 173, 174, 175, 186, 187, 188, 201, 202, 203, 205, 207, 209, 210, 213, 215, 219, 223, 228], "5": [2, 11, 12, 21, 22, 25, 26, 27, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 76, 77, 88, 139, 148, 150, 151, 162, 163, 166, 168, 171, 174, 175, 187, 190, 199, 202, 209, 210, 213, 226, 228], "20": [2, 78, 88, 89, 129, 135, 136, 137, 147, 171, 185, 201, 210, 215], "33": [2, 202], "39": 2, "60": [2, 200], "97": 2, "7": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 72, 76, 77, 88, 130, 131, 132, 134, 138, 175, 185, 187, 195, 199, 201, 206, 209, 210, 213, 215, 228], "8": [2, 11, 12, 21, 22, 26, 27, 34, 36, 37, 38, 39, 40, 41, 42, 48, 61, 62, 66, 68, 69, 70, 71, 88, 131, 134, 150, 152, 153, 155, 157, 169, 170, 171, 175, 183, 185, 191, 195, 196, 197, 200, 205, 206, 209, 210, 213, 215, 223, 228], "15": [2, 4, 21, 25, 28, 30, 35, 42, 151, 166, 174, 196, 209], "31": [2, 78], "42": [2, 129, 147, 220], "86": 2, "29": [2, 185, 210], "56": 2, "63": 2, "90": [2, 199, 218], "iter": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 78, 82, 85, 87, 144, 145, 146, 148, 150, 152, 175, 190, 195, 196, 197, 198, 200, 217, 219, 222], "minimum": [3, 72, 77, 102, 104, 105, 107, 114, 115, 116, 117, 118, 119, 145, 146, 185, 186, 187, 210], "modifi": [3, 4, 11, 17, 22, 24, 28, 30, 32, 33, 35, 36, 40, 46, 48, 49, 51, 52, 55, 56, 59, 63, 67, 69, 75, 145, 146, 179, 180, 183, 184, 190, 192, 213], "sequenc": [3, 26, 61, 74, 89, 190, 195, 197], "numer": [3, 83, 137, 138, 185, 193, 195, 201, 215, 219, 224], "partit": [3, 35, 47], "kokkos_stdalgorithm": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 182], "datatyp": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 75, 76, 77, 79, 121, 175, 179, 218, 223], "properti": [4, 12, 13, 14, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 49, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70, 76, 144, 145, 146, 152, 167, 172, 173, 175, 195, 196, 199, 200], "past": [4, 16, 74, 82, 86, 87], "reason": [4, 94, 130, 182, 194, 196, 197, 198, 200, 201, 221, 224, 226], "taken": [4, 184, 187, 213], "becaus": [4, 138, 159, 192, 194, 195, 196, 198, 200, 201, 222, 226], "we": [4, 39, 40, 41, 76, 84, 87, 94, 132, 138, 168, 175, 181, 184, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 210, 213, 217, 218, 220, 221, 226], "chang": [4, 72, 75, 81, 132, 151, 164, 184, 191, 193, 196, 198, 199, 200, 201, 211, 212, 213, 215, 221, 226], "itself": [4, 76, 77, 94, 129, 135, 147, 171, 175, 183, 185, 187, 193, 195, 199, 200, 201, 213, 224, 225], "without": [4, 72, 75, 77, 86, 87, 94, 131, 143, 145, 164, 168, 172, 173, 182, 184, 185, 186, 198, 199, 200, 201, 207, 210, 219, 221, 222, 225, 226], "dereferenc": [4, 11, 22, 30, 31, 86, 224], "must": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 33, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 75, 76, 77, 78, 81, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 127, 128, 131, 133, 134, 144, 145, 146, 148, 149, 151, 153, 154, 155, 156, 167, 172, 173, 174, 175, 184, 185, 186, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 207, 212, 213, 214, 215, 219, 220, 222, 225], "done": [4, 37, 54, 69, 87, 94, 135, 185, 190, 191, 198, 200, 201, 213, 220], "execut": [4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 72, 76, 79, 82, 83, 86, 87, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 121, 126, 127, 128, 131, 133, 134, 135, 143, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 158, 159, 163, 167, 168, 173, 175, 176, 181, 183, 191, 192, 193, 198, 201, 204, 214, 215, 219, 223, 224, 225, 226, 228], "ensur": [4, 75, 86, 132, 133, 134, 184, 185, 191, 195, 198, 200], "qualifi": [4, 87, 182, 210, 226], "rank": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 77, 78, 82, 85, 87, 131, 144, 145, 148, 151, 153, 155, 157, 168, 171, 172, 173, 174, 175, 190, 191, 200, 201, 218, 219, 220], "layoutleft": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 78, 79, 82, 97, 168, 172, 173, 175, 192, 200, 219], "layoutright": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 75, 76, 79, 97, 168, 172, 173, 175, 192, 196, 199, 200, 219], "layoutstrid": [4, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 37, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 72, 76, 97, 175, 199, 200, 218], "ke": [4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 42, 53, 56], "view_typ": [4, 21, 25, 28, 30, 35, 42, 75, 166], "proper": [4, 86, 185, 192, 201], "content": [4, 72, 75, 131, 145, 146, 160, 172, 173, 192, 194, 196, 200, 220, 222, 225, 226], "itc": 4, "read": [4, 11, 21, 22, 67, 68, 103, 129, 183, 192, 195, 196, 199, 200, 221], "iteratortyp": [4, 12, 19, 20, 23, 24, 32, 33, 35, 36, 37, 39, 40, 41, 45, 47, 48, 52, 53, 56, 57, 59, 62, 63, 64, 69, 70], "difference_typ": [4, 19, 20, 63, 64, 84], "last": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 82, 134, 165, 170, 175, 190, 191, 192, 195, 199, 200, 215], "need": [4, 28, 30, 76, 77, 84, 87, 94, 128, 129, 132, 136, 138, 145, 146, 159, 168, 175, 184, 185, 186, 190, 191, 192, 193, 194, 196, 198, 199, 201, 212, 213, 215, 220, 222], "go": [4, 86, 144, 145, 146, 148, 150, 151, 152, 184, 185, 190, 195, 199, 213], "calcul": [4, 140, 141, 142, 152, 171, 190, 192, 200, 218, 224], "neg": [4, 18, 24, 33, 63, 64, 134, 181, 183, 198], "it1": [4, 25, 28], "it2": [4, 25, 28], "stepsa": 4, "equal": [4, 7, 12, 19, 20, 25, 26, 27, 38, 49, 50, 53, 54, 61, 62, 71, 76, 92, 99, 100, 131, 159, 174, 175, 179, 180, 191], "stepsb": 4, "swap": [4, 59, 65, 190], "point": [4, 25, 28, 75, 76, 77, 79, 82, 87, 94, 129, 134, 135, 138, 149, 175, 184, 185, 194, 195, 198, 199, 200, 215, 219, 220, 221, 226], "current": [4, 74, 76, 77, 81, 87, 94, 99, 100, 129, 135, 138, 159, 163, 175, 179, 180, 185, 190, 196, 197, 198, 199, 200, 201, 204, 215, 220], "api": [4, 17, 55, 88, 133, 134, 151, 164, 182, 191, 204, 219, 225], "doe": [4, 47, 75, 77, 81, 87, 91, 94, 126, 131, 143, 145, 146, 175, 184, 185, 190, 191, 192, 194, 195, 199, 200, 201, 210, 215], "fenc": [4, 72, 87, 90, 129, 135, 144, 145, 151, 159, 173, 175, 195, 200, 201, 222, 226], "min_el": [5, 39, 41], "max_el": 5, "minmax_el": 5, "copi": [6, 11, 16, 17, 18, 23, 24, 46, 50, 51, 54, 55, 58, 60, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 92, 94, 97, 135, 144, 151, 159, 163, 167, 169, 170, 171, 173, 175, 186, 188, 189, 190, 192, 194, 195, 196, 201, 213, 215, 220, 222, 224, 226], "copy_if": 6, "copy_n": 6, "copy_backward": 6, "move": [6, 44, 49, 52, 65, 76, 77, 81, 135, 151, 169, 170, 171, 175, 184, 194, 216, 226], "move_backward": 6, "fill_n": 6, "transform": [6, 67, 68, 69, 197], "generate_n": 6, "remov": [6, 52, 134, 139, 164, 182, 184, 191, 213], "remove_if": 6, "remove_copi": [6, 51], "remove_copy_if": 6, "replac": [6, 35, 46, 54, 55, 56, 89, 130, 131, 139, 182, 185, 192, 196, 227], "replace_if": [6, 17, 55], "replace_copi": [6, 55], "replace_copy_if": 6, "swap_rang": 6, "revers": [6, 16, 44, 58, 74, 136], "reverse_copi": 6, "rotat": [6, 60, 136], "rotate_copi": 6, "shift_left": [6, 64], "shift_right": 6, "uniqu": [6, 76, 77, 129, 143, 175, 185, 191, 195, 201, 228], "unique_copi": 6, "adjacent_find": 7, "count_if": 7, "all_of": [7, 180, 198], "any_of": [7, 180, 198], "none_of": [7, 180, 198], "find": [7, 28, 37, 39, 40, 41, 74, 81, 82, 87, 136, 183, 185, 186, 187, 194, 196, 201, 204, 205, 226], "find_if": [7, 29], "find_if_not": 7, "find_end": 7, "find_first_of": 7, "for_each": [7, 31], "for_each_n": [7, 27, 62], "lexicographical_compar": 7, "mismatch": [7, 61, 200], "search": [7, 12, 19, 20, 25, 26, 27, 35, 53, 62, 74, 81, 131, 225], "search_n": 7, "adjacent_differ": 8, "reduc": [8, 69, 72, 82, 83, 87, 94, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 129, 145, 146, 151, 186, 190, 193, 195, 197, 199, 200], "exclusive_scan": [8, 34, 67], "inclusive_scan": 8, "transform_reduc": 8, "transform_exclusive_scan": [8, 68], "transform_inclusive_scan": 8, "is_partit": 9, "partition_point": 9, "partition_copi": 9, "is_sort": [10, 37, 82], "is_sorted_until": 10, "executionspac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 92, 129, 135, 148, 150, 152, 168, 190, 192, 221], "inputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 46, 51, 54, 55, 67, 68], "outputiteratortyp": [11, 15, 16, 17, 18, 22, 34, 54, 55, 67, 68], "exespac": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "first_from": [11, 15, 16, 17, 18, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "last_from": [11, 15, 16, 17, 22, 34, 43, 44, 50, 51, 54, 55, 58, 60, 66, 67, 68, 71], "first_dest": [11, 22, 34, 67, 68], "binaryop": [11, 22, 48], "bin_op": [11, 22, 34, 68], "string": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 79, 87, 127, 131, 132, 134, 143, 144, 145, 146, 161, 175, 176, 185, 191, 200, 227], "label": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 87, 127, 129, 135, 143, 144, 145, 146, 167, 171, 172, 173, 175, 176, 182, 200, 213, 215], "datatype1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties1": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "datatype2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "properties2": [11, 15, 16, 17, 18, 21, 22, 26, 27, 34, 38, 42, 43, 44, 46, 50, 51, 54, 55, 58, 60, 61, 65, 66, 67, 68, 69, 71], "view_from": [11, 15, 16, 17, 18, 22, 34, 46, 50, 51, 54, 55, 60, 63, 67, 68], "view_dest": [11, 22, 34, 50, 51, 60, 67, 68], "written": [11, 22, 34, 67, 68, 129, 135, 190, 192, 195, 207, 212, 224], "second": [11, 36, 38, 40, 42, 72, 74, 92, 94, 134, 143, 159, 160, 165, 174, 179, 180, 181, 183, 187, 190, 191, 192, 194, 195, 196, 200, 226], "comput": [11, 22, 34, 37, 59, 67, 68, 136, 145, 185, 187, 188, 189, 190, 193, 195, 196, 197, 198, 200, 201, 202, 218, 219, 224], "differ": [11, 73, 75, 76, 80, 81, 82, 87, 88, 94, 97, 168, 184, 185, 187, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 213, 215, 220, 222, 226], "adjac": 11, "pair": [11, 22, 36, 40, 41, 42, 46, 66, 69, 72, 74, 81, 91, 166, 174, 182, 187, 199, 215], "write": [11, 22, 34, 58, 66, 67, 68, 84, 94, 129, 135, 185, 186, 190, 193, 195, 196, 198, 199, 200, 204, 215], "them": [11, 58, 87, 129, 183, 184, 185, 190, 191, 192, 194, 196, 197, 198, 200, 220, 226], "binari": [11, 21, 22, 26, 27, 34, 36, 37, 39, 40, 41, 48, 61, 62, 66, 69, 70, 71, 72, 107, 184, 187, 196, 200, 207], "instanc": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 60, 65, 66, 69, 70, 71, 72, 75, 76, 77, 79, 87, 92, 94, 129, 135, 143, 150, 152, 168, 172, 173, 175, 176, 181, 184, 187, 194, 196, 199, 200, 224, 226], "name": [11, 15, 16, 18, 22, 23, 24, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 87, 92, 94, 129, 131, 135, 144, 145, 146, 147, 151, 175, 183, 184, 185, 188, 190, 195, 204, 207, 215, 217, 218, 221, 226, 227], "implement": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 73, 76, 82, 85, 89, 91, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 136, 138, 139, 145, 148, 149, 150, 152, 154, 156, 158, 160, 162, 167, 174, 175, 176, 179, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 200, 204, 212, 215, 218, 222, 225, 226], "debug": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 88, 127, 144, 145, 146, 175, 184, 185, 190, 200, 204, 205, 215, 221], "purpos": [11, 15, 16, 18, 22, 23, 24, 25, 32, 34, 35, 36, 37, 39, 40, 41, 43, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 76, 77, 85, 87, 94, 148, 150, 152, 175, 193, 195, 197, 199, 200, 203, 204, 207], "adjacent_difference_iterator_api_default": 11, "adjacent_difference_view_api_default": 11, "_from": [11, 22, 71], "repres": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 74, 76, 85, 94, 129, 134, 135, 136, 147, 163, 175, 179, 195, 198, 199, 200], "valid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 28, 30, 32, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 71, 75, 76, 77, 79, 81, 83, 84, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 128, 129, 131, 132, 144, 145, 146, 152, 174, 175, 176, 179, 181, 185, 190, 192, 195, 196, 197, 200], "check": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 81, 84, 88, 129, 131, 135, 136, 187, 191, 192, 200, 201, 205, 214, 215, 219], "mode": [11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 30, 32, 35, 36, 40, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 59, 60, 63, 65, 69, 70, 71, 184, 192, 197, 198, 210, 213], "pass": [11, 17, 22, 23, 24, 26, 27, 28, 30, 35, 36, 39, 40, 41, 46, 48, 51, 52, 55, 56, 61, 62, 67, 69, 72, 74, 76, 77, 78, 79, 94, 129, 130, 131, 132, 134, 174, 185, 191, 192, 193, 196, 199, 200, 201, 210, 213, 214, 215, 219, 220], "callabl": [11, 22, 48, 67, 69, 179, 180, 184], "value_typ": [11, 17, 22, 28, 30, 32, 35, 36, 40, 46, 48, 51, 52, 55, 56, 67, 69, 76, 77, 79, 82, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 145, 146, 163, 168, 175, 179, 180, 187, 189, 196, 220, 222], "conform": [11, 22, 28, 30, 35, 36, 40, 46, 48, 51, 52, 56, 67, 69], "return_typ": [11, 22, 32, 69, 225], "assign": [11, 22, 23, 24, 32, 33, 49, 52, 72, 74, 77, 78, 82, 84, 85, 87, 92, 121, 129, 131, 135, 144, 145, 152, 163, 179, 180, 183, 191, 192, 197, 199, 200, 212, 220], "binarypredicatetyp": [12, 21, 26, 27, 42, 61, 62], "pred": [12, 13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 38, 42, 45, 46, 47, 51, 52, 55, 56, 61, 62, 70, 71], "consecut": [12, 70, 71, 136, 152, 200, 220], "adjacent_find_iterator_api_default": 12, "adjacent_find_view_api_default": 12, "g": [12, 13, 14, 19, 20, 23, 25, 32, 33, 35, 45, 53, 76, 79, 87, 88, 92, 127, 128, 131, 133, 135, 139, 143, 147, 152, 167, 172, 173, 175, 179, 180, 184, 185, 190, 195, 196, 197, 200, 201, 213, 215, 221, 226], "c": [12, 13, 14, 19, 20, 25, 34, 45, 48, 69, 72, 75, 76, 77, 83, 84, 87, 89, 91, 97, 121, 129, 132, 134, 135, 136, 137, 138, 139, 144, 147, 153, 155, 157, 170, 175, 176, 179, 180, 181, 182, 185, 186, 190, 193, 195, 196, 197, 198, 200, 201, 205, 218, 219, 222, 225, 226], "similar": [12, 13, 14, 20, 26, 27, 38, 45, 61, 62, 72, 76, 78, 82, 87, 94, 175, 184, 194, 195, 198, 215, 220, 226], "inputiter": [13, 14, 25, 28, 29, 30, 31, 35, 43, 44, 50, 51, 58, 60, 66, 71], "predic": [13, 14, 17, 20, 21, 26, 27, 28, 29, 35, 42, 45, 46, 51, 52, 55, 56, 61, 62, 70, 71, 94], "satisfi": [13, 14, 35, 45, 46, 47, 82, 145, 167, 212], "unari": [13, 14, 17, 28, 35, 45, 46, 51, 52, 55, 56, 66, 67, 69, 94, 138], "all_of_iterator_api_default": 13, "all_of_view_api_default": 13, "v": [14, 17, 28, 30, 35, 45, 46, 51, 52, 55, 56, 67, 69, 77, 78, 80, 82, 155, 160, 163, 167, 172, 173, 174, 192, 207, 222], "least": [14, 78, 81, 87, 135, 136, 192, 198], "one": [14, 39, 40, 41, 42, 75, 76, 78, 87, 94, 131, 134, 135, 136, 138, 143, 151, 153, 154, 155, 156, 159, 167, 169, 170, 172, 173, 174, 175, 179, 180, 183, 184, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 213, 215, 217, 218, 220, 224, 225, 226], "any_of_iterator_api_default": 14, "any_of_view_api_default": 14, "first_to": [15, 17, 18, 43, 44, 50, 51, 54, 55, 58, 60, 66, 71], "view_to": [15, 16, 17, 18, 54, 55, 60], "anoth": [15, 16, 17, 18, 42, 54, 55, 78, 87, 94, 136, 151, 153, 154, 155, 156, 167, 174, 183, 190, 191, 192, 197, 198, 199, 200, 215, 220, 224], "overload": [15, 16, 17, 18, 22, 23, 24, 26, 27, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 48, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 69, 70, 71, 89, 90, 134, 138, 144, 145, 182, 184, 198, 199, 200, 224], "sourc": [15, 16, 43, 44, 46, 50, 54, 58, 60, 65, 66, 71, 75, 76, 151, 166, 175, 185, 195, 198, 201, 203, 207, 213, 215, 227], "destin": [15, 16, 17, 18, 46, 50, 54, 60, 66, 71, 76, 79, 175, 192, 220], "copy_iterator_api_default": 15, "copy_view_api_default": 15, "last_to": 16, "rel": [16, 49, 52, 159, 185, 197], "preserv": [16, 49, 52, 78, 87, 172, 173, 191], "copy_backward_iterator_api_default": 16, "copy_backward_view_api_default": 16, "unarypredicatetyp": [17, 51, 52, 55, 56], "copy_if_iterator_api_default": 17, "copy_if_view_api_default": 17, "convert": [17, 28, 35, 36, 40, 46, 51, 52, 55, 56, 84, 92, 94, 129, 131, 134, 160, 179, 180, 192, 198, 218, 219], "everi": [17, 28, 30, 35, 36, 40, 46, 51, 52, 55, 56, 70, 76, 81, 94, 151, 153, 154, 155, 156, 168, 174, 175, 183, 184, 185, 187, 190, 194, 198, 199, 200, 201, 212, 215, 221, 225, 226], "sizetyp": [18, 24, 31, 33, 62], "copy_n_if_iterator_api_default": 18, "copy_n_if_view_api_default": 18, "If": [18, 24, 33, 35, 63, 64, 74, 75, 76, 78, 84, 87, 88, 126, 127, 128, 132, 135, 144, 145, 146, 152, 167, 168, 173, 174, 175, 183, 184, 185, 186, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 212, 213, 219, 220, 222, 224, 226], "otherwis": [18, 21, 24, 33, 35, 63, 64, 74, 75, 76, 77, 78, 81, 83, 84, 88, 92, 94, 128, 129, 131, 152, 167, 175, 184, 191, 192, 196, 200, 201, 207, 213], "count_iterator_api_default": 19, "count_view_api_default": 19, "count_if_iterator_api_default": 20, "count_if_view_api_default": 20, "iteratortype1": [21, 26, 27, 38, 42, 61, 69], "iteratortype2": [21, 26, 27, 38, 42, 61, 69], "first1": [21, 38, 42, 65, 69], "last1": [21, 38, 42, 65, 69], "first2": [21, 38, 42, 65, 69], "view1": [21, 38, 42], "view2": [21, 38, 42], "binarypred": [21, 42, 70, 71], "fals": [21, 29, 35, 42, 74, 77, 81, 129, 131, 132, 133, 135, 167, 171, 198, 200], "via": [21, 26, 27, 37, 49, 52, 69, 76, 85, 86, 94, 118, 119, 124, 127, 135, 144, 145, 146, 148, 149, 150, 152, 154, 156, 158, 175, 183, 185, 188, 190, 191, 192, 200, 201, 212, 213, 214, 218, 220, 225], "equal_iterator_api_default": 21, "equal_view_api_default": 21, "valuetype1": [21, 39, 40, 41, 42], "valuetype2": [21, 39, 40, 41, 42], "isequalfunctor": [21, 42], "somehow": [21, 25, 28, 30, 35, 39, 40, 42], "creat": [21, 28, 30, 42, 72, 75, 78, 79, 81, 83, 87, 94, 97, 159, 167, 168, 171, 174, 176, 181, 183, 184, 185, 187, 192, 195, 212, 213, 214, 215, 220, 224], "p": [21, 28, 30, 42, 46, 75, 77, 79, 160, 172, 173, 185, 193, 200, 201, 215, 219], "isequ": 21, "assum": [21, 23, 24, 25, 28, 30, 42, 47, 53, 56, 75, 81, 87, 94, 131, 190, 192, 195, 196, 199, 200, 217, 220], "openmp": [21, 23, 24, 25, 28, 30, 42, 53, 56, 72, 85, 87, 88, 93, 148, 150, 152, 168, 185, 191, 193, 196, 197, 200, 201, 204, 205, 210, 213, 215, 222], "enabl": [21, 25, 28, 30, 42, 86, 88, 135, 149, 154, 156, 158, 185, 190, 191, 196, 197, 200, 202, 215, 221, 223, 225], "you": [21, 25, 28, 30, 42, 75, 94, 129, 132, 135, 138, 139, 147, 171, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 198, 199, 201, 202, 205, 206, 213, 224, 226], "explicitli": [21, 23, 24, 28, 30, 42, 53, 56, 76, 129, 160, 175, 185, 187, 190, 191, 192, 196, 198, 199, 215], "set": [22, 23, 24, 26, 27, 31, 34, 36, 37, 39, 40, 41, 48, 53, 56, 61, 62, 69, 72, 74, 75, 76, 77, 81, 82, 83, 87, 89, 97, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 131, 134, 138, 150, 151, 160, 163, 165, 169, 170, 171, 175, 177, 179, 180, 181, 183, 184, 185, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 205, 210, 213, 214, 215, 218, 222, 225, 226], "valuetyp": [22, 28, 30, 34, 35, 48, 49, 50, 56, 62, 67, 68, 69, 188, 189], "init_valu": [22, 34, 67, 68, 190], "binaryoptyp": [22, 34, 67, 68], "exclus": [22, 67, 146, 151, 196, 199, 220], "prefix": [22, 34, 67, 68, 90, 182, 185, 190, 191, 196, 197, 205], "sum": [22, 34, 67, 68, 72, 80, 90, 107, 121, 145, 153, 154, 155, 156, 157, 158, 186, 187, 188, 189, 190, 196], "result": [22, 30, 31, 34, 48, 63, 64, 66, 67, 68, 69, 74, 78, 79, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 128, 136, 145, 146, 152, 159, 175, 186, 187, 188, 189, 190, 192, 194, 195, 197, 199, 200, 215, 218, 219, 225, 226, 227], "scan": [22, 34, 67, 68, 72, 74, 146, 151, 152, 190, 195, 197, 200, 220], "combin": [22, 34, 76, 87, 102, 104, 105, 121, 135, 145, 146, 175, 187, 190, 193, 197, 200, 210, 213, 225], "th": [22, 34, 67, 68, 74, 174], "exclusive_scan_iterator_api_default": 22, "exclusive_scan_view_api_default": 22, "fill_iterator_api_default": 23, "fill_view_api_default": 23, "directli": [23, 24, 39, 40, 41, 84, 94, 129, 135, 184, 185, 190, 191, 192, 197, 198, 200], "22": [23, 215], "fill_n_iterator_api_default": 24, "fill_n_view_api_default": 24, "someth": [24, 53, 56, 78, 87, 143, 147, 179, 180, 183, 185, 194, 195, 224, 226], "newvalu": [24, 53, 56], "forward": [25, 74, 132, 184, 192, 197, 213, 220], "find_iterator_api_default": 25, "find_view_api_default": 25, "found": [25, 28, 37, 74, 78, 81, 84, 102, 105, 121, 183, 184, 185, 194, 195, 197, 198, 215, 226], "cbegin": [25, 35], "cend": [25, 35], "host": [25, 72, 73, 74, 75, 76, 77, 80, 81, 82, 88, 129, 131, 135, 138, 167, 168, 175, 185, 190, 191, 192, 194, 196, 197, 200, 201, 215, 216, 220, 221, 225, 226], "s_first": [26, 27, 61], "s_last": [26, 27, 61], "s_view": [26, 27, 61], "occurr": [26, 61], "find_end_iterator_api_default": 26, "find_end_view_api_default": 26, "find_first_of_iterator_api_default": 27, "find_first_of_view_api_default": 27, "predicatetyp": [28, 29, 30, 35, 46, 47], "find_if_iterator_api_default": 28, "find_if_view_api_default": 28, "operand": [28, 30, 35, 48], "evalu": [28, 42, 76, 129, 175, 192, 196, 215, 219], "equalsvalu": 28, "m_valu": [28, 30], "equalsvalfunctor": 28, "find_if_not_iterator_api_default": 29, "find_if_not_view_api_default": 29, "unaryfunctortyp": [30, 31], "func": [30, 31, 136, 138], "for_each_iterator_api_default": 30, "for_each_view_api_default": 30, "signatur": [30, 144, 145, 146, 196, 219], "incrementvalsfunctor": 30, "increment": [30, 37, 183, 192, 195, 200], "for_each_n_iterator_api_default": 31, "for_each_n_view_api_default": 31, "generatortyp": [32, 33], "generate_iterator_api_default": 32, "generate_view_api_default": 32, "form": [32, 94, 129, 131, 133, 145, 146, 181, 193, 195, 197, 200, 207, 214, 222, 225], "being": [32, 87, 89, 94, 121, 139, 140, 141, 142, 152, 161, 174, 183, 190, 195, 198, 200, 227], "generate_n_iterator_api_default": 33, "generate_n_view_api_default": 33, "11": [34, 41, 48, 69, 78, 184, 185, 196, 209, 210, 213, 215], "12": [34, 48, 69, 72, 168, 185, 201, 202, 209, 210, 220], "inclus": [34, 68, 146, 182, 196, 199], "op": [34, 72, 79, 84, 98, 168, 183, 200], "first_last": [34, 67, 68], "inclusive_scan_iterator_api_default": 34, "inclusive_scan_view_api_default": 34, "appear": [35, 49, 52, 87, 136, 183, 200, 220], "don": [35, 72, 75, 87, 167, 175, 183, 184, 196, 210, 213], "empti": [35, 39, 40, 41, 75, 82, 182, 225], "is_partitioned_iterator_api_default": 35, "is_partitioned_view_api_default": 35, "isneg": 35, "zero": [35, 72, 76, 77, 78, 80, 94, 131, 135, 151, 175, 190, 191, 199, 200, 201], "re": [35, 39, 40, 41, 87, 94, 129, 135, 147, 163, 185, 194, 196, 200, 225, 226], "comparatortyp": [36, 37, 38, 39, 40, 41], "is_sorted_iterator_api_default": 36, "is_sorted_view_api_default": 36, "examin": [36, 40, 47, 70, 215], "less": [36, 38, 39, 40, 41, 63, 64, 87, 136, 159, 186, 191, 198, 200, 210, 219, 220], "than": [36, 38, 39, 40, 41, 63, 64, 74, 76, 77, 78, 87, 94, 129, 131, 135, 136, 152, 174, 175, 182, 183, 185, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202, 210, 219, 224], "your": [36, 40, 75, 129, 184, 185, 186, 191, 196, 198, 200, 201, 203, 220, 226], "logic": [36, 39, 40, 41, 49, 52, 70, 72, 76, 107, 109, 110, 111, 175, 183, 185, 187, 190, 195, 197, 198, 200, 225], "largest": [37, 39, 41, 79, 82, 136, 197], "comparison": [37, 54, 72, 138, 183, 186], "is_sorted_until_iterator_api_default": 37, "is_sorted_until_view_api_default": 37, "is_same_v": [37, 87], "decltyp": [37, 63, 64, 84, 139, 166, 167, 168, 174, 182, 199], "algoritm": [37, 81], "last2": [38, 42], "lexicograph": 38, "lexicographical_compare_iterator_api_defaul": 38, "lexicographical_compare_view_api_default": 38, "max_element_iterator_api_default": 39, "max_element_view_api_default": 39, "case": [39, 40, 41, 75, 76, 78, 87, 91, 94, 145, 147, 167, 168, 175, 182, 185, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 204, 205, 217, 220, 222, 223, 224], "sever": [39, 40, 41, 87, 89, 185, 195, 196, 204, 212, 215, 221], "custom": [39, 40, 41, 76, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 175, 190, 196, 200, 209, 212, 219, 228], "customlessthancompar": [39, 40, 41], "put": [39, 40, 41, 184, 192, 196, 197, 227], "smallest": [40, 41, 136], "min_element_iterator_api_default": 40, "min_element_view_api_default": 40, "minmax_element_iterator_api_default": 41, "minmax_element_view_api_default": 41, "itpair": 41, "mismatch_iterator_api_default": 42, "mismatch_view_api_default": 42, "exampl": [42, 75, 81, 86, 93, 94, 138, 147, 178, 183, 185, 186, 187, 190, 192, 193, 194, 195, 197, 199, 200, 201, 204, 205, 215, 218, 219, 220, 221, 226], "cpp": [42, 131, 185], "mismatchfunctor": 42, "mismatch_index": 42, "outputiter": [43, 44, 50, 51, 58, 60, 66, 71], "dest": [43, 44, 58, 60, 65, 66, 71, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 168, 189], "move_iterator_api_default": 43, "move_view_api_default": 43, "move_backward_iterator_api_default": 44, "move_backward_view_api_default": 44, "none_of_iterator_api_default": 45, "none_of_view_api_default": 45, "outputiteratortruetyp": 46, "outputiteratorfalsetyp": 46, "from_first": 46, "from_last": 46, "to_first_tru": 46, "to_first_fals": 46, "datatype3": [46, 66], "properties3": [46, 66], "view_dest_tru": 46, "view_dest_fals": 46, "view_tru": 46, "view_fals": 46, "partition_copy_iterator_api_default": 46, "partition_copy_view_api_default": 46, "NOT": [46, 151, 159, 196, 207, 213], "contain": [46, 49, 52, 74, 75, 81, 94, 131, 134, 144, 145, 146, 151, 164, 167, 169, 170, 171, 172, 173, 175, 176, 182, 184, 185, 187, 190, 191, 192, 194, 195, 198, 204, 215, 220, 224, 226, 227], "locat": [47, 75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 135, 175, 185, 190, 195, 197, 200, 201, 205, 215, 218, 223], "alreadi": [47, 76, 78, 81, 85, 87, 168, 175, 184, 193, 196, 213, 217], "is_part": 47, "partition_point_iterator_api_default": 47, "partition_point_view_api_default": 47, "elment": 47, "init_reduction_valu": [48, 69], "joiner": [48, 69], "reduct": [48, 69, 72, 79, 87, 90, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 151, 152, 187, 188, 189, 190, 195, 197, 209, 222, 228], "account": [48, 68, 152], "join": [48, 69, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 145, 146, 182, 186, 187, 189, 190, 195, 215, 220], "dure": [48, 86, 121, 150, 152, 174, 183, 190, 191, 192, 197, 200, 201, 212, 215, 217, 220, 224], "reduce_iterator_api_default": 48, "reduce_view_api_default": 48, "joinfunctor": [48, 69], "behavior": [48, 69, 75, 94, 127, 128, 129, 131, 132, 150, 175, 184, 197, 198, 200, 201, 226], "associ": [48, 69, 72, 76, 94, 107, 129, 133, 135, 147, 151, 159, 174, 175, 187, 190, 195, 196, 200, 220, 222, 224], "commut": [48, 69], "shift": [49, 52, 63, 64, 102, 105], "remain": [49, 52, 87, 128, 195], "physic": [49, 52, 74, 152, 190, 194, 197, 200, 226], "size": [49, 52, 72, 74, 75, 76, 77, 81, 82, 87, 90, 127, 128, 135, 140, 141, 142, 148, 150, 152, 169, 170, 171, 175, 179, 180, 190, 192, 196, 197, 198, 200, 219, 220, 223, 225], "unchang": [49, 52, 81], "remove_iterator_api_default": 49, "remove_view_api_default": 49, "target": [49, 50, 72, 75, 94, 129, 144, 185, 192, 193, 195, 197, 204, 205, 215], "new": [49, 50, 51, 52, 59, 60, 70, 74, 75, 79, 87, 89, 94, 99, 100, 101, 104, 106, 128, 129, 131, 132, 135, 139, 147, 159, 167, 171, 172, 173, 174, 177, 183, 184, 187, 190, 192, 193, 194, 195, 196, 200, 201, 206, 212, 213, 214, 221, 225, 226], "ther": [50, 57], "omit": [50, 51, 75, 76, 126, 127, 128, 175], "those": [50, 51, 74, 75, 78, 92, 94, 145, 160, 184, 185, 190, 192, 199, 200, 213, 217, 220], "remove_copy_iterator_api_default": 50, "remove_copy_view_api_default": 50, "remove_copy_if_iterator_api_default": 51, "remove_copy_if_view_api_default": 51, "remove_if_iterator_api_default": 52, "remove_if_view_api_default": 52, "old_valu": [53, 54, 99, 100, 101, 102, 105], "new_valu": [53, 54, 55, 56, 99, 100, 101, 106], "replace_iterator_api_default": 53, "replace_view_api_default": 53, "self": [53, 54, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135], "explanatori": [53, 54, 161], "oldvalu": [53, 56], "mylabel": [53, 56], "replace_copy_iterator_api_default": 54, "replace_copy_view_api_default": 54, "replace_copy_if_iterator_api_default": 55, "replace_copy_if_view_api_default": 55, "replace_if_iterator_api_default": 56, "replace_if_view_api_default": 56, "ispositivefunctor": 56, "val": [56, 82, 102, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 124, 187, 189, 200], "reverse_iterator_api_default": 57, "reverse_view_api_default": 57, "reverse_copy_iterator_api_default": 58, "reverse_copy_view_api_default": 58, "n_first": [59, 60], "n_locat": [59, 60], "wai": [59, 60, 75, 81, 83, 84, 87, 94, 177, 183, 184, 185, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 207, 219, 220, 223, 224, 226], "rotate_iterator_api_default": 59, "rotate_view_api_default": 59, "identifi": [59, 60, 143, 151, 185, 190, 194, 201, 215, 217, 226], "about": [59, 60, 85, 87, 88, 92, 129, 135, 138, 147, 148, 150, 152, 159, 182, 184, 194, 195, 196, 197, 198, 200, 201, 205, 223, 226], "rotate_copy_iterator_api_default": 60, "rotate_copy_view_api_default": 60, "search_iterator_api_default": 61, "search_view_api_default": 61, "search_n_iterator_api_default": 62, "search_n_view_api_default": 62, "posit": [63, 64, 74, 174, 199, 225], "toward": [63, 64, 193, 195], "shift_left_iterator_api_default": 63, "shift_left_view_api_default": 63, "shift_right_iterator_api_default": 64, "shift_right_view_api_default": 64, "iterator1": 65, "iterator2": 65, "swap_ranges_iterator_api_default": 65, "swap_ranges_view_api_default": 65, "unaryoper": 66, "unary_op": [66, 67, 68], "d_first": 66, "inputiterator1": 66, "inputiterator2": 66, "binaryoper": 66, "first_from1": 66, "last_from1": 66, "first_from2": 66, "binary_op": [66, 67, 68], "source1": 66, "source2": 66, "store": [66, 72, 75, 76, 77, 80, 81, 94, 99, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 132, 145, 175, 183, 186, 187, 190, 195, 196, 197, 198, 200, 217, 219, 220, 223], "last_from2": 66, "transform_iterator_api_default": 66, "transform_view_api_default": 66, "tranform": 66, "unaryoptyp": [67, 68], "except": [67, 68, 70, 129, 132, 133, 134, 135, 160, 184, 196, 200, 201, 215], "transform_exclusive_scan_iterator_api_default": 67, "transform_exclusive_scan_view_api_default": 67, "unaryop": 67, "transform_inclusive_scan_iterator_api_default": 68, "transform_inclusive_scan_view_api_default": 68, "first_view": 69, "second_view": 69, "binaryjoinertyp": 69, "binarytransform": 69, "binary_transform": 69, "unarytransform": 69, "unary_transform": 69, "product": [69, 76, 77, 175, 187, 190, 194, 199, 200, 207, 219, 226], "along": [69, 87, 199, 218], "transform_reduce_iterator_api_default": 69, "transform_reduce_view_api_default": 69, "value_type_a": 69, "value_type_b": 69, "value_type_": 69, "elimin": [70, 76, 77, 175], "group": [70, 190, 195, 197, 215], "unique_iterator_api_default": 70, "unique_ranges_view_api_default": 70, "unique_copy_iterator_api_default": 71, "unique_copy_ranges_view_api_default": 71, "librari": [72, 84, 87, 89, 91, 131, 136, 138, 139, 160, 182, 183, 184, 185, 191, 193, 195, 200, 201, 215, 220, 223, 224, 227, 228], "categori": [72, 177, 183, 185, 193, 195, 214, 215], "descript": [72, 73, 82, 83, 85, 88, 90, 97, 107, 121, 122, 129, 131, 151, 183, 185, 191, 205, 213, 215], "plu": [72, 122, 124, 127, 183, 190, 196, 219], "random_xorshift1024_pool": 72, "1024": [72, 77, 151, 188, 189, 190], "random_xorshift1024": 72, "sampl": [72, 188, 189], "fit": [72, 94, 190, 197, 207], "bitset": [72, 73, 81], "concurr": [72, 73, 81, 129, 144, 145, 146, 185, 187, 195, 196, 197, 225], "dualview": [72, 73, 82, 87, 88, 177, 228], "mirror": [72, 73, 75, 78, 167, 182], "dynamicview": [72, 73, 177], "dynam": [72, 76, 77, 85, 88, 94, 131, 148, 150, 152, 172, 173, 175, 195, 200, 201, 225], "dynrankview": [72, 73, 168, 177], "determin": [72, 73, 76, 88, 148, 152, 155, 174, 175, 179, 180, 185, 190, 191, 195, 196, 197, 200, 201, 212, 219, 220, 225], "runtim": [72, 73, 76, 78, 79, 85, 129, 131, 148, 150, 175, 187, 190, 192, 197, 200, 205, 224, 226], "errorreport": 72, "support": [72, 75, 78, 82, 84, 87, 88, 94, 129, 131, 132, 135, 138, 179, 180, 184, 185, 186, 190, 192, 196, 198, 200, 201, 205, 215, 220, 222, 228], "error": [72, 138, 161, 175, 192, 195, 199, 200, 201, 206, 210, 213, 215, 224], "record": [72, 87], "code": [72, 75, 77, 87, 88, 90, 94, 129, 135, 151, 168, 183, 184, 185, 186, 188, 190, 195, 196, 197, 199, 200, 201, 204, 205, 207, 209, 210, 212, 215, 216, 219, 220, 223, 224, 225, 227], "offsetview": [72, 73, 87, 177, 182], "indici": [72, 117, 183], "scatterview": [72, 73, 177, 216, 228], "transpart": 72, "replic": [72, 183, 192, 215], "strategi": [72, 87, 94, 131, 183, 226], "scatter": [72, 79, 183], "staticcrsgraph": [72, 73, 200], "resiz": [72, 75, 79, 82, 97, 172, 192], "graph": [72, 80, 83, 94, 228], "semant": [72, 76, 78, 82, 94, 175, 184, 190, 192, 196, 200, 204, 220], "unorderedmap": [72, 73, 200], "map": [72, 73, 76, 80, 81, 175, 190, 191, 192, 197, 200, 217, 219, 220], "optim": [72, 88, 150, 183, 185, 190, 192, 193, 195, 197, 200, 201, 205, 220, 226], "insert": [72, 197, 200], "interfac": [72, 82, 87, 93, 94, 149, 154, 156, 158, 177, 178, 184, 190, 192, 193, 195, 199, 200, 218, 224, 226], "abort": [72, 96], "util": [72, 83, 129, 160, 185, 190, 195, 215, 218, 223], "caus": [72, 161, 184, 192, 195, 200, 207], "abnorm": [72, 161], "program": [72, 82, 92, 94, 97, 133, 134, 135, 147, 161, 191, 192, 193, 194, 198, 199, 200, 202, 215, 217, 220, 225, 226, 227], "termin": [72, 132, 133, 134, 161], "dimens": [72, 73, 75, 78, 79, 87, 148, 162, 169, 170, 171, 172, 173, 174, 176, 190, 192, 218, 219], "atomic_exchang": [72, 98, 183], "exchang": [72, 99, 100, 101, 183, 216], "old": [72, 75, 79, 132, 173, 183, 196, 200], "atomic_compare_exchang": [72, 98, 183], "match": [72, 75, 76, 78, 82, 97, 144, 145, 146, 148, 160, 167, 169, 170, 175, 183, 185, 190, 200], "atomic_compare_exchange_strong": [72, 98, 183], "atomic_load": [72, 98, 183], "load": [72, 76, 87, 88, 94, 131, 175, 183, 190, 196, 197, 198, 205, 213, 215], "atomic_": [72, 98, 183], "anyth": [72, 94, 164, 183, 184], "atomic_fetch_": [72, 98, 183], "variou": [72, 75, 83, 183, 185, 214, 215], "_fetch": [72, 98, 183], "atomic_stor": [72, 98, 183], "band": [72, 107, 121, 187, 190], "bor": [72, 107, 121, 187, 190], "Or": [72, 107, 225], "stl": [72, 83], "compat": [72, 73, 76, 77, 78, 82, 83, 88, 92, 129, 134, 135, 145, 146, 160, 168, 175, 185, 191, 192, 194, 200, 206, 209, 218, 226], "work": [72, 73, 75, 76, 79, 81, 82, 83, 85, 87, 91, 121, 129, 132, 138, 143, 144, 145, 146, 148, 150, 152, 160, 168, 175, 180, 183, 184, 185, 187, 190, 192, 195, 196, 197, 198, 199, 200, 210, 213, 215, 216, 219, 220, 221, 224], "create_mirror": [72, 97, 200], "create_mirror_view": [72, 167, 168, 192, 200, 222], "cudaspac": [72, 87, 88, 93, 175, 192, 200, 222], "primari": [72, 84, 94, 184, 185, 191, 210, 213, 215], "cudauvmspac": [72, 87, 88, 93, 192, 194, 200, 201, 226], "unifi": [72, 87, 135, 205], "page": [72, 94, 121, 129, 135, 147, 185, 200, 202, 205], "migrat": [72, 135, 221], "alloc": [72, 74, 75, 76, 77, 81, 82, 87, 92, 94, 97, 125, 126, 127, 128, 129, 135, 152, 159, 167, 169, 170, 171, 173, 175, 176, 183, 185, 190, 193, 194, 195, 197, 198, 200, 201, 220, 221, 222, 223, 226], "cudahostpinnedspac": [72, 93, 175, 200], "memrori": 72, "pin": [72, 135, 185], "gpu": [72, 76, 88, 91, 131, 135, 167, 175, 182, 185, 190, 191, 192, 193, 195, 197, 198, 200, 201, 205, 215, 220, 221, 223], "executionpolici": [72, 95, 144, 145, 146], "concept": [72, 83, 94, 95, 107, 121, 129, 135, 145, 147, 151, 169, 170, 171, 184, 186, 189, 190, 193, 195, 197, 202, 228], "hpx": [72, 85, 87, 88, 93, 148, 150, 152, 191, 204, 205], "system": [72, 87, 94, 129, 135, 184, 190, 191, 195, 197, 200, 201, 202, 214, 215, 224], "mechan": [72, 87, 147, 190, 192, 193, 197, 200], "initargu": [72, 131, 132, 134, 182, 191], "programmat": [72, 130, 131, 134], "how": [72, 76, 85, 121, 129, 135, 147, 148, 175, 183, 184, 185, 186, 190, 191, 192, 193, 195, 196, 197, 198, 201, 220], "deprec": [72, 77, 87, 88, 130, 131, 134, 204, 205, 221], "initializationset": [72, 130, 132, 134, 182], "is_array_layout": [72, 87], "trait": [72, 75, 76, 77, 83, 84, 89, 92, 129, 137, 138, 150, 152, 166, 175, 190, 223], "detect": [72, 83, 95, 139, 169, 170, 171, 201], "model": [72, 92, 94, 95, 153, 154, 155, 156, 157, 158, 169, 170, 171, 185, 192, 193, 196, 198, 200, 202, 209, 220], "layout": [72, 75, 77, 78, 79, 95, 97, 167, 169, 170, 171, 172, 173, 192, 193, 195, 199], "is_execution_polici": 72, "is_execution_spac": [72, 87, 129], "is_memory_spac": [72, 87, 135], "memoryspac": [72, 76, 92, 95, 126, 127, 128, 129, 135, 175, 200], "is_memory_trait": 72, "memorytrait": [72, 75, 76, 87, 95, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 175, 183, 190, 200, 223], "is_reduc": [72, 182], "is_spac": [72, 129], "fortran": [72, 76, 97, 169, 175, 185, 199, 200, 210, 216, 228], "arbitrari": [72, 76, 85, 97, 148, 150, 152, 171, 175, 186, 189, 190, 197, 199, 200], "stride": [72, 75, 79, 97, 171, 192, 199, 218], "kokkos_fre": [72, 125, 127, 128, 192, 221], "delloc": 72, "previous": [72, 99, 101, 125, 126, 128, 135, 175, 185, 186, 190, 197, 227], "kokkos_malloc": [72, 125, 126, 128, 192, 194, 221, 226], "kokkos_realloc": [72, 125, 126, 192], "expand": [72, 94, 125, 191], "block": [72, 94, 125, 127, 143, 159, 185, 190, 192, 193, 199, 222], "land": [72, 107, 108, 109, 111, 121, 187, 190, 215], "built": [72, 76, 83, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 175, 185, 186, 189, 190, 191, 200, 215], "lor": [72, 107, 121, 187, 190], "maxloc": [72, 107, 118, 121, 124, 187, 190], "index": [72, 74, 76, 77, 78, 81, 82, 107, 113, 115, 116, 117, 118, 122, 124, 148, 149, 150, 153, 154, 155, 156, 157, 158, 169, 170, 174, 175, 181, 183, 187, 190, 192, 194, 196, 199, 226], "u": [72, 160, 179, 181, 185, 207], "mdrangepolici": [72, 76, 85, 87, 144, 145, 175, 216, 228], "multidimension": [72, 76, 83, 85, 97, 148, 169, 170, 171, 187, 190, 192, 199, 209, 219], "min": [72, 102, 105, 107, 113, 115, 116, 117, 118, 119, 121, 122, 124, 139, 145, 183, 187, 190, 227], "minloc": [72, 107, 118, 121, 187, 190], "minmax": [72, 107, 119, 121, 186, 187, 190], "minmaxloc": [72, 107, 118, 121, 187, 190], "openmptarget": [72, 87, 88, 93, 185, 191], "targetoffload": 72, "analogu": 72, "bulk": [72, 197], "item": [72, 85, 129, 146, 148, 150, 152, 190, 195, 220, 224], "parallelfortag": [72, 90, 152], "tag": [72, 76, 85, 87, 140, 141, 142, 145, 148, 150, 152, 169, 170, 171, 175, 189, 190, 198, 213, 214, 216, 220], "team_siz": [72, 151, 152, 190], "contribut": [72, 79, 145, 146, 183, 187, 190, 204, 212, 217, 222], "parallelreducetag": [72, 90, 152], "parallel_scan": [72, 90, 142, 143, 158, 190, 196, 197, 220, 221], "simpl": [72, 121, 129, 165, 183, 187, 190, 192, 195, 196, 197, 198, 199, 200, 201, 218, 219, 220, 224], "pre": [72, 146, 159, 179, 180, 185, 217], "postfix": [72, 197], "depend": [72, 88, 94, 135, 145, 152, 153, 157, 183, 184, 185, 186, 190, 195, 196, 197, 198, 201, 219, 221, 222, 226], "parallelscantag": [72, 90], "partition_spac": [72, 93], "split": [72, 85, 149, 153, 154, 155, 156, 157, 158, 190, 196, 225], "exist": [72, 75, 81, 84, 87, 88, 143, 145, 151, 168, 172, 173, 184, 185, 191, 195, 197, 198, 199, 200, 212, 215, 220], "multipl": [72, 87, 88, 94, 107, 145, 183, 185, 190, 191, 192, 195, 196, 198, 200, 201, 204, 205, 215, 220, 224], "perteam": [72, 151, 152, 153, 154, 155, 156, 158, 187, 190], "singl": [72, 94, 145, 149, 150, 153, 154, 155, 156, 158, 179, 180, 187, 192, 193, 195, 196, 197, 199, 200, 201, 219], "construct": [72, 74, 75, 76, 77, 79, 81, 82, 86, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 134, 135, 165, 169, 170, 171, 172, 173, 175, 181, 186, 190, 192, 195, 196, 198, 199], "indic": [72, 76, 78, 79, 80, 81, 87, 107, 118, 122, 129, 140, 141, 142, 151, 175, 183, 187, 190, 197, 199, 200, 219, 225], "per": [72, 94, 152, 187, 190, 191, 192, 196, 197, 199, 200, 217, 220], "perthread": [72, 152, 158, 190], "prod": [72, 107, 121, 187, 190], "rangepolici": [72, 85, 87, 129, 144, 145, 146, 147, 159, 190, 192, 196, 200, 222, 224], "1d": [72, 76, 144, 145, 146, 150, 152, 175, 192, 200, 218], "realloc": [72, 75, 79, 97, 127, 128, 173, 200], "maintain": [72, 87, 184], "reducerconcept": [72, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 189], "cpu": [72, 88, 129, 135, 167, 182, 183, 185, 190, 191, 197, 198, 205, 213, 215], "scopeguard": [72, 134], "aggreg": [72, 86, 190], "spaceaccess": [72, 92, 129, 135, 167, 168, 200], "facil": [72, 89, 97, 139, 167, 177], "queri": [72, 131, 182, 200], "rule": [72, 77, 184], "multi": [72, 76, 144, 145, 175, 187, 193, 201], "dimension": [72, 76, 144, 145, 175, 199, 200], "arrai": [72, 75, 76, 77, 78, 79, 80, 82, 94, 97, 132, 134, 145, 148, 169, 170, 171, 175, 183, 187, 188, 189, 190, 192, 199, 209, 215, 216, 217, 220], "crate": [72, 215], "slice": [72, 97, 223, 228], "teamhandl": [72, 149, 153, 154, 155, 156, 157, 158], "teamthreadmdrang": [72, 85], "teamvectormdrang": [72, 85, 157], "teamvectorrang": [72, 85, 157, 158], "threadvectormdrang": [72, 85], "timer": [72, 96, 143], "basic": [72, 76, 87, 138, 147, 175, 185, 192, 193, 201, 202, 221], "like": [72, 75, 76, 77, 81, 87, 94, 97, 129, 135, 144, 147, 168, 175, 183, 184, 185, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 217, 224, 226], "act": [72, 87, 193, 199], "comment": [73, 185], "offset": [73, 78, 190, 197, 200], "unord": [73, 81], "kokkos_bitset": [74, 182], "safe": [74, 192, 195, 196, 197, 200], "fix": [74, 81, 86, 184, 192, 200, 212, 213, 223], "run": [74, 88, 94, 134, 135, 144, 183, 184, 185, 187, 190, 191, 192, 194, 195, 196, 197, 200, 201, 213, 215, 221, 222, 226], "time": [74, 75, 76, 85, 87, 88, 92, 94, 129, 148, 150, 152, 165, 175, 179, 180, 183, 184, 185, 190, 195, 196, 197, 198, 199, 200, 201, 205, 212, 213, 215, 219, 221, 224], "paramet": [74, 75, 81, 85, 94, 97, 121, 129, 131, 135, 147, 151, 176, 182, 185, 187, 191, 196, 198, 200, 201, 210, 215, 219, 222, 224], "constant": [74, 78, 83, 89, 129, 136, 138, 139, 162, 179, 180, 196], "bit_scan_revers": 74, "1u": [74, 199], "mask": [74, 180, 181, 191, 198], "direct": [74, 167, 190, 191, 198, 199, 200, 207, 215], "move_hint_backward": 74, "2u": 74, "hint": [74, 76, 85, 94, 148, 150, 152, 159, 175], "bit_scan_forward_move_hint_forward": 74, "0u": 74, "when": [74, 81, 82, 86, 87, 88, 91, 94, 129, 134, 135, 145, 149, 152, 169, 170, 171, 181, 183, 184, 185, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 210, 215, 218, 219, 221, 222, 225, 226, 227], "scan_direct": 74, "find_any_set_near": 74, "find_any_reset_near": 74, "increas": [74, 76, 81, 87, 175, 184, 192, 200, 205], "wa": [74, 75, 81, 88, 94, 128, 130, 131, 132, 167, 179, 180, 185, 187, 190, 191, 192, 200, 201, 213, 219, 221], "bit_scan_reverse_move_hint_forward": 74, "decreas": 74, "bit_scan_forward_move_hint_backward": 74, "bit_scan_reverse_move_hint_backward": 74, "constructor": [74, 75, 78, 82, 85, 132, 134, 144, 163, 167, 172, 173, 182, 188, 189, 190, 196, 199, 200], "arg_siz": 74, "reset": [74, 75, 79, 165, 185], "clear": [74, 81, 82, 87, 184], "test": [74, 88, 138, 143, 185, 192, 196, 200, 201, 204, 205, 210, 212, 213], "max_hint": 74, "happen": [74, 76, 77, 94, 99, 100, 175, 183, 190, 191, 192, 194, 200, 213, 215, 226], "occur": [74, 91, 168, 191, 195, 201, 218, 219, 221], "smaller": [74, 76, 77, 174, 175, 192, 215], "find_any_unset_near": 74, "is_alloc": [74, 75, 76, 77, 79, 81, 82, 175], "rh": [74, 76, 77, 118, 119, 124, 175, 179, 180, 188, 189, 222], "dstdevic": 74, "srcdevic": 74, "dst": [74, 87, 145, 196], "src": [74, 75, 79, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 145, 163, 167, 168, 185, 188, 189, 196, 219], "refer": [75, 76, 77, 79, 82, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 138, 139, 152, 168, 174, 175, 179, 180, 181, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 199, 201, 204, 206, 215, 224], "capabl": [75, 83, 135, 185, 190, 191, 192, 197, 198, 212], "well": [75, 76, 87, 92, 94, 121, 143, 148, 150, 151, 175, 184, 185, 187, 190, 192, 193, 195, 196, 197, 199, 200, 213, 215, 220], "flag": [75, 129, 134, 175, 179, 181, 185, 196, 201, 210, 213, 215], "respons": [75, 191, 192, 195, 198, 212], "manual": [75, 185, 201, 213, 219], "sync": 75, "method": [75, 77, 78, 82, 87, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 185, 189, 195, 196, 198, 200, 219, 226], "synchron": [75, 82, 135, 149, 159, 168, 190, 195, 197, 222], "conveni": [75, 79, 84, 129, 192, 196, 199], "capac": [75, 81, 190, 195], "appropri": [75, 80, 94, 121, 185, 190, 195, 196, 197, 199, 200, 201, 212, 215], "underli": [75, 76, 77, 78, 82, 94, 159, 175, 183, 192, 193, 195, 197, 200, 223], "four": [75, 200, 205, 213], "separ": [75, 87, 183, 185, 191, 196, 200, 213, 223, 224], "intend": [75, 84, 87, 89, 160, 185, 190, 194, 200, 226], "pleas": [75, 129, 135, 138, 139, 147, 184, 185, 200, 202, 203, 215], "document": [75, 87, 91, 129, 135, 144, 145, 147, 166, 179, 180, 184, 185, 194, 207, 212, 219, 220, 226], "suffic": 75, "most": [75, 76, 87, 94, 129, 134, 135, 136, 138, 147, 167, 171, 175, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 200, 201, 202, 210, 213, 215, 217, 219, 222, 226], "usag": [75, 76, 77, 79, 82, 91, 99, 100, 101, 102, 103, 104, 105, 131, 132, 133, 134, 143, 144, 152, 153, 155, 157, 158, 159, 160, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 185, 192, 197, 199, 200, 201, 218], "m": [75, 87, 149, 150, 154, 156, 158, 175, 181, 187, 192, 199, 215, 222], "d_view": [75, 168], "execution_spac": [75, 76, 77, 81, 87, 92, 129, 135, 150, 151, 152, 168, 175, 190, 192, 196, 200, 220, 223], "host_mirror_spac": [75, 76, 167, 175], "h_view": [75, 168], "arg1typ": [75, 82], "arg2typ": 75, "arg3typ": 75, "viewtrait": [75, 77], "data_typ": [75, 76, 77, 175], "t_dev": 75, "hostmirror": [75, 76, 77, 167, 175, 192, 222], "t_host": 75, "const_data_typ": [75, 76, 77, 175], "t_dev_const": 75, "t_host_const": 75, "array_layout": [75, 76, 87, 129, 168, 169, 170, 171, 172, 173, 175, 200], "randomaccess": [75, 76, 175, 200], "t_dev_const_randomread": 75, "t_host_const_randomread": 75, "unmanag": [75, 76, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 171, 175, 176, 190, 192, 218, 228], "memoryunmanag": [75, 189, 218], "t_dev_um": 75, "t_host_um": 75, "t_dev_const_um": 75, "t_host_const_um": 75, "t_dev_const_randomread_um": 75, "t_host_const_randomread_um": 75, "counter": 75, "keep": [75, 138, 199, 200, 223], "track": [75, 138, 204, 212], "t_modified_flag": 75, "modified_flag": 75, "modified_host": 75, "modified_devic": 75, "unmodifi": 75, "analog": [75, 94, 168], "benefit": 75, "nonzero": 75, "n0": [75, 76, 79, 148, 153, 155, 157, 162, 166, 169, 170, 171, 172, 173, 174, 175, 199, 200], "kokkos_impl_ctor_default_arg": [75, 172, 173], "n1": [75, 76, 79, 148, 153, 155, 157, 159, 162, 166, 169, 170, 171, 172, 173, 174, 175, 199, 200], "n2": [75, 79, 148, 153, 155, 157, 159, 166, 169, 170, 171, 172, 173, 174, 175, 200], "n3": [75, 79, 153, 155, 157, 159, 169, 170, 171, 172, 173, 175, 200], "n4": [75, 79, 169, 170, 171, 172, 173, 175], "n5": [75, 79, 169, 170, 171, 172, 173, 175], "n6": [75, 79, 169, 170, 171, 172, 173, 175], "n7": [75, 79, 169, 170, 171, 172, 173, 175], "wrap": [75, 76, 175, 176, 185, 192, 200], "up": [75, 77, 87, 94, 133, 136, 169, 170, 171, 184, 185, 190, 191, 196, 197, 200, 214, 215, 225], "viewctor": 75, "thing": [75, 87, 129, 177, 184, 185, 192, 194, 195, 197, 198, 200, 226], "ctor": 75, "impl": [75, 77, 79, 87, 149, 152, 167, 172, 173, 184, 223], "viewctorprop": [75, 79, 167, 172, 173], "arg_prop": [75, 79, 167, 172, 173], "enable_if": [75, 77], "has_point": 75, "shallow": [75, 192, 196, 200], "ss": 75, "ls": [75, 151, 225], "ds": 75, "ms": [75, 129, 135], "sd": 75, "s1": [75, 129, 135, 171], "s2": [75, 129, 135, 171], "s3": [75, 171], "arg0": 75, "arg": [75, 76, 77, 79, 84, 132, 148, 150, 152, 159, 166, 174, 175, 176, 191], "caller": [75, 129], "sure": [75, 185, 190, 196, 200, 201], "d_view_": 75, "h_view_": 75, "mark": [75, 196, 200, 226], "specif": [75, 85, 87, 91, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 143, 150, 151, 152, 159, 168, 179, 180, 183, 185, 188, 189, 190, 191, 192, 193, 195, 196, 198, 200, 201, 202, 203, 207, 215, 217], "afraid": 75, "if_c": 75, "express": [75, 83, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 136, 181, 185, 197, 198, 199, 201, 207, 221], "That": [75, 76, 87, 143, 175, 190, 191, 192, 196, 199, 200, 201], "tell": [75, 94, 190, 195, 196, 199, 201, 223, 226], "what": [75, 88, 121, 129, 131, 135, 177, 179, 180, 184, 192, 194, 195, 196, 198, 213, 220, 224], "els": [75, 94, 145, 146, 200, 203, 220, 225], "suppos": [75, 84, 198, 199, 220], "dual_view_typ": 75, "dv": 75, "my": [75, 87, 200], "dual": [75, 82, 205], "endcod": 75, "want": [75, 84, 183, 194, 195, 196, 198, 220, 226], "cudaview": 75, "host_device_typ": 75, "hostview": [75, 168], "is_sam": [75, 84, 92, 167, 168, 192, 199, 200], "memory_spac": [75, 76, 77, 81, 87, 92, 126, 127, 128, 129, 135, 167, 168, 175, 176, 192, 200, 221], "get_device_sid": 75, "been": [75, 87, 88, 91, 136, 185, 190, 192, 193, 195, 198, 199, 200, 215, 217, 224, 225], "In": [75, 76, 78, 86, 87, 92, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 145, 147, 149, 154, 156, 158, 168, 175, 177, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 214, 215, 217, 218, 219, 220, 222, 224, 226], "discard": [75, 79], "modif": [75, 193, 207, 222], "doesn": [75, 143, 145, 167, 185, 190, 196, 201], "know": [75, 184, 185, 186, 192, 194, 199, 201, 226], "whether": [75, 76, 77, 82, 87, 88, 99, 129, 131, 135, 145, 147, 152, 175, 187, 194, 195, 196, 199, 200, 205, 207, 212, 220, 225, 226], "non_const_data_typ": [75, 76, 77, 175], "need_sync": 75, "inlin": [75, 77, 84, 150, 151, 152, 190, 192], "clear_sync_st": 75, "With": [75, 76, 79, 86, 87, 175, 185, 190, 195, 205, 221], "referenc": [75, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 174, 175, 192, 200], "address": [75, 76, 79, 99, 100, 101, 102, 103, 104, 105, 106, 175, 179, 184, 185, 190, 193, 195, 197, 215], "null": [75, 76, 77, 79, 82, 126, 128, 132, 134, 151, 175], "pointer": [75, 76, 77, 79, 81, 82, 94, 126, 127, 128, 129, 132, 134, 145, 151, 167, 171, 172, 173, 175, 176, 183, 192, 196, 198, 220, 224], "span": [75, 76, 77, 82, 175], "contigu": [75, 76, 77, 85, 168, 169, 170, 175, 179, 199, 200, 220, 223], "span_is_contigu": [75, 76, 77, 168, 175], "stride_": 75, "ityp": [75, 76, 77, 154, 156, 158, 174, 175], "is_integr": [75, 77, 154, 156, 158, 174], "r": [75, 77, 168, 174, 175, 198, 202, 207, 219, 222], "integr": [75, 76, 77, 88, 136, 139, 174, 175, 213, 215], "extent_int": [75, 76, 77, 175], "kokkos_dynrankview": [76, 182], "potenti": [76, 77, 81, 88, 94, 135, 144, 145, 149, 151, 168, 175, 183, 189, 190, 193, 195, 196, 201, 224], "compil": [76, 85, 87, 88, 92, 129, 136, 148, 150, 152, 168, 175, 179, 180, 183, 184, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 205, 209, 214, 219, 220, 223, 224, 226, 227], "Its": [76, 175, 192], "shared_ptr": [76, 175], "upper": [76, 77, 200], "bound": [76, 77, 81, 85, 88, 148, 150, 152, 190, 192, 200, 205, 215, 218], "layouttyp": [76, 77, 175], "enforc": [76, 175, 190, 198, 201], "specifi": [76, 77, 79, 82, 85, 87, 88, 92, 121, 126, 127, 129, 130, 144, 145, 148, 150, 151, 152, 166, 167, 174, 175, 185, 189, 190, 191, 192, 197, 201, 214, 215, 223, 226], "come": [76, 87, 175, 183, 185, 191, 193, 194, 196, 197, 199, 200, 201, 219, 221, 224, 226], "fundament": [76, 84, 85, 94, 129, 135, 147, 175, 179, 180, 181, 193, 195, 197, 220], "scalartyp": [76, 175, 188, 189], "storag": [76, 80, 107, 126, 127, 128, 152, 171, 175, 195, 197, 198, 223], "some": [76, 94, 127, 129, 136, 143, 151, 152, 153, 154, 155, 156, 159, 171, 175, 185, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 215, 217, 219, 220, 222, 224, 226], "ones": [76, 130, 175, 184, 190, 191, 195, 224], "right": [76, 136, 148, 175, 191, 195, 196, 198, 199, 200, 207, 219], "left": [76, 94, 136, 148, 175, 199, 200, 219], "laid": [76, 175, 192], "out": [76, 86, 133, 169, 170, 171, 175, 184, 185, 192, 196, 198, 200, 207, 213, 219, 226], "control": [76, 126, 127, 128, 134, 150, 175, 185, 190, 195, 196, 197, 198, 200, 201, 205, 215, 223], "manner": [76, 91, 175], "trigger": [76, 135, 175], "textur": [76, 175, 200], "fetch": [76, 175, 200, 215], "restrict": [76, 77, 149, 166, 167, 172, 173, 174, 175, 176, 192, 195, 196, 197, 200, 201, 215], "There": [76, 81, 87, 94, 129, 134, 135, 147, 159, 175, 177, 183, 184, 185, 192, 197, 198, 201, 213, 219, 220, 222], "alias": [76, 81, 175, 184, 191, 200], "scope": [76, 86, 133, 134, 175, 184, 196, 197, 200, 224, 226], "rank_dynam": [76, 175], "reference_type_is_lvalue_refer": [76, 77, 175], "lvalu": [76, 77, 175, 200], "scalar_array_typ": [76, 175], "properli": [76, 91, 175, 194, 215, 226], "specialis": [76, 175, 200], "sacado": [76, 175], "fad": [76, 175], "const_scalar_array_typ": [76, 175], "non_const_scalar_array_typ": [76, 175], "strip": [76, 175], "const_value_typ": [76, 175], "non_const_value_typ": [76, 145, 168, 175], "certain": [76, 87, 88, 129, 135, 147, 150, 168, 175, 183, 185, 192, 197, 201, 207, 226], "compound": [76, 175], "memory_trait": [76, 175], "non_const_typ": [76, 77, 175], "const_typ": [76, 77, 175], "reference_typ": [76, 77, 79, 175], "pointer_typ": [76, 77, 175], "size_typ": [76, 82, 87, 175, 196, 200, 220], "partial": [76, 87, 145, 146, 175, 183, 196], "No": [76, 77, 164, 175], "made": [76, 77, 87, 175, 192, 194, 195, 201, 226], "nullptr": [76, 132], "dt": [76, 79, 175], "prop": [76, 175], "rt": [76, 77, 79], "rp": [76, 77, 79], "imput": 76, "inttyp": [76, 77, 175], "standard": [76, 77, 81, 83, 87, 89, 91, 136, 138, 139, 175, 184, 185, 193, 196, 198, 203, 214, 226], "profil": [76, 77, 88, 127, 143, 144, 145, 146, 175, 204, 205, 228], "is_regular": [76, 175], "allocproperti": [76, 175], "view_alloc": [76, 79, 97, 167, 172, 173, 175, 200], "ptr": [76, 87, 126, 128, 135, 171, 175, 200], "required_allocation_s": [76, 175], "nr": [76, 175], "wrapper": [76, 152, 175, 185, 201], "TO": [76, 175, 207], "BE": [76, 175, 207], "scratchspac": [76, 175, 190], "typic": [76, 135, 175, 183, 185, 190, 191, 192, 194, 196, 200, 215, 217, 220, 226], "team_handl": [76, 149, 151, 154, 156, 158, 175], "sizeof": [76, 159, 174, 175, 190, 192, 194, 200, 221, 226], "i0": [76, 77, 144, 145, 153, 155, 157, 174, 175], "i6": [76, 175], "beyond": [76, 87, 151, 175, 185, 195, 201, 219], "kokkos_debug": [76, 175, 185], "dim": [76, 77, 79, 175, 218], "architectur": [76, 77, 83, 175, 179, 180, 183, 185, 190, 193, 195, 197, 200, 201, 204, 215, 219, 222, 223], "effici": [76, 77, 81, 175, 193, 199, 200], "cast": [76, 77, 175, 200], "applic": [76, 77, 175, 184, 185, 186, 191, 192, 193, 195, 196, 197, 199, 200, 201, 204, 215, 218, 222, 224, 225, 228], "i1": [76, 153, 155, 157, 174, 175], "i2": [76, 153, 155, 157, 174, 175], "i3": [76, 153, 155, 157, 175], "i4": [76, 175], "stride_0": [76, 77, 175], "stride_1": [76, 77, 175], "stride_2": [76, 77, 175], "stride_3": [76, 77, 175], "stride_4": [76, 77, 175], "stride_5": [76, 77, 175], "stride_6": [76, 77, 175], "stride_7": [76, 77, 175], "lowest": [76, 127, 139, 175], "highest": [76, 129, 175, 191, 193], "due": [76, 175, 192, 193, 194, 198, 200, 226], "pad": [76, 167, 175, 176, 195, 197, 198, 200], "belong": [76, 175], "n8": [76, 175], "byte": [76, 127, 128, 135, 136, 152, 175, 200], "use_count": [76, 77, 175], "aim": [76, 175, 200], "legal": [76, 78, 149, 151, 153, 154, 155, 156, 175, 190, 196, 197, 200], "intercept": [76, 175], "illeg": [76, 175, 190, 200], "dsttype": [76, 175], "srctype": [76, 175], "dst_view": [76, 175], "src_view": [76, 175], "scrtype": [76, 175], "met": [76, 175, 207, 212, 214], "is_const": [76, 175], "memoryspaceaccess": [76, 77, 87, 175], "furthermor": [76, 175, 183, 190, 191, 192, 196, 197, 200, 212, 221], "neither": [76, 144, 145, 146, 175, 198, 207], "nor": [76, 144, 145, 146, 175, 198, 207], "k": [76, 87, 94, 129, 149, 150, 155, 158, 168, 175, 190, 199, 200], "hold": [76, 175, 200, 224], "cstdio": [76, 144, 145, 146, 168, 175, 179, 180, 181, 226], "atoi": [76, 121, 144, 145, 146, 168, 175], "inita": [76, 175], "initb": [76, 175], "const_a": [76, 175], "const_b": [76, 175], "setc": [76, 175], "kokkos_dynamicview": 77, "chunk_siz": [77, 87, 150, 152], "resize_seri": 77, "initializedata": 77, "limit": [77, 82, 87, 94, 139, 181, 184, 185, 190, 193, 195, 198, 200, 207, 210, 213, 225], "friend": [77, 79, 87, 94], "sharedallocationtrack": 77, "track_typ": 77, "verify_spac": 77, "m_track": 77, "m_chunk": 77, "chunk": [77, 87, 135, 150, 152, 190, 196, 221], "m_chunk_shift": 77, "ceil": [77, 138], "log2": [77, 137, 138], "m_chunk_siz": 77, "m_chunk_mask": 77, "m_chunk_max": 77, "array_typ": [77, 188, 189], "anonymousspac": 77, "uniform_devic": 77, "uniform_typ": 77, "uniform_const_typ": 77, "uniform_runtime_typ": 77, "uniform_runtime_const_typ": 77, "uniform_nomemspace_typ": 77, "uniform_const_nomemspace_typ": 77, "uniform_runtime_nomemspace_typ": 77, "uniform_runtime_const_nomemspace_typ": 77, "allocation_ext": 77, "noexcept": [77, 151], "is_lvalue_refer": 77, "chunkarrayspac": 77, "destroi": [77, 200], "explicit": [77, 129, 144, 169, 170, 171, 190, 196, 197], "arg_label": 77, "min_chunk_s": 77, "max_ext": 77, "parent": [77, 199, 225], "rais": [77, 182, 193], "nearest": [77, 138], "power": [77, 136, 138, 192, 193, 213, 215], "reserv": [77, 82, 191, 200], "amount": [77, 87, 129, 183, 190, 196, 197], "suffici": [77, 184, 196, 200, 217], "outsid": [77, 94, 185, 190, 192, 195, 200, 213, 227], "region": [77, 85, 143, 144, 145, 146, 190, 191, 192, 194, 195, 200, 226], "multipli": [77, 102, 105, 120, 163, 190], "alwai": [77, 87, 94, 179, 180, 190, 198, 200, 221], "until": [77, 86, 87, 94, 132, 134, 151, 183, 198, 221, 222, 225], "greater": [77, 131, 136, 200], "sometim": [78, 190, 200, 201, 212, 213], "advantag": [78, 184, 198, 222, 224], "min0": 78, "max0": 78, "min1": 78, "max1": 78, "min2": 78, "max2": 78, "somelabel": 78, "sinc": [78, 87, 88, 129, 130, 132, 134, 135, 136, 137, 138, 139, 165, 168, 175, 183, 185, 190, 192, 193, 196, 198, 199, 200, 205, 221, 224], "ov": 78, "initializer_list": [78, 148], "instead": [78, 81, 129, 130, 131, 135, 190, 191, 196, 198, 200], "obtain": [78, 190, 191, 192, 200, 215, 220], "begin0": 78, "end0": 78, "exactli": [78, 87, 135, 198, 200], "dimenion": 78, "drop": [78, 132, 185, 192], "slicem": 78, "offsettoslic": 78, "30": 78, "offsetsubview": 78, "make_pair": [78, 160, 199], "21": [78, 185, 210], "assert_eq": 78, "deep": [78, 92, 135, 168, 192, 222], "sens": [78, 147, 194, 195, 198, 200, 226], "similarli": [78, 94, 226], "kokkos_scatterview": [79, 182], "foo": [79, 144, 145, 159, 175, 196, 200], "bar": 79, "input_i": 79, "result_i": 79, "scatternondupl": 79, "scatterdupl": 79, "original_view_typ": 79, "original_value_typ": 79, "original_reference_typ": 79, "scatteraccess": 79, "scatternonatom": 79, "scatteratom": 79, "duplicateddatatyp": 79, "data_type_info": 79, "internal_data_typ": 79, "internal_view_typ": 79, "override_contrib": 79, "kokkos_forceinline_funct": [79, 160, 188], "contribute_into": 79, "reset_except": 79, "protect": [79, 185, 190, 192, 193, 195, 198, 227], "internal_view": 79, "newli": [79, 127, 128, 159], "variad": 79, "pack": [79, 220], "exec_spac": [79, 168, 176], "accumul": [79, 195, 196, 225], "dt1": 79, "vp": 79, "dt2": 79, "ly": 79, "es": 79, "ct": 79, "dp": 79, "simplifi": [80, 188], "manipul": [80, 89, 127, 128, 138, 175], "staticcrsgraphtyp": 80, "row_map": 80, "design": [81, 82, 94, 185, 192, 193, 195, 198, 204, 215, 220, 222, 224, 225], "handl": [81, 94, 144, 145, 146, 149, 151, 154, 156, 158, 175, 190, 192, 194, 196, 198, 200, 220, 226], "ten": [81, 190], "thousand": [81, 220], "consequ": [81, 190, 196, 198], "significantli": [81, 183], "unordered_map": 81, "fail": [81, 127, 168, 198, 200, 213, 215, 224, 226, 227], "exceed": 81, "rehash": 81, "would": [81, 84, 87, 94, 143, 159, 168, 183, 185, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 217, 219, 224, 226], "cach": [81, 135, 152, 183, 185, 190, 192, 195, 197, 200], "friendli": [81, 83, 84, 139, 200, 223], "behav": [81, 97, 168, 177, 198, 199, 200], "unorderedmapinsertresult": 81, "pod": [81, 145, 146, 190], "trivial": [81, 94], "copyabl": 81, "enough": [81, 87, 213, 219], "capacity_hint": 81, "lower": [81, 190], "o": [81, 185, 195], "requested_capac": 81, "invalid_index": 81, "valid_at": 81, "key_at": 81, "value_at": 81, "hashmap": 81, "successfulli": [81, 212], "success": [81, 127, 128, 215], "Is": 81, "present": [81, 87, 131, 181, 184, 195, 215], "did": [81, 187], "report": [81, 215], "impli": [81, 143, 150, 159, 207], "exhaust": 81, "free": [81, 83, 135, 138, 146, 191, 194, 195, 200, 202, 222, 226], "restart": 81, "pattern": [81, 85, 87, 92, 121, 129, 147, 149, 150, 183, 190, 200, 202, 219, 228], "umap": 81, "overcom": [82, 94], "issu": [82, 83, 138, 151, 168, 185, 190, 192, 195, 196, 198, 200, 203, 204, 210, 213, 215], "reli": [82, 195, 198], "heavili": [82, 185, 201], "grant": 82, "mani": [82, 87, 88, 94, 129, 184, 185, 193, 195, 196, 197, 198, 200, 201, 215, 223, 224, 226], "below": [82, 87, 91, 94, 121, 131, 132, 138, 139, 144, 145, 150, 151, 175, 185, 188, 200, 201, 215, 221], "push_back": 82, "const_point": 82, "const_refer": 82, "const_iter": 82, "accessor": 82, "pop_back": 82, "max_siz": 82, "front": [82, 190], "back": [82, 94, 183, 185, 190, 191, 195, 197, 222], "comp_val": 82, "theend": 82, "lower_bound": 82, "device_to_host": 82, "host_to_devic": 82, "perspect": [82, 87, 177, 195], "on_host": 82, "on_devic": 82, "buffer": [82, 135, 190, 220], "set_overalloc": 82, "extra": [82, 87, 88, 94, 127, 129, 198, 205], "relat": [83, 185, 190, 201, 220], "dispatch": [83, 85, 88, 94, 143, 144, 145, 146, 147, 152, 157, 158, 159, 190, 192, 195, 205, 209, 219, 224, 228], "task": [83, 85, 183, 195, 197, 216, 228], "common": [83, 86, 87, 89, 129, 135, 137, 139, 147, 167, 168, 173, 185, 186, 187, 190, 192, 196, 197, 198, 201, 220], "mathemat": [83, 89, 138, 139, 198, 215], "style": [83, 134, 185, 201, 214], "port": [83, 197, 200], "hardwar": [83, 135, 159, 183, 185, 190, 191, 193, 195, 196, 197, 215], "idiom": [83, 94], "recogn": [83, 84, 134, 177, 190, 192, 198, 201], "sfina": [83, 84, 139], "macro": [83, 91, 144, 185, 192, 196, 200, 215, 227], "etc": [83, 135, 151, 184, 185, 200], "kokkos_detectionidiom": [84, 182], "extens": [84, 164, 185, 202, 204, 214, 215], "iso": [84, 87, 179, 180, 181, 198, 200], "iec": 84, "ts": [84, 151, 225], "19568": 84, "2017": [84, 213], "draft": [84, 87], "origin": [84, 102, 104, 105, 128, 159, 183, 198, 199, 200, 202, 213, 215, 224], "propos": [84, 179, 180, 181, 198, 204], "void_t": 84, "detector": 84, "exposit": 84, "convien": 84, "metafunct": 84, "leverag": [84, 185, 201], "archetyp": [84, 87], "alwaysvoid": 84, "value_t": 84, "false_typ": [84, 139], "true_typ": [84, 139], "simplif": [84, 87], "detected_t": 84, "nonesuch": 84, "delet": [84, 132, 171, 200], "is_detect": 84, "alia": [84, 129, 135, 166, 179, 180, 199, 200, 221], "detected_or_t": 84, "is_detected_exact": 84, "expect": [84, 94, 121, 180, 184, 190, 192, 193, 196, 198, 199, 201, 212], "is_detected_convert": 84, "To": [84, 94, 127, 128, 135, 144, 167, 168, 185, 186, 190, 193, 194, 196, 199, 200, 201, 203, 205, 212, 215, 218, 226], "is_convert": 84, "later": [84, 129, 184, 187, 194, 196, 198, 200, 206, 226], "variabl": [84, 102, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 144, 145, 150, 151, 182, 184, 185, 186, 187, 190, 196, 201, 215, 222], "is_detected_v": 84, "is_detected_exact_v": 84, "is_detected_convertible_v": 84, "helper": 84, "copy_assign_t": 84, "declval": [84, 199], "Then": [84, 185, 199, 200, 201], "easili": [84, 194, 200, 225, 226], "is_copy_assign": 84, "is_canonical_copy_assign": 84, "mytyp": 84, "ptrdiff_t": [84, 135, 174, 200], "diff_t": 84, "declar": [84, 145, 184, 196, 200], "our": [84, 194, 195, 197, 215, 218, 226], "our_difference_typ": 84, "executionpolicyconcept": 85, "abstract": [85, 87, 94, 121, 129, 135, 147, 179, 180, 190, 193, 197, 198, 204], "place": [85, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 128, 129, 135, 146, 147, 190, 191, 192, 194, 196, 197, 198, 213, 215, 220, 226], "nestedpolici": 85, "summari": [85, 213, 215], "setter": [85, 148, 150, 152, 190], "hip": [85, 87, 88, 93, 135, 148, 150, 152, 159, 168, 185, 191, 200, 204, 205, 215], "sycl": [85, 87, 88, 135, 138, 148, 150, 152, 159, 185, 191, 204, 205], "schedul": [85, 87, 148, 150, 152, 190, 225], "through": [85, 94, 144, 145, 146, 148, 150, 151, 152, 183, 185, 187, 190, 193, 194, 195, 196, 198, 199, 200, 202, 203, 215, 217, 220, 226], "steal": [85, 148, 150, 152], "queue": [85, 148, 150, 152, 159, 225], "machin": [85, 148, 150, 152, 185, 193, 197, 198, 201, 209, 213, 215], "backend": [85, 86, 87, 131, 135, 138, 148, 150, 152, 153, 155, 157, 159, 184, 185, 191, 192, 201, 204, 210, 213, 221, 222, 226], "indextyp": [85, 87, 148, 149, 150, 152, 190], "travers": [85, 148, 150, 152], "launchbound": [85, 87, 148, 150, 152], "maxthread": [85, 148, 150, 152], "minblock": [85, 148, 150, 152], "launch": [85, 92, 94, 143, 148, 150, 151, 152, 190, 200, 215, 222, 224, 225], "worktag": [85, 145, 146, 148, 150, 152, 182, 189], "someclass": [85, 148, 150, 152], "detail": [86, 87, 91, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 129, 132, 135, 139, 144, 151, 162, 174, 176, 184, 185, 186, 189, 191, 193, 196, 200, 201, 212, 214, 215], "shutdown": 86, "resourc": [86, 133, 135, 150, 159, 190, 191, 194, 195, 196, 197, 204, 222, 225, 226], "destruct": [86, 87], "thu": [86, 145, 149, 151, 175, 181, 185, 190, 191, 192, 194, 196, 197, 200, 213, 221, 222, 225, 226, 227], "context": [86, 87, 94, 133, 134, 153, 154, 155, 156, 157, 158, 218, 219, 222, 226], "automat": [86, 121, 131, 135, 185, 191, 192, 196, 198, 200, 214, 219, 221], "aid": 86, "mistak": 86, "live": [86, 200], "my_view": [86, 132, 133, 134, 169, 170], "destructor": [86, 132, 133, 134, 151, 200], "switch": [86, 183, 192, 213], "subsequ": [86, 94, 134, 152, 220], "driven": 87, "essenti": [87, 198, 215], "incept": 87, "recent": [87, 213], "readili": 87, "fact": [87, 224], "hasn": 87, "realli": [87, 132, 185, 194, 201], "even": [87, 94, 128, 129, 132, 133, 135, 145, 184, 185, 189, 192, 195, 197, 199, 200, 207, 217, 220, 224, 227], "agre": [87, 212], "merg": [87, 213, 214, 215], "languag": [87, 88, 91, 129, 135, 147, 184, 193, 195, 196, 198, 199, 200, 201, 202, 218], "featur": [87, 88, 129, 135, 147, 164, 182, 184, 185, 190, 192, 196, 198, 200, 201, 203, 205, 212, 213, 215], "consid": [87, 177, 183, 184, 190, 194, 198, 199, 200, 212, 224, 226], "formal": [87, 92, 129, 135, 147, 177, 195], "rapid": 87, "expans": 87, "demand": [87, 221], "lack": [87, 196, 197], "harden": 87, "acut": 87, "ever": [87, 129, 135, 147, 190, 200], "project": [87, 184, 185, 195, 201, 203, 212, 215], "horizon": 87, "resili": [87, 204], "few": [87, 94, 129, 185, 190, 200, 215], "best": [87, 179, 180, 184, 191, 200, 222, 225], "core": [87, 88, 182, 183, 185, 190, 191, 193, 195, 197, 203, 204, 214, 215, 223], "addition": [87, 92, 129, 167, 175, 187, 200], "promot": [87, 129, 135, 137, 207, 215], "plan": [87, 94, 196], "good": [87, 94, 129, 183, 184, 190, 196, 197, 200, 203, 207, 223, 224], "holist": 87, "interact": [87, 160, 185, 212, 221, 224], "experi": [87, 193, 197, 200, 215], "garner": 87, "year": [87, 184, 202, 212, 213], "particip": [87, 199], "executor": 87, "effort": [87, 184, 185, 200, 204, 215], "2011": [87, 195, 196], "sutton": 87, "stroustrup": 87, "guid": [87, 147, 193, 196, 204], "particular": [87, 118, 119, 124, 129, 183, 185, 190, 191, 192, 196, 197, 200, 201, 207, 210, 215, 220, 224], "constraint": [87, 190], "axiom": 87, "philosophi": 87, "focus": 87, "balanc": [87, 94], "flexibl": [87, 129, 192], "eas": 87, "learn": [87, 129, 196], "far": [87, 94, 195, 200, 224], "though": [87, 135, 185, 227], "pure": [87, 192, 193, 226], "veri": [87, 94, 185, 195, 196, 198, 201, 220], "slightli": [87, 192], "By": [87, 185, 190, 195, 196, 197, 198, 200], "minim": [87, 184, 187, 191, 196], "cognit": 87, "perhap": 87, "import": [87, 185, 190, 192, 195, 196, 199, 200, 215, 219, 222], "subsumpt": 87, "hierarchi": [87, 129, 190, 197, 204], "branch": [87, 151, 153, 154, 155, 156, 190, 197, 203, 210, 213, 214, 215], "width": [87, 198, 213], "roughli": [87, 190, 212], "speak": [87, 94, 226], "high": [87, 94, 152, 184, 190, 193, 195, 197, 198, 200, 201, 202], "major": [87, 88, 184, 192, 198, 200, 204, 214, 215], "visibl": [87, 129, 135], "minor": [87, 88, 184], "memorylayout": 87, "taskschedul": [87, 94], "treat": [87, 135, 195, 196, 215], "kokkos_concept": 87, "enumer": [87, 184], "iterationpattern": 87, "question": [87, 193, 207, 212], "rather": [87, 94, 129, 135, 191, 201], "alik": 87, "extern": [87, 94, 185, 200, 203, 228], "off": [87, 195, 200, 205, 225], "look": [87, 129, 191, 194, 196, 198, 199, 200, 226], "ex": [87, 92, 129], "copyconstruct": 87, "defaultconstruct": 87, "is_integral_v": 87, "scratch_memory_spac": [87, 129, 151, 190], "ostream": [87, 129], "ostr": [87, 129], "in_parallel": [87, 129], "print_configur": [87, 129, 131], "ve": [87, 194, 226], "extrapol": 87, "progress": [87, 195, 197, 212, 213], "eventu": [87, 184], "further": [87, 145, 185, 190, 194, 198, 200, 215, 220, 225, 226], "cannot": [87, 129, 130, 134, 136, 143, 176, 191, 198, 225], "constrain": [87, 197], "known": [87, 195, 199, 204, 213, 220], "decid": [87, 195, 196, 215], "argu": 87, "around": [87, 171, 185, 192, 194, 200, 210, 217, 220, 222, 226, 227], "wherebi": 87, "meet": [87, 92, 129, 149, 151, 167, 174, 212, 214], "definit": [87, 121, 177, 195, 196, 219, 220, 224, 227], "practic": [87, 94, 129, 135, 138, 147, 159, 193, 198, 200, 222, 224], "converg": [87, 193], "relev": [87, 102, 104, 105, 204, 220], "togeth": [87, 196, 197, 220], "site": [87, 215], "artifact": 87, "assess": [87, 212], "intent": [87, 184, 200, 218], "expol": 87, "resulttyp": [87, 145], "executionspaceof": 87, "executionpolicyof": 87, "impos": [87, 200], "kokkos_parallel": 87, "technic": [87, 200, 201], "correct": [87, 90, 94, 185, 190, 194, 196, 199, 200, 212, 215, 226], "rvalu": 87, "wouldn": [87, 187], "breviti": 87, "parallelfor": 87, "parallelscan": 87, "parallelscanwithtot": 87, "red": 87, "executionspaceofreduct": 87, "kokkos_parallel_reduc": 87, "parallelreduc": 87, "closur": [87, 151, 190, 196], "implexecutionspaceof": 87, "exclud": [87, 184, 196], "uniquetoken": 87, "add": [87, 121, 123, 144, 177, 183, 184, 185, 188, 190, 192, 195, 198, 200, 201, 217, 224, 225], "uniquetokenexecutionspac": 87, "uniquetokenscop": 87, "itok": 87, "gtok": 87, "sleep": 87, "wake": 87, "unclear": 87, "concret": [87, 195], "teampolicyintern": 87, "nice": [87, 198], "could": [87, 184, 187, 194, 195, 197, 199, 200, 226], "refactor": 87, "noth": [87, 126, 129, 135, 147, 195, 196, 200], "mind": [87, 200], "close": [87, 190, 196, 198, 203], "semiregular": 87, "todo": [87, 194, 226], "openmptargetspac": 87, "hbwspace": [87, 88, 200], "mem": [87, 179, 181], "dealloc": [87, 125, 126, 127, 128, 135, 175, 192, 199, 200, 223], "implmemoryspac": 87, "sharedallocationrecord": 87, "get_label": 87, "allocate_track": 87, "reallocate_track": 87, "deallocate_track": 87, "print_record": 87, "get_record": 87, "mem1": 87, "mem2": 87, "implrelatablememoryspac": 87, "deepcopi": [87, 92], "verifyexecutioncanaccessmemoryspac": 87, "verifi": [87, 215], "exec": 87, "think": [87, 94, 132, 200, 217, 226], "achiev": [87, 135, 190, 192, 200, 215, 219], "signific": [87, 136, 200, 222, 224], "dispar": 87, "teamthreadrangeboundariesstruct": [87, 149], "teamvectorrangeboundariesstruct": 87, "basicexecutionpolici": 87, "index_typ": [87, 147, 150, 152], "cours": 87, "execution_polici": [87, 150, 152, 165], "weren": 87, "mayb": 87, "chunkedexecutionpolici": 87, "set_chunk_s": [87, 150, 152], "complic": [87, 196, 200], "pretti": [87, 94, 129], "straightforward": [87, 167, 219, 220], "iteratetil": 87, "seem": [87, 201], "duplic": [87, 198], "kokkos_openmp_parallel": 87, "were": [87, 129, 137, 139, 181, 194, 195, 215, 226], "conceptu": [87, 195, 223], "surfac": 87, "area": [87, 128], "Of": [87, 195], "d": [87, 153, 157, 171, 174, 184, 188, 189, 190, 194, 195, 196, 198, 199, 200, 219, 226], "still": [87, 88, 159, 183, 184, 187, 190, 198, 200, 222], "shortcut": [87, 129, 147], "probabl": [87, 94, 190, 196, 198], "teach": [87, 196], "advanc": [87, 129, 196, 215, 228], "ax": [87, 222], "me": 87, "why": [87, 191, 222], "axi": 87, "extend": [87, 193], "overhead": [87, 94, 143, 196, 198, 200, 219], "describ": [87, 94, 121, 129, 135, 147, 181, 186, 193, 194, 195, 197, 198, 202, 203, 214, 215, 222, 223, 225, 226], "isn": [87, 94, 129, 194, 226], "concern": [87, 193, 195, 220, 224], "simplest": [87, 190, 191, 220], "But": [87, 186, 190, 194, 200, 224], "kokkos_vers": 88, "patch": 88, "10000": [88, 196, 200], "kokkos_enable_debug": [88, 205], "kokkos_enable_debug_bounds_check": [88, 205], "kokkos_enable_debug_dualview_modify_check": [88, 205], "kokkos_enable_deprecated_code_3": 88, "kokkos_enable_deprecation_warn": 88, "warn": [88, 127, 128, 131, 132, 175, 182, 184, 200, 201, 205, 210, 213], "kokkos_enable_hbwspac": 88, "kokkos_enable_memkind": [88, 205], "kokkos_enable_profiling_load_print": [88, 205], "output": [88, 94, 129, 171, 183, 189, 191, 197, 215, 219], "messag": [88, 131, 191, 193, 199, 213, 215], "kokkos_enable_tun": 88, "bind": [88, 191, 204, 218], "tune": [88, 185, 201, 219, 228], "2422": 88, "kokkos_enable_complex_align": 88, "align": [88, 127, 176, 198, 200, 214, 223], "kokkos_enable_aggressive_vector": [88, 205], "assumpt": [88, 191], "ignor": [88, 94, 190, 191, 198], "aggress": [88, 200, 205], "ifdef": [88, 192], "kokkos_enable_seri": [88, 185, 205], "kokkos_enable_openmp": [88, 185, 205], "kokkos_enable_openmptarget": [88, 205], "kokkos_enable_thread": [88, 185, 205], "kokkos_enable_cuda": [88, 185, 205], "kokkos_enable_hip": [88, 185, 205], "kokkos_enable_hpx": [88, 205], "kokkos_enable_sycl": [88, 185, 205], "kokkos_enable_cuda_constexpr": [88, 205], "kokkos_enable_cuda_lambda": [88, 205], "kokkos_enable_cuda_ldg_intrinsinc": 88, "ldg": [88, 205], "intrins": [88, 121, 136, 179, 180, 186, 192, 198, 200, 205, 218], "kokkos_enable_cuda_relocatable_device_cod": [88, 205], "relocat": [88, 201, 205], "kokkos_enable_cuda_uvm": [88, 205, 216], "kokkos_enable_hip_multiple_kernel_instanti": [88, 205], "instanti": [88, 184, 195, 197, 198, 200, 205], "improv": [88, 182, 184, 193, 196, 197, 205, 212, 219], "kokkos_enable_hip_relocatable_device_cod": [88, 205], "kokkos_enable_hpx_async_dispatch": [88, 205], "asynchron": [88, 144, 145, 168, 195, 200, 205, 222, 228], "latest": [88, 91, 184], "path": [88, 131, 184, 185, 205, 215, 220], "expos": [88, 129, 189, 190, 197, 219], "kokkos_enable_cxx14": 88, "kokkos_enable_cxx17": 88, "kokkos_enable_cxx20": 88, "inform": [88, 121, 184, 186, 191, 195, 197, 200, 201, 205, 212, 215, 217, 220, 223, 226], "libari": 88, "kokkos_enable_hwloc": [88, 185, 205], "libhwloc": [88, 185], "numa": [88, 182, 191], "kokkos_enable_librt": [88, 205], "link": [88, 91, 175, 185, 201, 204, 215, 219], "posix": 88, "librt": [88, 185, 205], "backward": [88, 134, 209], "memkind": [88, 205], "heap": 88, "kokkos_enable_libdl": [88, 205], "linker": [88, 185, 201], "libdl": [88, 205], "kokkos_enable_libquadmath": 88, "gcc": [88, 185, 201, 206, 210, 213], "quad": 88, "precis": [88, 185, 194, 218, 220, 224, 226], "math": [88, 89, 198, 204, 228], "kokkos_arch_sse42": 88, "sse": 88, "kokkos_arch_armv80": [88, 205], "armv8": [88, 185, 205], "kokkos_arch_armv8_thunderx": [88, 205], "cavium": [88, 215], "thunderx": [88, 185, 215], "kokkos_arch_armv81": [88, 205], "kokkos_arch_armv8_thunderx2": [88, 205], "thunderx2": 88, "kokkos_arch_amd_avx2": 88, "avx2": 88, "zen": [88, 205], "kokkos_arch_avx": 88, "avx": 88, "kokkos_arch_avx2": 88, "kokkos_arch_avx512xeon": 88, "skylak": 88, "avx512": 88, "kokkos_arch_knc": [88, 205], "intel": [88, 185, 190, 198, 205, 210, 213, 215], "knight": [88, 215], "corner": 88, "xeon": [88, 185, 215], "phi": [88, 137, 185], "kokkos_arch_avx512m": 88, "mic": 88, "kokkos_arch_power7": [88, 205], "ibm": [88, 185, 210, 213], "power7": [88, 185, 205], "kokkos_arch_power8": [88, 205], "power8": [88, 185, 205, 213], "kokkos_arch_power9": [88, 205], "power9": [88, 205], "kokkos_arch_intel_gen": [88, 205], "gen9": [88, 205], "kokkos_arch_intel_dg1": 88, "iri": 88, "xemax": 88, "kokkos_arch_intel_gen9": 88, "kokkos_arch_intel_gen11": 88, "gen11": 88, "kokkos_arch_intel_gen12lp": 88, "gen12lp": 88, "kokkos_arch_intel_xehp": 88, "xe": 88, "hp": 88, "kokkos_arch_intel_gpu": 88, "kokkos_arch_kepl": 88, "nvidia": [88, 185, 190, 197, 198, 205, 215, 220], "kepler": [88, 185], "kokkos_arch_kepler30": [88, 205], "cc": [88, 185, 205, 218], "kokkos_arch_kepler32": [88, 205], "kokkos_arch_kepler35": [88, 205], "kokkos_arch_kepler37": [88, 205], "kokkos_arch_maxwel": 88, "maxwel": [88, 185], "kokkos_arch_maxwell50": [88, 205], "kokkos_arch_maxwell52": [88, 205], "kokkos_arch_maxwell53": [88, 205], "kokkos_arch_pasc": 88, "pascal": 88, "kokkos_arch_pascal60": [88, 205], "kokkos_arch_pascal61": [88, 205], "kokkos_arch_volta": 88, "volta": 88, "kokkos_arch_volta70": [88, 205], "kokkos_arch_volta72": [88, 205], "kokkos_arch_turing75": [88, 205], "ture": 88, "kokkos_arch_amper": 88, "amper": [88, 205], "kokkos_arch_ampere80": [88, 205], "kokkos_arch_ampere86": [88, 205], "kokkos_arch_hopp": 88, "hopper": [88, 205], "kokkos_arch_hopper90": [88, 205], "kokkos_arch_amd_zen": 88, "amd": [88, 205], "kokkos_arch_amd_zen2": 88, "zen2": [88, 205], "kokkos_arch_amd_zen3": 88, "zen3": [88, 205], "kokkos_arch_vega": 88, "vega": 88, "kokkos_arch_vega900": [88, 205], "mi25": [88, 205], "gfx900": [88, 205], "kokkos_arch_vega906": [88, 205], "mi50": [88, 205], "mi60": [88, 205], "gfx906": [88, 205], "kokkos_arch_vega908": [88, 205], "mi100": [88, 205], "gfx908": [88, 205], "kokkos_arch_vega90a": [88, 205], "mi200": [88, 205], "seri": [88, 193, 205, 215], "gfx90a": [88, 205], "kokkos_mathematicalconst": [89, 137, 182], "backport": 89, "sqrt2": [89, 137], "kokkos_mathematicalfunct": [89, 138, 182], "consist": [89, 138, 182, 185, 190, 195, 197, 198, 220], "portabl": [89, 129, 183, 192, 193, 195, 196, 198, 202, 218, 219, 221, 223, 228], "fab": [89, 138], "sqrt": [89, 138, 179, 181, 198], "sin": [89, 137, 138, 179], "kokkos_numerictrait": [89, 139, 182], "ad": [89, 102, 104, 105, 139, 181, 184, 185, 190, 198, 201, 225, 226], "23": [89, 139, 202, 204], "numeric_limit": [89, 139], "kokkos_bitmanipul": [89, 136], "individu": [89, 94, 138, 139, 192, 201, 215, 224], "compos": [90, 220], "team_size_max": [90, 152], "team_size_recommend": [90, 140, 141, 142, 152], "strive": [91, 198], "howev": [91, 94, 129, 159, 190, 192, 193, 194, 195, 196, 197, 198, 200, 207, 210, 215, 219, 226], "deviat": 91, "approach": [91, 94, 183, 193, 195, 196, 198, 200, 224, 228], "section": [91, 185, 190, 192, 194, 195, 196, 200, 205, 213, 215, 226], "guidanc": [91, 179, 203], "relationship": [92, 94, 159, 190, 200], "entiti": [92, 94, 184, 195], "msp1": 92, "msp2": 92, "v2": [92, 215], "retriev": [92, 94, 150, 187, 225], "v1": [92, 215], "word": [92, 129, 135, 147, 185, 198], "shape": 92, "attribut": [92, 182, 197, 198, 200], "intercessori": 92, "executionspaceconcept": [93, 143, 159, 167], "defaulthostexecutionspac": [93, 191, 192], "hipspac": [93, 200], "hiphostpinnedspac": [93, 200], "hipmanagedspac": 93, "sharedspac": [93, 216], "sharedhostpinnedspac": [93, 221], "memoryspaceconcept": [93, 167], "lightweight": 94, "substanti": 94, "futur": [94, 129, 191, 193, 195, 197, 200, 209, 213, 225], "Not": [94, 191, 200], "too": [94, 143, 200, 226], "small": [94, 134, 135, 196, 225], "inher": 94, "plenti": 94, "scale": [94, 129, 185, 215], "easier": [94, 196, 221, 223], "hierarch": [94, 153, 154, 155, 156, 157, 158, 195, 196, 197, 209, 225, 228], "ordinari": [94, 196], "portion": [94, 198], "haev": 94, "addit": [94, 129, 138, 168, 186, 191, 193, 195, 196, 198, 200, 219, 224, 226], "mytask": 94, "produc": [94, 193, 196, 198, 220, 222], "task_spawn": [94, 225], "host_spawn": 94, "tasksingl": [94, 225], "taskteam": [94, 144, 145, 146], "former": [94, 185, 196, 200, 215], "worker": [94, 145, 225], "spawn": [94, 225], "basicfutur": [94, 225], "when_al": [94, 225], "scheduler_typ": 94, "discuss": [94, 190, 195, 198, 200, 212], "fut": 94, "mytaskfunctor": 94, "readi": [94, 184, 200], "earliest": 94, "fut2": 94, "myothertaskfunctor": 94, "my_funct": [94, 129], "sched": 94, "my_result_typ": 94, "my_task_result": 94, "ff": [94, 213], "better": [94, 185, 190, 200, 201, 222], "never": [94, 129, 184, 185, 198, 200, 201], "share": [94, 151, 183, 185, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 219, 220, 226], "transit": [94, 205], "undefin": [94, 127, 128, 131, 175, 192, 200, 227], "worst": 94, "kind": [94, 195, 196, 199, 215], "bug": [94, 129, 184, 194, 210, 212, 213, 226], "segfault": [94, 201], "hour": [94, 184], "is_nul": 94, "attempt": [94, 195], "poll": 94, "is_readi": [94, 225], "forbidden": 94, "anywher": 94, "abil": [94, 144, 195, 198, 218], "yet": [94, 128, 164, 177, 184, 193, 195, 198, 199, 213], "extrem": [94, 194, 195, 200, 226], "expens": [94, 199], "sledgehamm": 94, "sparingli": 94, "alon": [94, 185], "pend": 94, "decis": [94, 190, 220], "piec": 94, "help": [94, 182, 185, 188, 191, 193, 196, 200, 201, 226], "cost": [94, 183, 193, 199, 200], "tradit": [94, 135], "reus": [94, 190, 224], "successor": 94, "respawn": [94, 225], "future_typ": [94, 225], "got": [94, 205], "redund": [94, 220], "lead": [94, 129, 184, 190, 194, 200, 201, 221, 226], "lazi": 94, "third": [94, 185, 190, 192, 195, 199, 201, 219], "serv": [94, 129], "observ": [94, 143, 191, 226], "effect": [94, 129, 143, 175, 184, 185, 190, 196, 197, 198, 224, 226], "taskprior": 94, "regular": [94, 200], "low": [94, 183, 193, 196, 198, 200], "boolean": [95, 129, 169, 170, 171, 196, 198], "critic": [97, 195], "_view": 97, "awar": [97, 190, 195, 200, 202, 219], "bundl": [97, 176], "loos": [97, 167, 177], "old_val": [99, 101], "ptr_to_valu": [99, 100, 101, 102, 103, 104, 105, 106], "comparison_valu": [99, 100], "was_exchang": 100, "comapr": 100, "update_valu": [102, 104, 105], "previou": [102, 134, 137, 138, 152, 173, 190, 213], "atomic_fetch_add": [102, 104, 183, 190], "atomic_fetch_and": 102, "atomic_fetch_div": 102, "atomic_fetch_lshift": 102, "atomic_fetch_max": 102, "atomic_fetch_min": 102, "atomic_fetch_mod": 102, "atomic_fetch_mul": 102, "atomic_fetch_or": 102, "atomic_fetch_rshift": 102, "atomic_fetch_sub": [102, 104], "atomic_fetch_xor": 102, "tmp": [102, 190, 219], "divid": [102, 105, 144, 145, 146, 163, 188, 189, 217, 222], "substract": [102, 105], "atomic_add": [104, 183], "atomic_and": 104, "atomic_assign": 104, "atomic_decr": 104, "atomic_incrememt": 104, "atomic_max": 104, "atomic_min": 104, "atomic_or": 104, "atomic_sub": 104, "atomic_incr": [104, 183], "subtract": 104, "atomic_add_fetch": 105, "atomic_and_fetch": 105, "atomic_div_fetch": 105, "atomic_lshift_fetch": 105, "atomic_max_fetch": 105, "atomic_min_fetch": 105, "atomic_mod_fetch": 105, "atomic_mul_fetch": 105, "atomic_or_fetch": 105, "atomic_rshift_fetch": 105, "atomic_sub_fetch": 105, "atomic_xor_fetch": 105, "conjunct": [107, 149, 183, 185, 190, 191], "bitwis": [108, 109, 136, 200], "AND": [108, 110, 207], "remove_cv": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "result_view_typ": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 189], "value_": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 189], "local": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 131, 135, 145, 146, 185, 190, 191, 195, 196, 197, 199, 200, 205, 213, 215, 221], "reduction_ident": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 186, 188, 196], "resid": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 135, 197, 221], "customtyp": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123], "OR": [109, 111, 207], "_min": [112, 113, 116, 117], "vallocscalar": [113, 115, 122, 190], "loc": [113, 115, 124, 187], "_max": [113, 114, 115, 116, 117], "minmaxscalar": [116, 122, 190], "min_val": [116, 117, 118, 119, 187], "max_val": [116, 117, 118, 119, 187], "minmaxlocscalar": [117, 122, 190], "min_loc": [117, 118, 187], "max_loc": [117, 118, 187], "minvalu": [118, 119], "maxvalu": [118, 119], "hypothet": 121, "brief": 121, "build": [121, 129, 168, 184, 190, 191, 193, 196, 204, 205, 213, 215, 228], "under": [121, 168, 184, 185, 196, 200, 203, 207, 215], "reducesum": 121, "lval": 121, "l": [121, 138, 155, 195, 213], "resultvalu": 124, "resultindex": 124, "shrink": [125, 172, 173], "throw": [126, 127, 128, 152, 192, 200], "runtime_error": 126, "failur": [126, 127, 128, 152, 175, 213], "uniniti": [127, 148, 150, 152, 167, 172, 173, 200], "metadata": 127, "succe": 127, "suitabl": [127, 184, 196, 219], "rawmemoryallocationfailur": [127, 128], "thrown": 127, "memadvis": [127, 128, 175], "tool": [127, 131, 144, 145, 146, 184, 204, 205, 228], "kokkosp": 127, "On": [127, 128, 183, 185, 190, 199, 205, 226], "avoid": [127, 128, 129, 184, 190, 199, 200, 201, 213, 226], "leak": [127, 128, 200], "new_siz": 128, "freed": [128, 190, 200], "invalid": [128, 200], "rare": [129, 135], "offload": 129, "talk": [129, 135, 147, 194, 226], "theoret": [129, 135, 147], "treatment": [129, 135, 147], "disclaim": [129, 135, 147, 207], "term": [129, 135, 147, 195, 200, 203, 207, 224], "anyon": [129, 135, 147, 203], "who": [129, 135, 147, 193, 200, 212, 220, 223], "knew": [129, 135, 147], "confus": [129, 135, 147, 200], "often": [129, 135, 147, 183, 190, 192, 193, 195, 196, 198, 200, 215, 220], "shini": [129, 135, 147], "pramet": 129, "surpris": 129, "answer": [129, 190, 200], "ll": [129, 194, 200, 226], "nowher": 129, "intermedi": [129, 196], "static_assert": [129, 168, 199, 221], "incompat": [129, 185], "prefer": [129, 184, 191, 196, 200, 201, 227], "simpli": [129, 185, 190, 192, 194, 198, 201, 218, 219, 220, 224, 226], "mental": 129, "exercis": [129, 215], "translat": [129, 194, 226], "tend": [129, 183, 197], "verbos": 129, "much": [129, 144, 184, 189, 193, 195, 196, 198, 200], "risk": [129, 184], "lose": 129, "caution": [129, 185], "necessarili": [129, 168, 190, 192, 197, 200], "strengthen": 129, "unspecifi": [129, 162, 197], "care": [129, 184, 198], "print": [129, 131, 161, 171, 191, 205], "arraylayout": 129, "recommend": [129, 152, 190, 196, 198, 200, 215], "scratchmemoryspac": 129, "ex2": 129, "ex1": 129, "usabl": [129, 200], "shorthand": [129, 135], "typetrait": [129, 135], "num_thread": [130, 131, 191], "num_numa": [130, 191], "device_id": [130, 131, 191], "ndevic": [130, 191], "skip_devic": [130, 191], "disable_warn": [130, 131, 191], "favor": [130, 194, 226], "One": [130, 152, 183, 185, 187, 190, 192, 198, 200, 219, 220, 224, 226], "distinguish": [130, 139, 196], "kokkoscor": 131, "set_num_thread": [131, 132, 134], "set_device_id": 131, "set_disable_warn": [131, 134], "initializ": 131, "introduc": [131, 190, 196, 197, 214, 221], "unset": 131, "let": [131, 151, 185, 190, 192, 194, 195, 196, 199, 200, 220, 226], "tabl": [131, 185, 191, 200, 215], "set_parameter_nam": 131, "parameter_typ": 131, "parameter_nam": 131, "has_parameter_nam": 131, "get_parameter_nam": 131, "summar": 131, "id": [131, 182, 190, 191, 192], "minu": 131, "map_device_id_bi": 131, "mpi_rank": 131, "round": [131, 138, 191, 195], "robin": [131, 191], "mpi": [131, 133, 134, 183, 185, 191, 193, 199, 201, 216, 223, 228], "disabl": [131, 185, 196], "configur": [131, 152, 191, 198, 205, 213, 214, 215, 221], "tune_intern": 131, "autotun": 131, "heurist": 131, "tools_lib": 131, "full": [131, 177, 179, 183, 185, 191, 192, 194, 197, 198, 214, 226], "ld_library_path": 131, "tools_help": 131, "command": [131, 132, 134, 182, 185, 201, 215], "line": [131, 132, 134, 135, 182, 183, 185, 200, 227], "tools_arg": 131, "set_print_configur": 131, "set_map_device_id_bi": [131, 132, 134], "environ": [131, 133, 134, 135, 182, 185, 191, 192, 196, 200, 201, 213, 215], "thats": 132, "correctli": [132, 185, 196, 201], "presenc": [132, 139], "unhandl": 132, "charact": 132, "uncondition": 132, "precondit": 132, "is_initi": [132, 133, 134], "unique_ptr": 132, "make_opt": 132, "nullopt": 132, "regardless": [132, 195], "clean": [133, 213], "is_fin": [133, 134, 146], "detroi": 133, "ill": 133, "mpi_fin": [133, 191], "erron": 134, "pars": [134, 185], "whenev": 134, "seen": [134, 184, 193, 215], "decrement": [134, 175, 183, 200], "implicitli": [134, 167], "multibyt": 134, "mpi_init": [134, 191], "side": [135, 143, 190, 196, 197, 199, 212], "virtual": [135, 200, 209, 216], "xnack": 135, "unit": [135, 185, 190, 192, 193, 195, 212], "movement": 135, "os": 135, "driver": [135, 215, 221], "moment": [135, 185, 200], "preprocessor": [135, 185, 201, 227], "kokkos_has_shared_spac": 135, "has_shared_spac": [135, 221], "correspoind": 135, "syclsharedusmspac": 135, "stai": 135, "availab": 135, "event": [135, 149, 190, 207, 215], "nevertheless": [135, 190, 195, 200, 226], "kokkos_has_shared_host_pinned_spac": 135, "has_shared_host_pinned_spac": 135, "syclhostusmspac": 135, "bit_cast": 136, "byteswap": 136, "has_single_bit": 136, "bit_ceil": 136, "bit_floor": 136, "bit_width": 136, "rotl": 136, "rotr": 136, "countl_zero": 136, "countl_on": 136, "countr_zero": 136, "countr_on": 136, "popcount": 136, "denot": [136, 139, 152, 175], "reinterpret": 136, "represent": [136, 198, 200], "counterpart": 136, "_builtin": 136, "suffix": [136, 138], "log10": [137, 138, 179], "inv_pi": 137, "inv_sqrtpi": 137, "ln2": 137, "ln10": 137, "sqrt3": 137, "inv_sqrt3": 137, "egamma": 137, "pi_v": 137, "motiv": [138, 193, 198, 223], "borrow": 138, "llvm": 138, "doc": 138, "compilecudawithllvm": 138, "html": 138, "clang": [138, 185, 201, 210, 213, 214, 228], "ok": [138, 175, 200], "everyth": [138, 198, 200], "__device__": [138, 192, 206], "nvcc": [138, 185, 210, 213], "overrid": [138, 185, 201, 226], "sinf": 138, "goal": [138, 190, 192, 193, 215, 219, 223], "cmath": 138, "synopsi": 138, "sqrtf": 138, "sqrtl": 138, "integraltyp": 138, "arithmet": [138, 139], "reader": [138, 184, 185, 193, 195], "cpprefer": 138, "com": [138, 202, 204, 212, 213, 214], "fmod": 138, "remaind": 138, "remquo": 138, "fma": [138, 179], "fmax": 138, "fmin": 138, "fdim": 138, "nan": 138, "exp": [138, 179], "exp2": [138, 179], "expm1": 138, "log": [138, 179, 213], "log1p": 138, "exponenti": 138, "pow": [138, 179], "cbrt": [138, 179], "hypot": [138, 179], "co": [138, 179, 184], "tan": [138, 179], "asin": [138, 179], "aco": [138, 179], "atan": [138, 179], "atan2": [138, 179], "trigonometr": 138, "sinh": [138, 179], "cosh": [138, 179], "tanh": [138, 179], "asinh": [138, 179], "acosh": [138, 179], "atanh": [138, 179], "hyperbol": 138, "erf": [138, 179], "erfc": [138, 179], "tgamma": [138, 179], "lgamma": [138, 179], "gamma": 138, "floor": 138, "trunc": 138, "lround": 138, "llround": 138, "nearbyint": 138, "rint": 138, "lrint": 138, "llrint": 138, "frexp": 138, "ldexp": 138, "modf": 138, "scalbn": 138, "scalbln": 138, "ilog": 138, "logb": 138, "nextaft": 138, "nexttoward": 138, "copysign": [138, 179], "fpclassifi": 138, "isfinit": 138, "isinf": 138, "isnan": 138, "isnorm": 138, "signbit": 138, "isgreat": 138, "isgreaterequ": 138, "isless": 138, "islessequ": 138, "islessgreat": 138, "isunord": 138, "classif": 138, "open": [138, 148, 150, 152, 192, 203, 204, 212, 215], "4767": 138, "feel": [138, 202], "p1841": 139, "break": [139, 184, 194, 201, 226], "monolith": 139, "apart": [139, 183, 184, 200], "infin": 139, "finite_min": 139, "finite_max": 139, "epsilon": 139, "round_error": 139, "norm_min": 139, "denorm_min": 139, "reciprocal_overflow_threshold": 139, "quiet_nan": 139, "signaling_nan": 139, "characterist": [139, 195, 197, 200, 215, 225], "digit": 139, "digits10": 139, "max_digits10": 139, "radix": 139, "min_expon": 139, "min_exponent10": 139, "max_expon": 139, "max_exponent10": 139, "finite_min_v": 139, "floatingpoint": 139, "norm_min_v": 139, "finite_max_v": 139, "epsilon_v": 139, "round_error_v": 139, "infinity_v": 139, "quiet_nan_v": 139, "signaling_nan_v": 139, "denorm_min_v": 139, "digits_v": 139, "digits10_v": 139, "max_digits10_v": 139, "radix_v": 139, "min_exponent_v": 139, "min_exponent10_v": 139, "max_exponent_v": 139, "max_exponent10_v": 139, "absenc": 139, "has_infin": 139, "enable_if_t": 139, "legacy_std_numeric_limits_infin": 139, "kokkos_execpolici": [140, 141, 142], "policytyp": [140, 141, 142], "recommended_team_s": [140, 141, 142], "outstand": [143, 168, 195], "exec1": 143, "exec2": 143, "stuff": [143, 198], "touch": [143, 200], "wait": [143, 151, 159, 190, 196, 225], "finish": [143, 144, 168, 183, 196, 200], "calle": 144, "execpolici": [144, 145, 146], "functortyp": [144, 145, 146, 152], "hook": [144, 145, 146, 191], "integertyp": [144, 145, 146], "work_tag": [144, 145, 146, 150, 152], "iN": [144, 145], "captur": [144, 190, 196, 200, 218, 224], "loop1": [144, 145, 146], "greet": 144, "taga": 144, "implicit": [144, 149, 154, 156, 158, 190, 196, 218, 222], "tagb": 144, "thread_rank": 144, "loop2": [144, 145], "deduc": [145, 166, 199, 226], "reducerargu": 145, "reducerargumentnonconst": 145, "reducerargument1": 145, "reducerargumentnonconst1": 145, "fullfil": 145, "handletyp": [145, 146], "reducervaluetyp": 145, "value_count": [145, 196], "length": [145, 148, 149, 152, 153, 154, 155, 156, 157, 158, 172, 173, 175, 187, 192, 200, 223], "overwritten": [145, 146, 151, 200], "neutral": [145, 146], "lsum": [145, 149, 153, 154, 155, 156, 157, 158, 190], "lf": [145, 187], "lmin": [145, 187], "tagmax": 145, "tagmin": 145, "lmax": 145, "team_rank": [145, 151, 190, 192], "post": [146, 224], "returntyp": 146, "return_valu": 146, "postfix_sum": 146, "prefix_sum": 146, "partial_sum": 146, "li": 146, "domin": [147, 193], "elsewher": 147, "parallel_pattern": 147, "hand": [147, 183, 190, 198, 226], "wavi": 147, "beginn": 147, "tile": [148, 200, 219], "interv": [148, 150, 152], "outer": [148, 190, 200, 219], "inner": [148, 190, 200], "ot": 148, "IT": 148, "tt": 148, "policy_1": [148, 150, 152, 190], "policy_2": [148, 150, 152, 190], "t0": 148, "t1": [148, 160, 163], "t2": [148, 160, 163], "teammembertyp": [149, 152, 154, 156, 158], "threadvectorrangeboundariesstruct": 149, "threadsinglestruct": 149, "vectorsinglestruct": 149, "team_barri": [149, 151, 153, 154, 155, 156, 157, 158, 190], "encount": [149, 171, 206, 225], "thread_sum": 149, "team_sum": [149, 154, 156, 158, 190], "a_rowsum": [149, 153, 154, 155, 156, 158], "inherit": [150, 152, 168, 215], "policytrait": [150, 152], "schedule_typ": [150, 152], "iteration_pattern": [150, 152], "launch_bound": [150, 152], "work_spac": [150, 152], "work_begin": 150, "work_end": 150, "discret": [150, 152, 187, 219], "chunk_size_": 150, "init_arg": 150, "chunksiz": 150, "workgroup": 150, "policy_3": [150, 152, 190], "policy_4": [150, 152], "policy_6": 150, "policy_7": 150, "ident": [150, 152, 167, 188, 190, 195, 196, 200, 217], "teamtask": 151, "subject": [151, 164, 184, 200], "league_s": [151, 152, 190], "team_shmem": [151, 190], "team_scratch": [151, 190], "thread_scratch": 151, "team_broadcast": 151, "source_team_rank": 151, "reducertyp": 151, "team_reduc": 151, "team_scan": 151, "workitem": 151, "leagu": [151, 152, 190, 197, 225], "lexic": [151, 184], "arriv": [151, 190], "var": 151, "broadcast": [151, 190], "accross": [151, 198], "cosnt": 151, "teampolcii": 151, "policy_typ": 151, "set_scratch_s": [151, 152, 190], "4096": 151, "tid": 151, "lid": 151, "scratch_memory_typ": 151, "vector_length": [152, 223], "perteamvalu": 152, "per_team": 152, "perthreadvalu": 152, "per_thread": 152, "scratch_size_max": 152, "scratch_siz": 152, "team_size_": 152, "team_scratch_s": 152, "thread_scratch_s": 152, "auto_t": 152, "lazili": 152, "closest": 152, "bandwidth": [152, 190, 197, 198, 200], "twice": [152, 200], "overwrit": [152, 185, 196], "maxim": [152, 192], "policy_5": 152, "extent1": [153, 155, 157], "extent2": [153, 155, 157], "extentn": [153, 155, 157], "extent_i": [153, 155, 157], "leaguerank": [153, 155, 157], "teamsum": [153, 155, 157], "threadsum": [153, 157, 158], "leaguesum": [153, 155], "itype1": [154, 156, 158], "itype2": [154, 156, 158], "teamtyp": 155, "vectorsum": [155, 157], "tsum": 158, "weight": 159, "fraction": 159, "is_arithmetic_v": 159, "discreet": 159, "3rd": 159, "stream": [159, 168, 197, 200, 228], "otherparam": 159, "param": 159, "f1": [159, 225], "f2": [159, 225], "functor1": 159, "functor2": 159, "f3": 159, "functor3": 159, "kokkos_pair": [160, 182], "fulli": [160, 220, 226], "std_pair": 160, "int_float": 160, "converted_std_pair": 160, "converted_kokkos_pair": 160, "to_std_pair": 160, "first_typ": 160, "second_typ": 160, "kokkos_defaulted_funct": [160, 226], "wise": [160, 169, 170, 171], "whose": [160, 184, 196, 199, 200, 219, 223], "msg": 161, "imag": 163, "real": [163, 218], "imaginari": 163, "im": 163, "convers": [163, 192, 198, 218, 224], "realtyp": 163, "anounc": 164, "measur": [165, 195], "time1": 165, "time2": 165, "impl_detail": [166, 174], "subset": [166, 174, 181, 183, 185, 199, 215], "subviewhold": 166, "deal": [167, 194, 199, 226, 227, 228], "host_mirror": 167, "a_view": 167, "host_mirror_view": 167, "host_mirror_view_spac": 167, "withoutiniti": [167, 172, 173, 176, 200], "implmirrortyp": 167, "viewctorarg": [167, 172, 173], "conduct": 167, "andf": 167, "circumst": 168, "viewdest": 168, "viewsrc": [168, 175], "copy_spac": 168, "submit": [168, 190, 215], "cudamemcpyasync": 168, "d_a": [168, 192], "d_a_2": 168, "d_a_5": 168, "h_a": [168, 192, 222], "h_a_2": 168, "d_a_2_5": 168, "deviceview": 168, "temporari": [168, 187, 197, 200], "h_view_tmp": 168, "kokkos_layout": [169, 170, 171], "lai": [169, 170, 171], "convent": [169, 170, 197, 200], "array_layout_max_rank": [169, 170, 171], "is_extent_construct": [169, 170, 171], "signifi": [169, 170, 171], "frequent": 171, "noncontigu": [171, 200], "full_mesh": 171, "mesh": [171, 217], "mesh_subcompon": 171, "z": [171, 179, 198], "itypeord": 171, "itypedimen": 171, "order_dimens": 171, "dimen": 171, "s0": 171, "s4": 171, "s5": 171, "s6": 171, "s7": 171, "3d": [171, 192, 218], "grow": [172, 173, 193], "subext": 173, "191": 174, "arg_r": 174, "remove_const_t": [174, 199], "assert": [174, 198], "s3415": 174, "star": 175, "bracket": 175, "2d": [175, 187, 192, 218], "5d": 175, "i5": 175, "i7": 175, "is_assign": 175, "assign_data": 175, "arg_data": 175, "anywai": [175, 192], "viewdst": 175, "dynamic_rank": 175, "a1": [175, 200, 225], "a2": [175, 225], "a3": [175, 225], "a4": 175, "a5": 175, "a6": 175, "a7": 175, "a8": 175, "a9": 175, "a10": 175, "a11": 175, "a12": 175, "a13": 175, "kokkos_view": 176, "viewstr": 176, "view_wrap": 176, "pointer_to_wrapping_memori": 176, "bypass": 176, "allowpad": 176, "notabl": 177, "simd_mask": [178, 179, 181, 198], "kokkos_simd": [179, 180, 181, 198], "abi": [179, 180, 181, 198], "simd_abi": [179, 180], "fallback": [179, 180], "nativ": [179, 180, 200], "plain": [179, 180, 200], "extract": [179, 180, 192, 219], "mask_typ": [179, 180, 198], "abi_typ": [179, 180], "integral_const": [179, 180], "element_aligned_tag": [179, 181, 198], "copy_from": [179, 181, 198], "copy_to": [179, 181, 198], "lh": [179, 180], "mag": 179, "sgn": 179, "native_simd": [179, 181, 198], "simd_typ": [179, 180, 181, 198], "zu": [179, 226], "simd": [180, 181, 204, 209, 228], "iff": 180, "native_simd_mask": [180, 198], "where_express": 181, "regist": [181, 183, 190, 198], "basi": [181, 185, 219], "const_where_express": 181, "scatter_to": 181, "gather_from": 181, "safer": 181, "domain": [181, 202], "is_reducer_typ": 182, "index_list_typ": 182, "streamlin": 182, "always_use_kokkos_sort": 182, "against": [182, 184, 185, 190, 201, 203, 213, 214, 227], "kokkos_macro": 182, "kokkos_atom": 182, "kokkos_arrai": 182, "kokkos_complex": 182, "kokkos_half": 182, "kokkos_tim": 182, "kokkos_sort": 182, "kokkos_dualview": 182, "kokkos_errorreport": 182, "kokkos_offsetview": 182, "kokkos_staticcrsgraph": 182, "kokkos_unorderedmap": 182, "kokkos_vector": 182, "parallel_": [182, 190, 197, 200], "trail": 182, "kokkosviewlabel": 182, "embed": [182, 185, 193], "argument_typ": 182, "first_argument_typ": 182, "second_argument_typ": 182, "transpar": [182, 183], "understand": [182, 183, 185, 192, 194, 195, 199, 200, 226], "finalize_al": 182, "num": [182, 191, 215], "kokkos_numa": 182, "harmon": 182, "nomenclatur": 182, "volatil": [182, 195, 197, 200], "keyword": [182, 199, 204], "chapter": [183, 185, 190, 192, 195, 196, 197, 199, 200, 215], "resolv": 183, "histogram": 183, "create_histogram": 183, "try": [183, 191, 195, 200, 201, 203], "lost": 183, "race": [183, 192, 195, 217], "situat": [183, 186, 195, 198, 224], "particl": [183, 223, 224], "neighbour": 183, "forc": [183, 185, 190, 195, 197, 198, 224], "compute_forc": 183, "forceloop": 183, "neighbor": [183, 224], "particle_id": 183, "neighbour_id": 183, "some_contribut": 183, "colour": 183, "ii": [183, 192, 218], "iii": 183, "disadvantag": 183, "transfer": [183, 200], "fall": [183, 190, 193, 200, 214, 225], "uninterrupt": 183, "cycl": [183, 185, 212, 215], "hinder": 183, "throughput": [183, 193], "createhistogram": 183, "scheme": 183, "find_indici": 183, "findindici": 183, "div": 183, "lshift": 183, "mod": 183, "mul": 183, "rshift": 183, "sub": [183, 199], "xor": 183, "histogram_atom": 183, "clever": 184, "constitut": [184, 190, 215], "tension": 184, "freedom": 184, "frustrat": [184, 198], "pain": 184, "deliber": 184, "accident": 184, "breakag": 184, "unless": [184, 185, 196, 198, 200, 227], "kokkos_": [184, 205], "chanc": 184, "inadvert": 184, "broken": 184, "kokkos_impl_": 184, "notic": [184, 207, 220, 221, 226], "period": 184, "hous": 184, "prime": 184, "incomplet": 184, "newer": [184, 185, 210], "particularli": [184, 219], "problemat": [184, 227], "obei": 184, "interfer": [184, 195], "collison": 184, "prefac": 184, "myproject_": 184, "disambigu": 184, "cap": 184, "usual": [184, 185, 192, 195, 196, 200, 213], "syntact": 184, "revis": 184, "behind": [184, 198, 218, 222], "publish": 184, "drive": [184, 191, 198], "workaround": [184, 213], "older": 184, "recompil": 184, "occasion": [184, 210], "overal": [184, 200, 215, 222], "migratori": 184, "evolutionari": 184, "ideal": 184, "wrong": [184, 199, 200], "wast": [184, 200], "continu": [184, 185, 192, 193, 201, 215, 220], "subdirectori": [184, 185], "union": 184, "fashion": [184, 199], "sole": [184, 193], "invok": [184, 195, 200], "explain": [185, 190, 195, 200], "mix": [185, 192, 195, 200, 201, 210], "advic": 185, "mainli": [185, 200], "directori": [185, 213, 215], "prevent": [185, 190, 192, 200, 217], "kokkoscore_config": 185, "h": [185, 202, 216, 222], "mention": [185, 215], "compliant": [185, 226], "date": [185, 213], "nightli": [185, 215], "readm": [185, 213, 215], "github": [185, 194, 203, 204, 212, 213, 214, 226], "repositori": [185, 213, 214], "At": [185, 191, 194, 196, 198, 200, 215, 226], "88": [185, 210], "nvc": [185, 210], "rocm": [185, 210, 226], "msvc": [185, 210], "xl": [185, 210, 213], "fujitsu": [185, 210], "arm": [185, 210], "linkag": [185, 210], "affect": [185, 200, 210], "fopenmp": 185, "hwloc": [185, 191, 205, 215], "As": [185, 186, 190, 193, 195, 196, 198, 201, 215, 220, 226], "robust": [185, 201], "strongli": [185, 200, 201], "encourag": [185, 190, 201, 203], "cmakelist": [185, 201], "txt": [185, 201], "find_packag": [185, 201, 205], "target_link_librari": [185, 201], "mytarget": [185, 201], "processor": [185, 190, 193, 195, 197, 215], "dkokkos_root": [185, 201], "lib64": 185, "especi": [185, 195, 196, 198, 212, 215, 221], "nvcc_wrapper": 185, "dcmake_cxx_compil": [185, 201], "bin": 185, "cmake_cxx_flag": 185, "propag": [185, 201], "illustr": [185, 190, 200, 201, 218], "toolchain": 185, "add_subdirectori": [185, 201], "dir": [185, 205], "include_directori": 185, "kokkos_include_dirs_ret": 185, "arch": 185, "mkdir": [185, 213], "cd": [185, 213], "srcdir": [185, 201], "dcmake_install_prefix": [185, 201], "my_install_fold": 185, "dkokkos_enable_openmp": [185, 201], "parti": [185, 192, 195, 201], "tpl": [185, 201], "altern": [185, 192, 198, 201, 205, 215], "download": [185, 201, 215], "env": [185, 201], "folder": [185, 201], "setup": [185, 201, 215, 222], "sh": [185, 201, 215], "variant": [185, 196, 200, 201], "deactiv": [185, 201], "chosen": [185, 201], "exact": [185, 201], "info": [185, 201, 204, 205], "hash": [185, 200, 201], "human": [185, 201], "readabl": [185, 198, 201], "spec": [185, 201], "dii": 185, "wish": [185, 191], "downstream": [185, 201], "almost": [185, 193, 198, 217], "myproject": 185, "myvers": 185, "idiosyncrasi": 185, "annoi": 185, "dspack_workaround": 185, "spack_workaround": 185, "spack_cxx": 185, "cmake_cxx_compil": 185, "cxx": [185, 218], "endif": [185, 192], "technolog": [185, 193, 207], "orient": [185, 224], "softwar": [185, 193, 198, 207], "framework": [185, 195, 202], "solut": [185, 193, 194, 198, 207, 215, 219, 226], "larg": [185, 198, 200, 201, 205, 219, 225], "multiphys": 185, "scientif": [185, 193, 200], "problem": [185, 192, 193, 212, 215, 221], "organ": [185, 205, 212, 224], "stand": 185, "trilinos_enable_kokko": 185, "tpetra": 185, "infer": [185, 199], "trilinos_enable_openmp": 185, "ON": [185, 201, 205, 207], "autogener": 185, "cmake_c_compil": 185, "cmake_fortran_compil": 185, "kokkos_arch_": 185, "archcod": 185, "kokkos_arch_hsw": [185, 205], "haswel": [185, 215], "uvm": [185, 192, 194, 197, 200, 220, 226], "export": 185, "cuda_launch_block": [185, 201], "cuda_managed_force_device_alloc": [185, 201], "aris": [185, 207], "stabil": 185, "symbol": 185, "ln": 185, "kokkos_source_dir_overrid": 185, "kokkoskernel": 185, "kokkoskernels_source_dir_overrid": 185, "script": [185, 201, 213, 214], "ompi_cxx": 185, "openmpi": 185, "digest": 185, "matter": [185, 195], "meta": 185, "kokkos_link_depend": 185, "kokkos_cpp_depend": 185, "kokkos_cppflag": 185, "kokkos_cxxflag": 185, "kokkos_ldflag": 185, "kokkos_lib": 185, "tutori": [185, 193, 204], "absolut": 185, "shell": [185, 201, 215], "kokkos_path": [185, 213], "IN": [185, 207], "root": [185, 198, 205], "cuda_path": 185, "toolkit": [185, 213], "kokkos_devic": 185, "kokkos_arch": [185, 198], "knl": [185, 205, 213], "knc": [185, 205], "snb": [185, 205], "hsw": [185, 205], "bdw": [185, 205], "kepler30": [185, 205], "kepler35": [185, 205], "kepler37": [185, 205], "maxwell50": [185, 205], "pascal60": [185, 205], "pascal61": [185, 205], "armv81": [185, 205], "bgq": [185, 205], "kokkos_use_tpl": 185, "experimental_memkind": 185, "kokkos_opt": 185, "aggressive_vector": 185, "kokkos_cuda_opt": [185, 196], "force_uvm": 185, "use_ldg": 185, "rdc": [185, 205], "enable_lambda": [185, 196], "hwloc_path": 185, "ye": 185, "kokkos_cxx_standard": 185, "lib": 185, "cxxflag": [185, 215], "emb": 185, "metaprogram": [185, 200], "shortcom": 185, "prepend": 185, "xcompil": 185, "analyz": [185, 215], "ccbin": 185, "edit": [185, 195, 213, 215], "nvcc_wrapper_default_compil": 185, "peopl": [185, 194, 226], "modul": [185, 197, 213, 215, 218, 228], "icpc": 185, "pgc": 185, "attach": [185, 191, 211, 215, 225], "degrad": 185, "accommod": 186, "click": 186, "head": [186, 225], "summat": 187, "parabl": 187, "minreduc": 187, "min_reduc": 187, "minloc_typ": 187, "minlocreduc": 187, "lminloc": 187, "minloc_reduc": 187, "reducer_typ": 187, "team_typ": 187, "team_minmaxloc": 187, "row_minmaxloc": 187, "thread_minmaxloc": 187, "gui": [187, 196, 228], "hurt": 187, "team_minmax": 187, "fulfil": [188, 189], "resolut": [188, 212, 224], "the_arrai": 188, "tr": [188, 189], "upd": [188, 189], "ndx": [188, 189], "myarrai": 189, "summyarrai": 189, "references_scalar": 189, "arraysumresult": 189, "exploit": [190, 219], "syntax": [190, 196, 199, 200, 205], "node": [190, 191, 193, 195, 197, 204, 215, 216, 225], "modern": [190, 201], "character": [190, 197], "higher": [190, 193], "orthogon": [190, 195], "heterogen": [190, 191, 197, 215, 223], "cluster": [190, 220], "multicor": [190, 193, 195, 197], "hyper": 190, "instruct": [190, 198], "socket": [190, 201], "network": [190, 215], "llc": [190, 207], "l1": 190, "l2": 190, "sm": 190, "warp": [190, 192, 200], "wave": 190, "collabor": [190, 193], "predefin": 190, "adapt": [190, 194, 197, 226], "suggest": [190, 215], "tightli": [190, 219, 228], "gather": 190, "choic": [190, 192, 195, 200, 201], "flat": [190, 225], "grid": [190, 192, 199], "inter": [190, 195], "guess": 190, "n_workset": 190, "choos": [190, 191, 196, 197, 200], "sometag": 190, "action": [190, 212, 215], "team_memb": [190, 225], "coordin": 190, "everyon": 190, "consum": 190, "indirect": [190, 207], "workset": 190, "lifetim": 190, "recycl": 190, "cell": [190, 219], "team_shmem_s": 190, "double_s": 190, "team_shared_a": 190, "get_shmem": 190, "team_shared_b": 190, "160": 190, "kilobyt": 190, "gigabyt": 190, "mostli": [190, 192], "adjust": 190, "raw": [190, 196], "shared_int_2d": 190, "shared_s": 190, "shmem_siz": 190, "layer": [190, 192, 193, 198, 218], "teamthreadloop": 190, "threadvectorloop": 190, "consciou": 190, "difficult": [190, 198, 219], "claus": [190, 196, 203, 207, 224], "catch": [190, 200], "violat": [190, 196, 200, 226], "loop_count": 190, "emploi": [190, 193, 195], "prepar": [190, 213], "stage": [190, 214], "innermost": 190, "compris": [190, 195], "workset_s": 190, "vectoriz": 190, "decor": 190, "pragma": [190, 192, 196], "ivdep": 190, "repetit": [190, 198], "kokkko": 190, "bodi": [190, 200, 210, 225], "shared_arrai": 190, "somefunct": [190, 192], "global_arrai": 190, "my_offset": 190, "inner_lsum": 190, "inner_": 190, "subpackag": [191, 200], "alphabet": [191, 204], "interpret": 191, "primarili": [191, 212], "sign": [191, 200], "job": [191, 215], "workstat": 191, "screen": 191, "promis": [191, 195, 196, 197], "conflict": [191, 200], "field": [191, 193, 194, 213, 219, 223, 226], "shut": 191, "down": [191, 194, 221, 226], "exit": 191, "atexit": 191, "mpi_comm_self": 191, "adopt": [192, 197], "facilit": 192, "lift": 192, "inde": [192, 200, 224], "cumbersom": 192, "enter": [192, 193, 200, 225], "__host__": [192, 206], "__cuda_arch__": 192, "blockidx": 192, "threadidx": 192, "blockdim": 192, "omp_set_num_thread": 192, "bookkeep": 192, "ask": [192, 195, 197, 200], "princip": 192, "mandatori": 192, "insur": 192, "app": 192, "placement": [192, 194, 226], "150": 192, "2d_arrai": 192, "200": [192, 200], "scenario": [192, 197, 198], "receiv": [192, 215], "straight": 192, "mykokkosfunct": 192, "host_spac": 192, "t_1d_device_view": 192, "t_2d_device_view": 192, "d_b": 192, "h_b": 192, "t_team": 192, "t_1d_view": 192, "t_3d_view": 192, "had": [192, 224], "whatev": 192, "a_old": 192, "unfortun": [192, 224, 226], "leav": [192, 200, 222], "unrestrict": 192, "push": [192, 210, 213], "bring": [192, 196, 218], "massiv": 192, "penalti": [192, 200], "1000": [192, 196, 200], "uneven": 192, "polymorph": [192, 197, 202], "bla": [192, 200, 228], "matric": [192, 200], "format": [192, 200, 214], "dot": 192, "cubla": 192, "kokkos_have_cuda": 192, "call_cublas_dot": 192, "ptr_on_devic": 192, "extent_0": [192, 200], "cbla": 192, "call_cblas_dot": 192, "hpc": [193, 204, 224], "verg": 193, "era": [193, 202], "angl": 193, "rate": 193, "flop": 193, "poor": 193, "workload": 193, "challeng": 193, "energi": 193, "mid": 193, "1990": [193, 196], "enjoi": 193, "seemingli": 193, "homogen": [193, 195, 215, 223], "decad": 193, "deriv": [193, 194, 207, 226], "commun": [193, 199, 212, 220, 222], "realiz": 193, "review": [193, 215], "broad": 193, "latenc": [193, 195, 200], "medium": 193, "graphic": [193, 195], "gp": 193, "toler": 193, "degre": [193, 197], "divers": 193, "interest": [193, 198], "heritag": 193, "offer": 193, "guidelin": 193, "todai": [193, 195], "cilk": 193, "tbb": 193, "linux": 193, "contemporari": [193, 195], "openacc": 193, "opencl": 193, "Such": [193, 218, 219], "varieti": [193, 215, 223], "pose": 193, "reminisc": 193, "becam": 193, "across": [193, 195, 197, 198, 204], "invest": [193, 200], "seek": 193, "isol": 193, "fluctuat": 193, "coverag": 193, "supplementari": 193, "gradual": 193, "odditi": [194, 226], "face": [194, 199, 226], "subtl": [194, 226], "classwithvirtualfunct": [194, 226], "somebas": [194, 226], "virtualfunct": [194, 226], "hostclassinst": [194, 226], "deviceclassinst": [194, 226], "cudamalloc": [194, 226], "cudamemcpi": [194, 226], "cudamemcpyhosttodevic": [194, 226], "devicekernel": [194, 226], "somecudapolici": [194, 226], "glanc": [194, 226], "fine": [194, 200, 226], "crash": [194, 226], "nomin": [194, 226], "vpointer": [194, 226], "vtabl": [194, 226], "among": [194, 215, 226], "okai": [194, 226], "rememb": [194, 196, 200, 215, 226], "amongst": [194, 226], "hidden": [194, 200, 226], "derefer": [194, 226], "credit": [194, 226], "pablo": [194, 226], "aria": [194, 226], "intro": [194, 226, 228], "faithfulli": [194, 226], "merrili": [194, 226], "pseudocod": [194, 226], "hostinst": [194, 226], "deviceinst": [194, 226], "deivc": [194, 226], "techniqu": [194, 226], "ugli": [194, 226], "repo": [194, 204, 226], "setafield": [194, 226], "somehostvalu": [194, 226], "naiv": [194, 198, 226], "wit": [194, 226], "said": [194, 199, 226], "solv": 194, "educ": [194, 226], "slack": [194, 204, 212, 226], "aspect": [195, 197, 198, 215], "programm": [195, 196, 198, 200, 220], "distinct": 195, "figur": [195, 197], "exascal": [195, 202], "consult": [195, 200], "ang": 195, "elect": 195, "show": [195, 196, 197, 200, 213], "die": [195, 197], "acceler": [195, 215, 222, 224], "reachabl": 195, "et": 195, "al": [195, 202], "proxi": 195, "sandia": [195, 207, 215], "nation": [195, 207], "laboratori": 195, "lawrenc": 195, "berkelei": 195, "consider": 195, "finit": [195, 217, 219], "packag": [195, 202, 213, 219], "slower": [195, 200], "dram": 195, "routin": [195, 218, 219], "collis": 195, "gain": 195, "topic": [195, 196], "coher": [195, 200], "hennessi": 195, "paterson": 195, "weak": 195, "therebi": 195, "fifth": [195, 199], "quantit": 195, "morgan": 195, "kaufmann": 195, "tempt": 195, "author": [195, 202], "background": 195, "scientist": 195, "stick": 195, "proof": 195, "forbid": [195, 200], "implic": 195, "filesystem": 195, "overlap": [195, 216], "reproduc": [195, 207, 212], "earli": 195, "awai": [195, 198, 199], "wonder": 195, "great": 195, "unnecessari": [196, 200], "harmless": 196, "anonym": 196, "suppli": 196, "outermost": 196, "turn": [196, 198, 200], "surround": 196, "stack": [196, 200], "secondli": 196, "circumvent": 196, "harder": 196, "interoper": [196, 198, 209, 218, 228], "omp": [196, 215], "prior": [196, 200, 201, 207, 212, 218, 222], "faster": 196, "trip": 196, "fewer": 196, "encapsul": [196, 197, 199], "semir": 196, "maxplu": 196, "x_": 196, "inf": 196, "columnsum": 196, "Be": 196, "convinc": 196, "numrow": 196, "numcol": 196, "cs": 196, "henc": 196, "sequenti": [196, 200, 219], "blelloch": 196, "book": 196, "hi": [196, 212], "phd": 196, "dissert": [196, 198], "val_i": 196, "mit": 196, "press": 196, "necess": 196, "unus": [196, 224], "differenti": 196, "bartag": 196, "rabtag": 196, "foobar": 196, "formul": 197, "vari": [197, 200], "hybrid": 197, "pim": 197, "principl": [197, 200], "remot": [197, 204, 215, 228], "send": 197, "undetermin": 197, "prescript": 197, "primit": 197, "spin": 197, "dead": 197, "persist": 197, "diverg": 197, "inspir": 197, "vocabulari": [197, 215], "comfort": 197, "reflect": [197, 200], "rewrit": 197, "unoptim": 197, "optimis": 197, "histori": [198, 215], "struggl": 198, "blog": 198, "insight": 198, "drawback": [198, 224], "quot": 198, "stanford": 198, "tim": 198, "folei": 198, "heart": 198, "black": 198, "box": 198, "matthia": 198, "kretz": 198, "deliv": 198, "vendor": [198, 228], "fairli": 198, "pictur": 198, "clearli": 198, "odd": 198, "quirk": 198, "tag_typ": 198, "sx": 198, "sy": 198, "sz": 198, "sr": 198, "squar": 198, "emit": [198, 199], "4x": 198, "speedup": [198, 222], "skip": [198, 200], "troublesom": 198, "pitfal": [198, 200], "evenli": 198, "divis": 198, "cleaner": 198, "wide": [198, 200, 215], "reach": [198, 200], "throughout": 198, "slight": 198, "quadratic_formula": 198, "x1": 198, "x2": 198, "discrimin": 198, "sqrt_discrimin": 198, "classic": 198, "familiar": [198, 200], "quadrat": 198, "formula": 198, "liter": 198, "mimic": 198, "roadmap": 198, "regard": 198, "very_expensive_funct": 198, "statement": 198, "spend": [198, 200], "lot": [198, 200, 213], "pick": [199, 200], "notat": 199, "vice": 199, "versa": 199, "cross": 199, "plane": 199, "cube": 199, "n_0": 199, "n_1": 199, "n_": 199, "a_0": 199, "a_1": 199, "a_": 199, "a_j": 199, "n_j": 199, "handi": 199, "boundari": 199, "matlab": 199, "python": [199, 204, 213, 215, 228], "colon": 199, "fourth": 199, "elabor": 199, "a_sub": 199, "won": [199, 200], "cheaper": 199, "easiest": [199, 201], "dens": [199, 204, 228], "inconveni": 199, "my_view_typ": 199, "my_subview_typ": 199, "my_subview_type_deduc": 199, "fast": [200, 213], "intim": 200, "factor": 200, "coder": 200, "tie": 200, "hard": 200, "evolv": 200, "reliev": 200, "burden": 200, "ty": 200, "expert": 200, "easi": [200, 201], "ellips": 200, "asterisk": 200, "typecast": 200, "a_ptr": 200, "malloc": 200, "a0": 200, "arbitrarili": 200, "unprotect": 200, "badli": 200, "grain": 200, "therefor": [200, 227], "advis": [200, 207], "deconstructor": 200, "disallow": 200, "indirectli": 200, "novic": 200, "THE": [200, 207, 213], "FOR": [200, 207], "IS": [200, 207], "NO": [200, 207], "rag": 200, "reorgan": 200, "v_outer": 200, "assigne": 200, "wors": 200, "yourself": [200, 213], "rid": 200, "inner_view_typ": 200, "outer_view_typ": 200, "numout": 200, "numinn": 200, "to_str": 200, "device_out": 200, "dispos": 200, "nonown": 200, "a_nonconst": 200, "nonconst": 200, "a_const": 200, "readonlyfunct": 200, "skew": 200, "parenthes": 200, "enclos": 200, "comma": 200, "delimit": 200, "a_ijk": 200, "rest": 200, "slow": 200, "leftmost": 200, "exempt": 200, "unwind": 200, "incorrect": 200, "100x50x4": 200, "50": 200, "200x50x4": 200, "300x60x4": 200, "300": 200, "java": 200, "s_1": 200, "s_2": 200, "s_3": 200, "dim1": 200, "extent_2": 200, "extent_n": 200, "conserv": 200, "benefici": 200, "heavi": 200, "stringent": 200, "overflow": 200, "lapack": [200, 228], "idea": 200, "lda": 200, "morton": 200, "thereof": 200, "viewmap": 200, "renam": 200, "coalesc": 200, "callbla": 200, "callsomeblasfunct": 200, "invalid_argu": 200, "100000": 200, "biject": 200, "accessspac": 200, "viewallocatewithoutiniti": 200, "affin": 200, "memcopi": 200, "discourag": 200, "circumv": 200, "defeat": 200, "polymorp": 200, "legaci": [200, 209], "legacyfunct": 200, "x_raw": 200, "len": 200, "myfunct": 200, "somelibraryfunct": 200, "reference_is_lvalu": 200, "sometrait": 200, "someothertrait": 200, "ca": 200, "a_atom": 200, "irregularli": 200, "a_ra": 200, "shorter": 200, "fault": 200, "prolifer": 200, "csr": 200, "spmatvec": 200, "ind": 200, "x_ra": 200, "y_i": 200, "accordingli": 200, "x_view": 200, "functionthattakeskokkosview": 200, "safest": 200, "tree": [201, 213, 225], "exceedingli": 201, "devil": 201, "kokkos_install_prefix": 201, "compiler_used_to_build_kokko": 201, "cmake_polici": 201, "cmp0074": 201, "cmake_build_instal": 201, "cmake_build_in_tre": 201, "kokkos_install_fold": 201, "craype_link_typ": 201, "miss": 201, "benchmark": [201, 215], "bytes_and_flop": 201, "nvlink": [201, 220], "displai": 201, "dev": [201, 213, 215], "articl": 202, "9485033": 202, "trott": [202, 207], "christian": [202, 207], "lebrun": 202, "grandi\u00e9": 202, "damien": 202, "arndt": 202, "daniel": 202, "ciesko": 202, "jan": 202, "dang": 202, "vinh": 202, "ellingwood": 202, "nathan": 202, "gayatri": 202, "rahulkumar": 202, "harvei": 202, "evan": 202, "hollman": 202, "daisi": 202, "ibanez": 202, "dan": 202, "liber": 202, "nevin": 202, "madsen": 202, "jonathan": 202, "mile": 202, "jeff": 202, "poliakoff": 202, "david": 202, "powel": 202, "ami": 202, "rajamanickam": 202, "sivasankaran": 202, "simberg": 202, "mikael": 202, "sunderland": 202, "turcksin": 202, "bruno": 202, "wilk": 202, "jeremiah": 202, "journal": 202, "ieee": 202, "transact": 202, "titl": 202, "2022": 202, "volum": 202, "805": 202, "817": 202, "doi": 202, "1109": 202, "tpd": 202, "2021": 202, "3097283": 202, "ecosystem": [202, 204], "9502936": 202, "berger": 202, "vergiat": 202, "luc": 202, "grandi": 202, "nader": 202, "gligor": 202, "milo": 202, "shipman": 202, "galen": 202, "womeldorff": 202, "geoff": 202, "scienc": 202, "comprehens": [202, 210, 213], "mcse": 202, "3098509": 202, "paper": 202, "carteredwards20143202": 202, "manycor": 202, "3202": 202, "3216": 202, "issn": 202, "0743": 202, "7315": 202, "1016": 202, "jpdc": 202, "07": [202, 213], "003": 202, "url": 202, "www": 202, "sciencedirect": 202, "pii": 202, "s0743731514001257": 202, "carter": 202, "edward": 202, "pull": [203, 213, 215, 225], "licens": [203, 204], "bsd": [203, 207], "commerci": 203, "req": 203, "batch": [204, 228], "pykokko": 204, "checkpoint": 204, "mdspan": 204, "p0009": 204, "stdbla": 204, "p1673": 204, "kokkosteam": [204, 212], "instal": [204, 205, 215, 220], "cmake": [204, 210, 221], "video": 204, "lectur": 204, "slide": 204, "cite": 204, "sensit": 205, "recal": 205, "dkeyword_nam": 205, "keywords_enable_other_opt": 205, "kokkos_enable_compiler_warn": 205, "relax": 205, "kokkos_enable_cuda_ldg_intrins": 205, "um": 205, "kokkos_enable_deprecated_cod": 205, "kokkos_enable_exampl": 205, "kokkos_enable_large_mem_test": 205, "kokkos_enable_test": 205, "kokkos_enable_libnuma": 205, "libnuma": 205, "kokkos_cuda_dir": 205, "cuda_root": 205, "kokkos_hwloc_dir": 205, "hwloc_root": 205, "kokkos_libnuma_dir": 205, "libnuma_root": 205, "kokkos_memkind_dir": 205, "memkind_root": 205, "kokkos_libdl_dir": 205, "libdl_root": 205, "kokkos_librt_dir": 205, "librt_root": 205, "hpx_dir": 205, "hpx_root": 205, "config": [205, 213, 215], "kokkos_arch_n": 205, "kokkos_arch_a64fx": 205, "sve": 205, "kokkos_arch_amdavx": 205, "amdavx": 205, "armv80": 205, "armv8_thunderx": 205, "armv8_tx2": 205, "kokkos_arch_armv8_tx2": 205, "kokkos_arch_bdw": 205, "kokkos_arch_bgq": 205, "sup": 205, "kepler32": 205, "kokkos_arch_knl": 205, "maxwell52": 205, "maxwell53": 205, "kokkos_arch_skx": 205, "skx": 205, "kokkos_arch_snb": 205, "turing75": 205, "volta70": 205, "volta72": 205, "kokkos_arch_wsm": 205, "wsm": 205, "kokkos_arch_zen": 205, "kokkos_arch_zen2": 205, "kokkos_arch_zen3": 205, "copyright": 207, "2020": 207, "ntess": 207, "contract": [207, 222], "de": 207, "na0003525": 207, "govern": 207, "retain": 207, "redistribut": 207, "permit": 207, "materi": 207, "corpor": 207, "contributor": 207, "endors": 207, "permiss": [207, 213, 215], "BY": 207, "AS": 207, "warranti": 207, "BUT": 207, "OF": 207, "merchant": 207, "shall": [207, 212], "liabl": 207, "incident": 207, "exemplari": 207, "consequenti": 207, "damag": 207, "procur": 207, "substitut": 207, "servic": 207, "loss": 207, "profit": 207, "busi": 207, "interrupt": 207, "theori": [207, 222], "liabil": 207, "strict": 207, "tort": 207, "neglig": 207, "IF": 207, "SUCH": 207, "contact": 207, "crtrott": 207, "gov": 207, "introduct": [209, 215, 228], "unawar": 210, "md": [210, 213], "knownissu": 210, "pthread": [210, 213, 215], "wall": [210, 213], "wunus": 210, "wshadow": [210, 213], "pedant": [210, 213], "werror": [210, 213], "wsign": [210, 213], "wtype": [210, 213], "wignor": 210, "wempti": 210, "wclobber": 210, "wuniniti": 210, "master": [210, 213, 214, 215], "rigor": 210, "feedback": 211, "workflow": [211, 217], "channel": 212, "enhanc": [212, 213, 224], "priorit": 212, "weekli": 212, "mileston": 212, "partner": 212, "slot": 212, "prioriti": 212, "usergroup": 212, "15feb18": 213, "x86": [213, 215], "043": 213, "196": 213, "128": 213, "pgi": 213, "103": 213, "174": 213, "cygwin": 213, "64bit": 213, "test_all_sandia": [213, 214, 215], "trilino": [213, 215, 219], "atdm": 213, "lammp": 213, "sparc": 213, "changelog": 213, "master_histori": 213, "snapshot": [213, 215], "clone": [213, 215], "git": [213, 214], "nohup": 213, "tail": 213, "watch": 213, "white": [213, 215], "shepard": [213, 215], "shepard_jenkins_run_script_serial_intel": [213, 215], "pristin": [213, 215], "rerun": 213, "token": [213, 228], "oldtag": 213, "newtag": 213, "04": 213, "00": 213, "rubi": 213, "gitthub_changelog_gener": 213, "indevelop": 213, "cat": 213, "cleanup": 213, "commit": [213, 215], "owner": [213, 215, 220], "clariti": [213, 224], "noteworthi": 213, "checkout": [213, 215], "majornumb": 213, "minornumb": 213, "weekssinceminornumberupd": 213, "month": 213, "dai": 213, "sha1": 213, "append": [213, 225], "03": 213, "27": 213, "da314444": 213, "29ccb58a": 213, "amend": 213, "mm": [213, 218], "dd": 213, "yyyi": 213, "sem": [213, 215], "checkin": [213, 215], "disk": [213, 222], "ram": 213, "ceerws1113": 213, "trilinos_path": 213, "pwd": 213, "untrack": 213, "py": [213, 215], "backtrack": 213, "approv": [214, 215], "deploy": 214, "jenkin": [214, 215], "travi": 214, "institut": 214, "verif": 214, "yml": 214, "wider": 214, "role": 215, "databas": 215, "offici": 215, "fork": 215, "privileg": 215, "865": 215, "begun": 215, "conclus": 215, "haap": 215, "secondari": 215, "mainten": 215, "outag": 215, "scroll": 215, "ohpc": 215, "srn": 215, "apollo": 215, "bowman": 215, "elli": 215, "hansen": 215, "e5": 215, "2698": 215, "kokkos_dev": 215, "ride": 215, "p8": 215, "tuleta": 215, "fireston": 215, "garrison": 215, "tesla": 215, "k40": 215, "k80": 215, "p100": 215, "36": 215, "sullivan": 215, "mac": 215, "bed": 215, "submiss": 215, "connect": 215, "webcar": 215, "intranet": 215, "person": 215, "staff": 215, "leader": 215, "assist": 215, "csri": 215, "csu": 215, "administ": 215, "daili": 215, "regimen": 215, "suit": 215, "dashboard": 215, "identif": 215, "flow": 215, "terminolog": 215, "joint": 215, "simul": [215, 220, 223, 224], "qthread": 215, "briefli": 215, "generate_makefil": 215, "bash": 215, "makefil": 215, "spot": 215, "jenkins_test_driv": 215, "testing_script": 215, "server": 215, "sha": 215, "accomplish": [215, 219], "prepare_trilinos_repo": 215, "shepard_jenkins_run_script_pthread_intel": 215, "workspac": 215, "white_run_jenkins_script_cuda": 215, "white_run_jenkins_script_omp": 215, "test_kokkos_master_develop_promot": 215, "checkintest": 215, "flavor": 215, "speed": 215, "central": 215, "equat": 215, "viz": 215, "accuraci": 215, "replica": 215, "nearli": 215, "hundr": 215, "unit_test": 215, "performance_test": 215, "perf_test": 215, "scrutini": 215, "inadequaci": 215, "defici": 215, "halo": 216, "averag": 216, "interop": [216, 228], "cabana": 216, "window": 216, "demonstr": [217, 218, 219, 222], "quantiti": 217, "ratio": 217, "ultim": 217, "count_adjacent_el": 217, "elements_to_nod": 217, "number_of_nod": 217, "elements_per_nod": 217, "scatter_elements_per_nod": 217, "create_scatter_view": 217, "access_elements_per_nod": 217, "node_of_el": 217, "sum_to_nod": 217, "element_valu": 217, "node_valu": 217, "scatter_node_valu": 217, "access_node_valu": 217, "average_to_nod": 217, "flcl": 218, "daxpi": 218, "ndarrai": 218, "flcl_ndarray_t": 218, "dope": 218, "flatten": [218, 219], "_flcl_nd_array_t": 218, "flcl_ndarray_max_rank": 218, "f90": 218, "nd_array_t": 218, "c_size_t": 218, "nd_array_max_rank": 218, "c_ptr": 218, "procedur": 218, "to_nd_arrai": 218, "to_nd_array_l_1d": 218, "to_nd_array_i32_1d": 218, "to_nd_array_i64_1d": 218, "to_nd_array_r32_1d": 218, "to_nd_array_r64_1d": 218, "to_nd_array_l_2d": 218, "to_nd_array_i32_2d": 218, "to_nd_array_i64_2d": 218, "to_nd_array_r32_2d": 218, "to_nd_array_r64_2d": 218, "to_nd_array_l_3d": 218, "to_nd_array_i32_3d": 218, "to_nd_array_i64_3d": 218, "to_nd_array_r32_3d": 218, "to_nd_array_r64_3d": 218, "view_from_ndarrai": 218, "axpi": 218, "flcl_mod": 218, "c_doubl": 218, "allocat": 218, "f_y": 218, "c_y": 218, "alpha": 218, "subroutin": 218, "iso_c_bind": 218, "inout": 218, "f_axpi": 218, "nd_arrai": 218, "earlier": 218, "c_axpi": 218, "nd_array_i": 218, "nd_array_x": 218, "tensor": 219, "pde": 219, "inputdata": 219, "inputfield": 219, "outputfield": 219, "tripl": 219, "paral": 219, "for_all_cel": 219, "merit": 219, "akin": 219, "notion": 219, "natur": 219, "mdr_for_all_cel": 219, "wiki": 219, "intrepid2": 219, "intrepid2_arraytoolsdef": 219, "overview": 219, "intrepid": 219, "complementari": 220, "scalabl": 220, "walk": 220, "source_rank": 220, "destination_rank": 220, "number_of_doubl": 220, "my_rank": 220, "mpi_comm": 220, "comm": 220, "mpi_comm_world": 220, "mpi_comm_rank": 220, "mpi_send": 220, "mpi_doubl": 220, "mpi_recv": 220, "quit": 220, "pcie": 220, "unstructur": 220, "sent": 220, "redudantli": 220, "filter": 220, "subset_scann": 220, "keys_in": 220, "desired_key_in": 220, "subset_indices_in": 220, "m_kei": 220, "m_desired_kei": 220, "m_subset_indic": 220, "final_pass": 220, "is_in": 220, "find_subset": 220, "desired_kei": 220, "subset_s": 220, "local_sum": 220, "subset_indic": 220, "transmit": 220, "pack_messag": 220, "all_element_data": 220, "kokkos_enable_deprecated_code_4": 221, "tediou": 221, "appar": 221, "acess": 221, "executiospac": 221, "spell": [221, 226], "myview": 221, "c_style_memori": 221, "c_style_alloc": 221, "concur": 222, "stagger": 222, "littl": 222, "hostexecspac": 222, "deviceexecspac": 222, "device_range_polici": 222, "host_range_polici": 222, "viewvectortyp": 222, "viewmatrixtyp": 222, "xval": 222, "init_src_view": 222, "p_x": 222, "p_a": 222, "init_a": 222, "init_x": 222, "h_x": 222, "h_y": 222, "nrepeat": 222, "synch": 222, "yax": 222, "temp2": 222, "ini_src_view": 222, "occupi": 222, "attent": 222, "paid": 222, "opportun": [222, 224], "range_polici": 222, "v_r": 222, "v_r1": 222, "h_v": 222, "get_initial_st": 222, "get_rhs_func": 222, "serialize_st": 222, "view_r": 222, "Their": 223, "exhibit": 223, "cabana_soa": 223, "vectorlength": 223, "membertyp": 223, "cabana_aosoa": 223, "performancetrait": 223, "memorymanag": 223, "carri": 223, "evolut": 224, "particleinteract": 224, "particleposit": 224, "po": 224, "particleforc": 224, "particleneighbor": 224, "pairforc": 224, "parallelis": 224, "rectifi": 224, "qualiti": 224, "plai": 224, "tagphase1": 224, "tagphase2": 224, "compute1": 224, "compute2": 224, "prescrib": 225, "predetermin": 225, "surrog": 225, "roll": 225, "b1": 225, "b2": 225, "b3": 225, "fib": 225, "wait_list": 225, "a_f1": 225, "b_f1": 225, "b_f2": 225, "a_f2": 225, "tm": 225, "vertex": 225, "subteam": 225, "visit": 225, "vertic": 225, "exce": 225, "threshold": 225, "unvisit": 225, "frontier": 225, "st": 225, "edg": 225, "greatli": 225, "lookup": 226, "neccessari": 226, "myloop": 226, "kokkos_class_lambda": 226, "implementationptr": 226, "make_shar": 226, "oh": 226, "strictli": 226, "nominmax": 227, "yield": 227, "uninterpret": 227, "redefin": 227, "dnominmax": 227, "multidim": 228, "safeti": 228, "pga": 228, "analysi": 228, "linear": 228, "algebra": 228, "solver": 228}, "objects": {"": [[74, 0, 1, "_CPPv4I0E6Bitset", "Bitset"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_FORWARD_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_FORWARD_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_FORWARD_MOVE_HINT_FORWARD"], [74, 1, 1, "_CPPv4N6Bitset16BIT_SCAN_REVERSEE", "Bitset::BIT_SCAN_REVERSE"], [74, 1, 1, "_CPPv4N6Bitset35BIT_SCAN_REVERSE_MOVE_HINT_BACKWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_BACKWARD"], [74, 1, 1, "_CPPv4N6Bitset34BIT_SCAN_REVERSE_MOVE_HINT_FORWARDE", "Bitset::BIT_SCAN_REVERSE_MOVE_HINT_FORWARD"], [74, 2, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset"], [74, 3, 1, "_CPPv4N6Bitset6BitsetEj", "Bitset::Bitset::arg_size"], [74, 4, 1, "_CPPv4I0E6Bitset", "Bitset::Device"], [74, 1, 1, "_CPPv4N6Bitset18MOVE_HINT_BACKWARDE", "Bitset::MOVE_HINT_BACKWARD"], [74, 2, 1, "_CPPv4N6Bitset5clearEv", "Bitset::clear"], [74, 2, 1, "_CPPv4NK6Bitset5countEv", "Bitset::count"], [74, 2, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset17find_any_set_nearEjj", "Bitset::find_any_set_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::hint"], [74, 3, 1, "_CPPv4NK6Bitset19find_any_unset_nearEjj", "Bitset::find_any_unset_near::scan_direction"], [74, 2, 1, "_CPPv4NK6Bitset12is_allocatedEv", "Bitset::is_allocated"], [74, 2, 1, "_CPPv4NK6Bitset8max_hintEv", "Bitset::max_hint"], [74, 2, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset"], [74, 2, 1, "_CPPv4N6Bitset5resetEv", "Bitset::reset"], [74, 3, 1, "_CPPv4N6Bitset5resetEj", "Bitset::reset::i"], [74, 2, 1, "_CPPv4N6Bitset3setEj", "Bitset::set"], [74, 2, 1, "_CPPv4N6Bitset3setEv", "Bitset::set"], [74, 3, 1, "_CPPv4N6Bitset3setEj", "Bitset::set::i"], [74, 2, 1, "_CPPv4NK6Bitset4sizeEv", "Bitset::size"], [74, 2, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test"], [74, 3, 1, "_CPPv4NK6Bitset4testEj", "Bitset::test::i"], [74, 0, 1, "_CPPv4I0E11ConstBitset", "ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset"], [74, 2, 1, "_CPPv4N11ConstBitset11ConstBitsetEv", "ConstBitset::ConstBitset"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK11ConstBitset", "ConstBitset::ConstBitset::rhs"], [74, 3, 1, "_CPPv4N11ConstBitset11ConstBitsetERK6BitsetI6DeviceE", "ConstBitset::ConstBitset::rhs"], [74, 4, 1, "_CPPv4I0E11ConstBitset", "ConstBitset::Device"], [74, 2, 1, "_CPPv4NK11ConstBitset5countEv", "ConstBitset::count"], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator="], [74, 2, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator="], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK11ConstBitset", "ConstBitset::operator=::rhs"], [74, 3, 1, "_CPPv4N11ConstBitsetaSERK6BitsetI6DeviceE", "ConstBitset::operator=::rhs"], [74, 2, 1, "_CPPv4NK11ConstBitset4sizeEv", "ConstBitset::size"], [74, 2, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test"], [74, 3, 1, "_CPPv4NK11ConstBitset4testEj", "ConstBitset::test::i"], [175, 5, 1, "_CPPv410HostMirror", "HostMirror"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 2, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::ExecPolicy"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 4, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::FunctorType"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::functor"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::name"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [144, 3, 1, "_CPPv4I00EN6Kokkos12parallel_forERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_for::policy"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 2, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::ExecPolicy"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::FunctorType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 4, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::ReturnType"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::functor"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::name"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I00EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorType", "Kokkos::parallel_scan::policy"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [146, 3, 1, "_CPPv4I000EN6Kokkos13parallel_scanERKNSt6stringERK10ExecPolicyRK11FunctorTypeR10ReturnType", "Kokkos::parallel_scan::return_value"], [175, 5, 1, "_CPPv412array_layout", "array_layout"], [175, 5, 1, "_CPPv415const_data_type", "const_data_type"], [175, 5, 1, "_CPPv423const_scalar_array_type", "const_scalar_array_type"], [175, 5, 1, "_CPPv410const_type", "const_type"], [175, 5, 1, "_CPPv416const_value_type", "const_value_type"], [175, 5, 1, "_CPPv49data_type", "data_type"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy"], [74, 2, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::DstDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 4, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::SrcDevice"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::dst"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK11ConstBitsetI9SrcDeviceE", "deep_copy::src"], [74, 3, 1, "_CPPv4I00E9deep_copyvR6BitsetI9DstDeviceERK6BitsetI9SrcDeviceE", "deep_copy::src"], [175, 5, 1, "_CPPv411device_type", "device_type"], [175, 5, 1, "_CPPv49dimension", "dimension"], [175, 5, 1, "_CPPv415execution_space", "execution_space"], [175, 5, 1, "_CPPv417host_mirror_space", "host_mirror_space"], [175, 5, 1, "_CPPv412memory_space", "memory_space"], [175, 5, 1, "_CPPv413memory_traits", "memory_traits"], [175, 5, 1, "_CPPv419non_const_data_type", "non_const_data_type"], [175, 5, 1, "_CPPv427non_const_scalar_array_type", "non_const_scalar_array_type"], [175, 5, 1, "_CPPv414non_const_type", "non_const_type"], [175, 5, 1, "_CPPv420non_const_value_type", "non_const_value_type"], [175, 5, 1, "_CPPv412pointer_type", "pointer_type"], [175, 5, 1, "_CPPv414reference_type", "reference_type"], [175, 5, 1, "_CPPv417scalar_array_type", "scalar_array_type"], [175, 5, 1, "_CPPv49size_type", "size_type"], [175, 5, 1, "_CPPv410specialize", "specialize"], [175, 5, 1, "_CPPv410value_type", "value_type"], [108, 6, 1, "_CPPv44BAndR10value_type", "BAnd"], [108, 6, 1, "_CPPv44BAndRK16result_view_type", "BAnd"], [108, 7, 1, "_CPPv44BAndR10value_type", "BAnd::value_"], [108, 7, 1, "_CPPv44BAndRK16result_view_type", "BAnd::value_"], [109, 6, 1, "_CPPv43BOrR10value_type", "BOr"], [109, 6, 1, "_CPPv43BOrRK16result_view_type", "BOr"], [109, 7, 1, "_CPPv43BOrR10value_type", "BOr::value_"], [109, 7, 1, "_CPPv43BOrRK16result_view_type", "BOr::value_"], [131, 8, 1, "_CPPv422InitializationSettings", "InitializationSettings"], [131, 9, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings"], [131, 9, 1, "_CPPv4N22InitializationSettings22InitializationSettingsEv", "InitializationSettings::InitializationSettings"], [131, 7, 1, "_CPPv4N22InitializationSettings22InitializationSettingsERK13InitArguments", "InitializationSettings::InitializationSettings::arguments"], [131, 9, 1, "_CPPv4NK22InitializationSettings18get_PARAMETER_NAMEEv", "InitializationSettings::get_PARAMETER_NAME"], [131, 9, 1, "_CPPv4NK22InitializationSettings18has_PARAMETER_NAMEEv", "InitializationSettings::has_PARAMETER_NAME"], [131, 9, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME"], [131, 7, 1, "_CPPv4N22InitializationSettings18set_PARAMETER_NAMEE14PARAMETER_TYPE", "InitializationSettings::set_PARAMETER_NAME::value"], [110, 6, 1, "_CPPv44LAndR10value_type", "LAnd"], [110, 6, 1, "_CPPv44LAndRK16result_view_type", "LAnd"], [110, 7, 1, "_CPPv44LAndR10value_type", "LAnd::value_"], [110, 7, 1, "_CPPv44LAndRK16result_view_type", "LAnd::value_"], [111, 6, 1, "_CPPv43LOrR10value_type", "LOr"], [111, 6, 1, "_CPPv43LOrRK16result_view_type", "LOr"], [111, 7, 1, "_CPPv43LOrR10value_type", "LOr::value_"], [111, 7, 1, "_CPPv43LOrRK16result_view_type", "LOr::value_"], [148, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 9, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy"], [148, 9, 1, "_CPPv413MDRangePolicyv", "MDRangePolicy"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy"], [148, 9, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy"], [148, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::IT"], [148, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::IT"], [148, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::OT"], [148, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::OT"], [148, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::TT"], [148, 10, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::TT"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::begin"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::begin"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::begin"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::end"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEE", "MDRangePolicy::end"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::end"], [148, 7, 1, "_CPPv413MDRangePolicyRKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEERKN6Kokkos5ArrayI7int64_t4rankEE", "MDRangePolicy::tiling"], [148, 7, 1, "_CPPv4I000E13MDRangePolicyRKNSt16initializer_listI2OTEERKNSt16initializer_listI2ITEERNSt16initializer_listI2TTEE", "MDRangePolicy::tiling"], [112, 6, 1, "_CPPv43MaxR10value_type", "Max"], [112, 6, 1, "_CPPv43MaxRK16result_view_type", "Max"], [112, 7, 1, "_CPPv43MaxR10value_type", "Max::value_"], [112, 7, 1, "_CPPv43MaxRK16result_view_type", "Max::value_"], [113, 6, 1, "_CPPv46MaxLocR10value_type", "MaxLoc"], [113, 6, 1, "_CPPv46MaxLocRK16result_view_type", "MaxLoc"], [113, 7, 1, "_CPPv46MaxLocR10value_type", "MaxLoc::value_"], [113, 7, 1, "_CPPv46MaxLocRK16result_view_type", "MaxLoc::value_"], [114, 6, 1, "_CPPv43MinR10value_type", "Min"], [114, 6, 1, "_CPPv43MinRK16result_view_type", "Min"], [114, 7, 1, "_CPPv43MinR10value_type", "Min::value_"], [114, 7, 1, "_CPPv43MinRK16result_view_type", "Min::value_"], [115, 6, 1, "_CPPv46MinLocR10value_type", "MinLoc"], [115, 6, 1, "_CPPv46MinLocRK16result_view_type", "MinLoc"], [115, 7, 1, "_CPPv46MinLocR10value_type", "MinLoc::value_"], [115, 7, 1, "_CPPv46MinLocRK16result_view_type", "MinLoc::value_"], [116, 6, 1, "_CPPv46MinMaxR10value_type", "MinMax"], [116, 6, 1, "_CPPv46MinMaxRK16result_view_type", "MinMax"], [116, 7, 1, "_CPPv46MinMaxR10value_type", "MinMax::value_"], [116, 7, 1, "_CPPv46MinMaxRK16result_view_type", "MinMax::value_"], [117, 6, 1, "_CPPv49MinMaxLocR10value_type", "MinMaxLoc"], [117, 6, 1, "_CPPv49MinMaxLocRK16result_view_type", "MinMaxLoc"], [117, 7, 1, "_CPPv49MinMaxLocR10value_type", "MinMaxLoc::value_"], [117, 7, 1, "_CPPv49MinMaxLocRK16result_view_type", "MinMaxLoc::value_"], [149, 9, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam"], [149, 7, 1, "_CPPv47PerTeam14TeamMemberType", "PerTeam::team"], [149, 9, 1, "_CPPv49PerThread14TeamMemberType", "PerThread"], [149, 7, 1, "_CPPv49PerThread14TeamMemberType", "PerThread::team"], [120, 6, 1, "_CPPv44ProdR10value_type", "Prod"], [120, 6, 1, "_CPPv44ProdRK16result_view_type", "Prod"], [120, 7, 1, "_CPPv44ProdR10value_type", "Prod::value_"], [120, 7, 1, "_CPPv44ProdRK16result_view_type", "Prod::value_"], [150, 9, 1, "_CPPv411RangePolicyv", "RangePolicy"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 9, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy"], [150, 10, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 10, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::InitArgs"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::begin"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::end"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::init_args"], [150, 7, 1, "_CPPv4IDpE11RangePolicyRK14ExecutionSpaceRK7int64_tRK7int64_tDpK8InitArgs", "RangePolicy::space"], [121, 6, 1, "_CPPv47ReducerR10value_type", "Reducer"], [121, 6, 1, "_CPPv47ReducerRK16result_view_type", "Reducer"], [121, 7, 1, "_CPPv47ReducerR10value_type", "Reducer::value_"], [121, 7, 1, "_CPPv47ReducerRK16result_view_type", "Reducer::value_"], [123, 6, 1, "_CPPv43SumR10value_type", "Sum"], [123, 6, 1, "_CPPv43SumRK16result_view_type", "Sum"], [123, 7, 1, "_CPPv43SumR10value_type", "Sum::value_"], [123, 7, 1, "_CPPv43SumRK16result_view_type", "Sum::value_"], [149, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange"], [149, 9, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::begin"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::count"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::end"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType", "TeamThreadRange::team"], [149, 7, 1, "_CPPv415TeamThreadRange14TeamMemberType9IndexType9IndexType", "TeamThreadRange::team"], [149, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange"], [149, 9, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::begin"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::count"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::end"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType", "ThreadVectorRange::team"], [149, 7, 1, "_CPPv417ThreadVectorRange14TeamMemberType9IndexType9IndexType", "ThreadVectorRange::team"], [175, 9, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View"], [175, 9, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View"], [175, 9, 1, "_CPPv44ViewRK12pointer_typeDpRK7IntType", "View"], [175, 9, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View"], [175, 9, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View"], [175, 9, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View"], [175, 9, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View"], [175, 9, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View"], [175, 9, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [175, 9, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View"], [175, 9, 1, "_CPPv44ViewRR4View", "View"], [175, 9, 1, "_CPPv44Viewv", "View"], [175, 7, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::args"], [175, 7, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::indices"], [175, 7, 1, "_CPPv44ViewRK12pointer_typeDpRK7IntType", "View::indices"], [175, 7, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::indices"], [175, 7, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::indices"], [175, 7, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::layout"], [175, 7, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::layout"], [175, 7, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [175, 7, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::layout"], [175, 7, 1, "_CPPv44ViewRKNSt6stringEDpRK7IntType", "View::name"], [175, 7, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [175, 7, 1, "_CPPv44ViewRKNSt6stringERK12array_layout", "View::name"], [175, 7, 1, "_CPPv44ViewRK15AllocPropertiesDpRK7IntType", "View::prop"], [175, 7, 1, "_CPPv44ViewRK15AllocPropertiesRK12array_layout", "View::prop"], [175, 7, 1, "_CPPv44ViewRK12pointer_typeDpRK7IntType", "View::ptr"], [175, 7, 1, "_CPPv44ViewRK4ViewI2DTDp4PropE", "View::rhs"], [175, 7, 1, "_CPPv44ViewRK4ViewI2DTDp4PropEDp4Args", "View::rhs"], [175, 7, 1, "_CPPv44ViewRR4View", "View::rhs"], [175, 7, 1, "_CPPv44ViewRK12ScratchSpaceDpRK7IntType", "View::space"], [175, 7, 1, "_CPPv44ViewRK12ScratchSpaceRK12array_layout", "View::space"], [175, 9, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access"], [175, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i0"], [175, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i1"], [175, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i2"], [175, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i3"], [175, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i4"], [175, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i5"], [175, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i6"], [175, 7, 1, "_CPPv4NK6accessERK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntTypeRK7IntType", "access::i7"], [175, 9, 1, "_CPPv411assign_data12pointer_type", "assign_data"], [175, 7, 1, "_CPPv411assign_data12pointer_type", "assign_data::arg_data"], [106, 9, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store"], [106, 10, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::T"], [106, 7, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::new_value"], [106, 7, 1, "_CPPv4I0E12atomic_storevPC1TK1T", "atomic_store::ptr_to_value"], [163, 8, 1, "_CPPv4I0E7complex", "complex"], [163, 10, 1, "_CPPv4I0E7complex", "complex::Scalar"], [163, 9, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex"], [163, 6, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex"], [163, 6, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex"], [163, 6, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex"], [163, 6, 1, "_CPPv4N7complex7complexEv", "complex::complex"], [163, 10, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::T"], [163, 10, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::T"], [163, 10, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T1"], [163, 10, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::T2"], [163, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::imag"], [163, 7, 1, "_CPPv4I00EN7complex7complexERK2T1RK2T2", "complex::complex::real"], [163, 7, 1, "_CPPv4I0EN7complex7complexERK1T", "complex::complex::real"], [163, 7, 1, "_CPPv4I0EN7complex7complexERKNSt7complexI1TEE", "complex::complex::src"], [163, 7, 1, "_CPPv4N7complex7complexERK7complex", "complex::complex::src"], [163, 6, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag"], [163, 6, 1, "_CPPv4N7complex4imagEv", "complex::imag"], [163, 6, 1, "_CPPv4NK7complex4imagEv", "complex::imag"], [163, 7, 1, "_CPPv4N7complex4imagE8RealType", "complex::imag::v"], [163, 9, 1, "_CPPv4NK7complexcvNSt7complexI10value_typeEEEv", "complex::operator std::complex&lt;value_type&gt;"], [163, 9, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!="], [163, 6, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!="], [163, 6, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!="], [163, 10, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::T"], [163, 10, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::T"], [163, 10, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::T"], [163, 7, 1, "_CPPv4I0EN7complexneER7complexRK1T", "complex::operator!=::real"], [163, 7, 1, "_CPPv4I0EN7complexneER7complexRK7complexI1TE", "complex::operator!=::src"], [163, 7, 1, "_CPPv4I0EN7complexneER7complexRKNSt7complexI1TEE", "complex::operator!=::src"], [163, 9, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*="], [163, 6, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*="], [163, 6, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*="], [163, 10, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::T"], [163, 10, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::T"], [163, 10, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::T"], [163, 7, 1, "_CPPv4I0EN7complexmLER7complexRK1T", "complex::operator*=::real"], [163, 7, 1, "_CPPv4I0EN7complexmLER7complexRK7complexI1TE", "complex::operator*=::src"], [163, 7, 1, "_CPPv4I0EN7complexmLER7complexRKNSt7complexI1TEE", "complex::operator*=::src"], [163, 9, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+="], [163, 6, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+="], [163, 6, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+="], [163, 10, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::T"], [163, 10, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::T"], [163, 10, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::T"], [163, 7, 1, "_CPPv4I0EN7complexpLER7complexRK1T", "complex::operator+=::real"], [163, 7, 1, "_CPPv4I0EN7complexpLER7complexRK7complexI1TE", "complex::operator+=::src"], [163, 7, 1, "_CPPv4I0EN7complexpLER7complexRKNSt7complexI1TEE", "complex::operator+=::src"], [163, 9, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-="], [163, 6, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-="], [163, 6, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-="], [163, 10, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::T"], [163, 10, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::T"], [163, 10, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::T"], [163, 7, 1, "_CPPv4I0EN7complexmIER7complexRK1T", "complex::operator-=::real"], [163, 7, 1, "_CPPv4I0EN7complexmIER7complexRK7complexI1TE", "complex::operator-=::src"], [163, 7, 1, "_CPPv4I0EN7complexmIER7complexRKNSt7complexI1TEE", "complex::operator-=::src"], [163, 9, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/="], [163, 6, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/="], [163, 6, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/="], [163, 10, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::T"], [163, 10, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::T"], [163, 10, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::T"], [163, 7, 1, "_CPPv4I0EN7complexdVER7complexRK1T", "complex::operator/=::real"], [163, 7, 1, "_CPPv4I0EN7complexdVER7complexRK7complexI1TE", "complex::operator/=::src"], [163, 7, 1, "_CPPv4I0EN7complexdVER7complexRKNSt7complexI1TEE", "complex::operator/=::src"], [163, 6, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator="], [163, 6, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator="], [163, 6, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator="], [163, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::T"], [163, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::T"], [163, 10, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::T"], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK1T", "complex::operator=::re"], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERK7complexI1TE", "complex::operator=::src"], [163, 7, 1, "_CPPv4I0EN7complexaSER7complexI6ScalarERKNSt7complexI1TEE", "complex::operator=::src"], [163, 9, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator=="], [163, 6, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator=="], [163, 6, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator=="], [163, 10, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::T"], [163, 10, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::T"], [163, 10, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::T"], [163, 7, 1, "_CPPv4I0EN7complexeqER7complexRK1T", "complex::operator==::real"], [163, 7, 1, "_CPPv4I0EN7complexeqER7complexRK7complexI1TE", "complex::operator==::src"], [163, 7, 1, "_CPPv4I0EN7complexeqER7complexRKNSt7complexI1TEE", "complex::operator==::src"], [163, 6, 1, "_CPPv4N7complex4realE8RealType", "complex::real"], [163, 6, 1, "_CPPv4N7complex4realEv", "complex::real"], [163, 6, 1, "_CPPv4NK7complex4realEv", "complex::real"], [163, 7, 1, "_CPPv4N7complex4realE8RealType", "complex::real::v"], [163, 11, 1, "_CPPv4N7complex10value_typeE", "complex::value_type"], [175, 9, 1, "_CPPv4NK4dataEv", "data"], [175, 9, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent"], [175, 7, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::dim"], [175, 10, 1, "_CPPv4I0ENK6extentE6size_tRK5iType", "extent::iType"], [175, 9, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int"], [175, 7, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::dim"], [175, 10, 1, "_CPPv4I0ENK10extent_intEiRK5iType", "extent_int::iType"], [108, 6, 1, "_CPPv4NK4initER10value_type", "init"], [109, 6, 1, "_CPPv4NK4initER10value_type", "init"], [110, 6, 1, "_CPPv4NK4initER10value_type", "init"], [111, 6, 1, "_CPPv4NK4initER10value_type", "init"], [112, 6, 1, "_CPPv4NK4initER10value_type", "init"], [113, 6, 1, "_CPPv4NK4initER10value_type", "init"], [114, 6, 1, "_CPPv4NK4initER10value_type", "init"], [115, 6, 1, "_CPPv4NK4initER10value_type", "init"], [116, 6, 1, "_CPPv4NK4initER10value_type", "init"], [117, 6, 1, "_CPPv4NK4initER10value_type", "init"], [120, 6, 1, "_CPPv4NK4initER10value_type", "init"], [121, 6, 1, "_CPPv4NK4initER10value_type", "init"], [123, 6, 1, "_CPPv4NK4initER10value_type", "init"], [108, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [109, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [110, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [111, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [112, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [113, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [114, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [115, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [116, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [117, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [120, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [121, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [123, 7, 1, "_CPPv4NK4initER10value_type", "init::val"], [175, 9, 1, "_CPPv4NK12is_allocatedEv", "is_allocated"], [175, 9, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable"], [175, 7, 1, "_CPPv413is_assignableRK4ViewI2DTDp4PropE", "is_assignable::rhs"], [108, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [109, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [110, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [111, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [112, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [113, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [114, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [115, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [116, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [117, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [120, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [121, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [123, 6, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join"], [108, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [109, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [110, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [111, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [112, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [113, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [114, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [115, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [116, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [117, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [120, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [121, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [123, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::dest"], [108, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [109, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [110, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [111, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [112, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [113, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [114, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [115, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [116, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [117, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [120, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [121, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [123, 7, 1, "_CPPv4NK4joinER10value_typeRK10value_type", "join::src"], [175, 9, 1, "_CPPv4NK5labelEv", "label"], [175, 9, 1, "_CPPv4NK6layoutEv", "layout"], [175, 9, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!="], [175, 10, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewDst"], [175, 10, 1, "_CPPv4I00Eneb7ViewDst7ViewSrc", "operator!=::ViewSrc"], [175, 9, 1, "_CPPv4NKclEDpRK7IntType", "operator()"], [175, 7, 1, "_CPPv4NKclEDpRK7IntType", "operator()::indices"], [175, 9, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator=="], [175, 10, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewDst"], [175, 10, 1, "_CPPv4I00Eeqb7ViewDst7ViewSrc", "operator==::ViewSrc"], [108, 6, 1, "_CPPv4NK9referenceEv", "reference"], [109, 6, 1, "_CPPv4NK9referenceEv", "reference"], [110, 6, 1, "_CPPv4NK9referenceEv", "reference"], [111, 6, 1, "_CPPv4NK9referenceEv", "reference"], [112, 6, 1, "_CPPv4NK9referenceEv", "reference"], [113, 6, 1, "_CPPv4NK9referenceEv", "reference"], [114, 6, 1, "_CPPv4NK9referenceEv", "reference"], [115, 6, 1, "_CPPv4NK9referenceEv", "reference"], [116, 6, 1, "_CPPv4NK9referenceEv", "reference"], [117, 6, 1, "_CPPv4NK9referenceEv", "reference"], [120, 6, 1, "_CPPv4NK9referenceEv", "reference"], [121, 6, 1, "_CPPv4NK9referenceEv", "reference"], [123, 6, 1, "_CPPv4NK9referenceEv", "reference"], [175, 9, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size"], [175, 9, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N0"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N1"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N2"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N3"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N4"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N5"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N6"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N7"], [175, 7, 1, "_CPPv424required_allocation_size6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t6size_t", "required_allocation_size::N8"], [175, 7, 1, "_CPPv424required_allocation_sizeRK12array_layout", "required_allocation_size::layout"], [175, 9, 1, "_CPPv4NK4sizeEv", "size"], [175, 9, 1, "_CPPv4NK4spanEv", "span"], [175, 9, 1, "_CPPv4NK18span_is_contiguousEv", "span_is_contiguous"], [175, 9, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride"], [175, 9, 1, "_CPPv4I0ENK6strideEvP5iType", "stride"], [175, 7, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::dim"], [175, 10, 1, "_CPPv4I0ENK6strideE6size_tRK5iType", "stride::iType"], [175, 10, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::iType"], [175, 7, 1, "_CPPv4I0ENK6strideEvP5iType", "stride::strides"], [175, 9, 1, "_CPPv4NK8stride_0Ev", "stride_0"], [175, 9, 1, "_CPPv4NK8stride_1Ev", "stride_1"], [175, 9, 1, "_CPPv4NK8stride_2Ev", "stride_2"], [175, 9, 1, "_CPPv4NK8stride_3Ev", "stride_3"], [175, 9, 1, "_CPPv4NK8stride_4Ev", "stride_4"], [175, 9, 1, "_CPPv4NK8stride_5Ev", "stride_5"], [175, 9, 1, "_CPPv4NK8stride_6Ev", "stride_6"], [175, 9, 1, "_CPPv4NK8stride_7Ev", "stride_7"], [175, 9, 1, "_CPPv4NK9use_countEv", "use_count"], [108, 6, 1, "_CPPv4NK4viewEv", "view"], [109, 6, 1, "_CPPv4NK4viewEv", "view"], [110, 6, 1, "_CPPv4NK4viewEv", "view"], [111, 6, 1, "_CPPv4NK4viewEv", "view"], [112, 6, 1, "_CPPv4NK4viewEv", "view"], [113, 6, 1, "_CPPv4NK4viewEv", "view"], [114, 6, 1, "_CPPv4NK4viewEv", "view"], [115, 6, 1, "_CPPv4NK4viewEv", "view"], [116, 6, 1, "_CPPv4NK4viewEv", "view"], [117, 6, 1, "_CPPv4NK4viewEv", "view"], [120, 6, 1, "_CPPv4NK4viewEv", "view"], [121, 6, 1, "_CPPv4NK4viewEv", "view"], [123, 6, 1, "_CPPv4NK4viewEv", "view"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:member", "2": "cpp:function", "3": "cpp:functionParam", "4": "cpp:templateParam", "5": "cpp:type", "6": "cppkokkos:kokkosinlinefunction", "7": "cppkokkos:functionParam", "8": "cppkokkos:class", "9": "cppkokkos:function", "10": "cppkokkos:templateParam", "11": "cppkokkos:type"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "function", "C++ function"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "type", "C++ type"], "6": ["cppkokkos", "kokkosinlinefunction", "C++ kokkosinlinefunction"], "7": ["cppkokkos", "functionParam", "C++ function parameter"], "8": ["cppkokkos", "class", "C++ class"], "9": ["cppkokkos", "function", "C++ function"], "10": ["cppkokkos", "templateParam", "C++ template parameter"], "11": ["cppkokkos", "type", "C++ type"]}, "titleterms": {"api": [0, 72, 73, 81, 83, 84, 178, 184], "algorithm": [0, 3, 72, 225], "random": [1, 200], "number": [1, 217], "header": [1, 184, 191], "kokkos_cor": 1, "hpp": 1, "kokkos_complex": 1, "gener": [1, 32, 88, 129, 185], "synopsi": [1, 2, 75, 77, 79, 82, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 135, 140, 141, 142, 149, 150, 151, 152, 154, 156, 158, 160, 165, 167, 169, 170, 171, 172, 173, 174, 176], "exampl": [1, 2, 4, 21, 23, 24, 25, 28, 30, 35, 39, 40, 41, 53, 56, 76, 84, 121, 130, 131, 132, 133, 134, 137, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 168, 171, 172, 173, 174, 175, 179, 180, 181, 188, 189, 191, 196, 198, 216, 222, 225], "sort": [2, 10], "nest": [2, 84, 85, 151, 190], "polici": [2, 85, 90, 94, 148, 150, 152, 190, 197], "team": [2, 90, 151, 184, 190, 197], "thread": [2, 190, 192, 195], "level": [2, 85], "addit": [2, 87, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123], "inform": [2, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 185], "sampl": 2, "output": 2, "std": [3, 192], "iter": [4, 81], "kokko": [4, 81, 86, 87, 94, 129, 135, 149, 159, 160, 161, 162, 163, 164, 165, 166, 182, 184, 185, 192, 194, 195, 200, 201, 202, 204, 213, 214, 215, 218, 219, 225, 227], "experiment": [4, 164, 179, 180], "begin": 4, "cbegin": 4, "end": 4, "cend": 4, "descript": [4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 99, 100, 101, 102, 103, 104, 105, 106, 149, 153, 154, 155, 156, 157, 158, 163, 166, 167, 172, 173, 174, 176], "note": [4, 87, 132, 136, 137, 138], "paramet": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 126, 127, 128, 132, 134, 143, 144, 145, 146, 148, 150, 152, 159, 168, 175, 179, 180, 181, 223], "requir": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 87, 133, 134, 143, 144, 145, 146, 152, 159, 168, 210, 212, 221], "distanc": 4, "return": [4, 11, 12, 15, 16, 17, 18, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 126, 127, 128], "iter_swap": 4, "minimum": 5, "maximum": 5, "modifi": [6, 7], "sequenc": [6, 7, 225], "non": [7, 74, 129, 135, 192, 223], "numer": [8, 89, 139], "partit": 9, "adjacent_differ": 11, "adjacent_find": 12, "all_of": 13, "any_of": 14, "copi": [15, 129, 143, 168, 200], "copy_backward": 16, "copy_if": 17, "copy_n": 18, "count": [19, 200], "count_if": 20, "equal": 21, "exclusive_scan": 22, "fill": 23, "fill_n": 24, "find": 25, "find_end": 26, "find_first_of": 27, "find_if": 28, "find_if_not": 29, "for_each": 30, "for_each_n": 31, "generate_n": 33, "inclusive_scan": 34, "is_partit": 35, "is_sort": 36, "is_sorted_until": 37, "lexicographical_compar": 38, "max_el": 39, "min_el": 40, "minmax_el": 41, "mismatch": 42, "move": [43, 221], "move_backward": 44, "none_of": 45, "partition_copi": 46, "partition_point": 47, "reduc": [48, 107, 121, 187, 188, 189, 196], "remov": 49, "remove_copi": 50, "remove_copy_if": 51, "remove_if": 52, "replac": 53, "replace_copi": 54, "replace_copy_if": 55, "replace_if": 56, "revers": 57, "reverse_copi": 58, "rotat": 59, "rotate_copi": 60, "search": 61, "search_n": 62, "shift_left": 63, "shift_right": 64, "swap_rang": 65, "transform": 66, "transform_exclusive_scan": 67, "transform_inclusive_scan": 68, "transform_reduc": 69, "uniqu": 70, "unique_copi": 71, "alphabet": 72, "order": 72, "contain": [72, 73, 200], "core": [72, 83], "bitset": 74, "class": [74, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 140, 141, 142, 148, 150, 151, 152, 160, 165, 169, 170, 171, 175], "interfac": [74, 76, 78, 130, 131, 132, 133, 134, 143, 144, 145, 146, 148, 153, 155, 157, 159, 168, 175, 179, 180, 181], "constbitset": 74, "member": [74, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 129, 135, 140, 141, 142, 148, 150, 151, 152, 160, 165, 169, 170, 171, 175, 223], "function": [74, 76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 125, 129, 135, 138, 140, 141, 142, 147, 160, 169, 170, 171, 175, 179, 181, 183, 194, 196, 200, 223, 226], "dualview": 75, "dynrankview": 76, "public": [76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 148, 150, 151, 152, 160, 165, 169, 170, 171, 175], "enum": [76, 77, 169, 170, 171, 175], "typedef": [76, 77, 79, 84, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 140, 141, 142, 160, 169, 170, 171, 175, 179, 180], "data": [76, 77, 175, 192, 200], "type": [76, 122, 177, 188, 198, 199, 200], "scalar": [76, 122, 188], "space": [76, 88, 92, 93, 129, 135, 151, 185, 195, 196, 197, 200], "viewtyp": [76, 77], "handl": [76, 77], "other": [76, 77, 175, 184, 200], "constructor": [76, 77, 79, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 123, 129, 135, 140, 141, 142, 148, 150, 151, 152, 160, 165, 169, 170, 171, 175, 179, 180], "access": [76, 77, 92, 175, 179, 180, 200], "layout": [76, 168, 175, 197, 200], "dimens": [76, 77, 175, 199, 200], "stride": [76, 77, 175, 200], "assign": [76, 118, 119, 124, 151, 160, 169, 170, 171, 175, 181, 198], "rule": [76, 175, 200], "dynamicview": 77, "resiz": [77, 173, 200], "offsetview": 78, "construct": [78, 129, 200], "scatterview": [79, 183, 217], "free": [79, 183], "staticcrsgraph": 80, "usag": [80, 94, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 140, 141, 142, 145, 146, 148, 149, 150, 154, 156, 163, 165, 175, 219, 222, 225], "unorderedmap": 81, "insert": 81, "vector": [82, 190, 192, 198], "detect": [84, 129], "idiom": [84, 200], "an": [84, 87, 147, 159, 196, 198, 212], "express": 84, "execut": [85, 88, 90, 129, 148, 150, 152, 185, 190, 195, 196, 197, 200, 222], "top": [85, 225], "common": [85, 138, 148, 150, 152], "argument": [85, 148, 150, 152, 191], "all": [85, 129, 148, 150, 152, 162], "initi": [86, 134, 191, 200, 219], "final": [86, 133, 191], "scopeguard": [86, 132], "concept": 87, "introduct": [87, 193], "approach": 87, "overview": 87, "The": [87, 194, 198, 204, 221, 226], "executionspac": 87, "implement": [87, 219], "deviceexecutionspac": 87, "some": [87, 168], "de": 87, "facto": 87, "design": 87, "thought": 87, "memoryspac": 87, "executionpolici": [87, 147], "teammemb": 87, "functor": [87, 94, 196, 225], "A": [87, 199, 213], "deleg": 87, "macro": [88, 184], "version": [88, 210], "set": [88, 152], "backend": [88, 205, 215], "option": [88, 150, 205], "c": [88, 125, 184, 192, 199, 204, 224], "standard": [88, 200, 204], "third": [88, 205], "parti": [88, 205], "librari": [88, 192, 198, 204, 205], "architectur": [88, 205], "parallel": [90, 94, 190, 196, 219], "dispatch": [90, 196], "pattern": [90, 94, 197, 222, 225], "tag": [90, 196, 224], "calcul": 90, "stl": 91, "compat": [91, 184], "issu": [91, 201, 206, 211, 212], "task": [94, 225], "Will": 94, "work": [94, 194, 204, 222, 225, 226], "my": [94, 194, 226], "problem": [94, 194, 200, 219, 226], "basic": [94, 190, 198], "predecessor": 94, "schedul": 94, "wait": 94, "aggreg": 94, "prioriti": 94, "trait": [95, 139, 183, 197, 200], "is_array_layout": 95, "is_execution_polici": 95, "is_memory_spac": 95, "is_memory_trait": 95, "is_reduc": 95, "is_spac": 95, "util": 96, "view": [97, 168, 175, 177, 192, 199, 200], "relat": [97, 204], "atom": [98, 183, 200], "atomic_compare_exchang": 99, "atomic_compare_exchange_strong": 100, "atomic_exchang": 101, "atomic_fetch_": 102, "op": [102, 104, 105], "atomic_load": 103, "atomic_": [104, 105], "_fetch": 105, "atomic_stor": 106, "built": [107, 121, 187, 188], "band": 108, "bor": 109, "land": 110, "lor": 111, "max": [112, 179], "maxloc": 113, "min": [114, 179], "minloc": 115, "minmax": 116, "minmaxloc": 117, "minmaxlocscalar": 118, "variabl": [118, 119, 124], "oper": [118, 119, 124, 151, 169, 170, 171, 179, 180, 183, 198, 218, 219, 222, 224], "minmaxscalar": 119, "prod": 120, "reducerconcept": 121, "In": [121, 187, 188], "reduct": [122, 180, 186, 196, 198], "sum": [123, 217], "vallocscalar": 124, "style": 125, "memori": [125, 135, 183, 190, 192, 195, 197, 200], "manag": [125, 192, 200, 215], "kokkos_fre": 126, "templat": [126, 127, 128, 179, 180, 181, 223, 224], "valu": [126, 127, 128, 179, 180, 217], "except": [126, 127, 128], "kokkos_malloc": 127, "kokkos_realloc": 128, "cuda": [129, 185, 192, 201, 220], "hip": [129, 206], "hpx": 129, "openmp": [129, 192], "openmptarget": 129, "serial": [129, 219, 222], "executionspaceconcept": 129, "alias": [129, 151], "base": 129, "configur": [129, 185, 201], "defaultexecutionspac": 129, "defaulthostexecutionspac": 129, "veri": 129, "simplest": 129, "us": [129, 143, 159, 185, 196, 200, 201, 216, 218, 219, 221, 225], "Not": 129, "Being": 129, "more": 129, "default": [129, 200], "facil": [129, 135], "initargu": 130, "see": [130, 131, 132, 134, 137, 138], "also": [130, 131, 132, 134, 137, 138], "initializationset": 131, "semant": [133, 134, 143, 144, 145, 146, 159, 168], "cudaspac": 135, "cudahostpinnedspac": 135, "cudauvmspac": 135, "hipspac": 135, "hiphostpinnedspac": 135, "hipmanagedspac": 135, "hostspac": 135, "sharedspac": [135, 221], "sharedhostpinnedspac": 135, "memoryspaceconcept": 135, "bit": 136, "manipul": 136, "mathemat": 137, "constant": 137, "math": 138, "parallelfortag": 140, "parallelreducetag": 141, "parallelscantag": 142, "fenc": 143, "time": 143, "kernel": [143, 159, 190, 222], "asynchron": 143, "deep": [143, 200], "parallel_for": 144, "parallel_reduc": 145, "parallel_scan": 146, "what": [147, 200, 226], "mdrangepolici": [148, 219], "specif": 148, "nestedpolici": 149, "list": [149, 185], "perteam": 149, "perthread": 149, "teamthreadrang": [149, 154], "teamthreadmdrang": [149, 153], "teamvectorrang": [149, 156], "teamvectormdrang": [149, 155], "threadvectorrang": [149, 158], "threadvectormdrang": [149, 157], "rangepolici": [150, 219], "initarg": 150, "teamhandleconcept": 151, "index": [151, 200], "queri": [151, 152], "scratch": [151, 190], "control": 151, "collect": 151, "teampolici": 152, "runtim": 152, "limit": 152, "partition_spac": 159, "split": 159, "exist": 159, "instanc": [159, 190, 195], "concurr": 159, "pair": 160, "convers": [160, 200], "abort": 161, "complex": 163, "timer": 165, "subview": [166, 174, 199], "create_mirror": 167, "_view": 167, "deep_copi": 168, "thing": 168, "you": [168, 200], "can": [168, 200], "cannot": 168, "do": [168, 200, 226], "how": [168, 194, 199, 200, 226], "get": [168, 200], "incompat": 168, "layoutleft": 169, "layoutright": 170, "layoutstrid": 171, "realloc": 172, "nonmemb": 175, "view_alloc": 176, "like": 177, "simd": [178, 179, 198], "width": [179, 180], "load": [179, 181], "store": [179, 181], "method": [179, 180, 181], "arithmet": 179, "comparison": [179, 180], "cmath": 179, "global": [179, 180], "simd_mask": 180, "boolean": 180, "where": 181, "gather": 181, "scatter": 181, "deprec": [182, 184], "3": [182, 183, 185, 189, 190, 191, 192, 195, 196, 197, 199, 200, 225], "7": [182, 196, 200], "01": 182, "4": [182, 183, 185, 190, 191, 192, 196, 197, 200], "0": [182, 191], "10": 183, "1": [183, 185, 187, 190, 191, 192, 193, 195, 196, 197, 199, 200, 222], "write": 183, "conflict": 183, "Their": 183, "resolut": 183, "With": 183, "2": [183, 185, 188, 190, 191, 192, 195, 196, 197, 199, 200, 222], "12": [184, 192], "backward": 184, "futur": 184, "user": 184, "defin": 184, "abi": 184, "right": 184, "reserv": 184, "miscellan": 184, "proof": 184, "compil": [185, 210, 213, 215], "cmake": [185, 201, 205], "build": [185, 201, 210], "system": [185, 210], "instal": [185, 201], "packag": [185, 201], "tree": 185, "generate_makefil": 185, "bash": 185, "spack": [185, 201], "develop": [185, 201], "keyword": [185, 205], "trilino": 185, "branch": 185, "gnu": 185, "makefil": [185, 201], "5": [185, 191, 196, 197, 200], "6": [185, 197, 200], "restrict": [185, 190], "9": [186, 187, 188, 189], "custom": [186, 188, 189], "8": 190, "hierarch": 190, "motiv": [190, 195], "creat": [190, 200], "pad": 190, "loop": [190, 196], "barrier": 190, "singl": [190, 220], "executor": 190, "includ": 191, "command": 191, "line": 191, "struct": 191, "code": [191, 192, 194, 198, 221, 222, 226], "13": 192, "interoper": 192, "legaci": 192, "structur": [192, 218, 223], "raw": [192, 200, 201], "alloc": [192, 218], "through": [192, 225], "extern": 192, "fundament": 192, "own": 192, "call": 192, "14": 194, "virtual": [194, 226], "v": [194, 226], "tabl": [194, 226], "pointer": [194, 200, 226], "eri": [194, 226], "annoi": [194, 226], "gpu": [194, 226], "Then": [194, 226], "why": [194, 200, 226], "doesn": [194, 226], "t": [194, 200, 226], "fix": [194, 226], "thi": [194, 200, 226], "complic": [194, 226], "question": [194, 204, 226], "follow": [194, 226], "up": [194, 226], "machin": 195, "model": [195, 197, 204], "abstract": 195, "program": [195, 197, 204, 209, 218], "safeti": 195, "specifi": [196, 200], "bodi": 196, "lambda": 196, "should": 196, "i": [196, 200, 226], "join": 196, "init": 196, "arrai": [196, 200, 218, 219, 223], "result": 196, "scan": 196, "name": [196, 201], "rang": 197, "15": 198, "background": 198, "idea": 198, "deal": [198, 224], "remaind": 198, "condit": [198, 225], "ternari": 198, "perform": [198, 204, 215, 222], "11": 199, "slice": 199, "take": 199, "deduct": 199, "degener": 199, "obtain": 199, "multidimension": [200, 218], "need": [200, 226], "mai": 200, "make": 200, "probabl": 200, "don": 200, "want": 200, "s": 200, "realli": [200, 226], "const": 200, "entri": 200, "refer": [200, 219], "lifetim": 200, "depend": 200, "explicitli": 200, "placement": 200, "hostmirror": 200, "unmanag": 200, "special": 200, "philosophi": 201, "known": [201, 206], "knownissu": 201, "crai": 201, "fortran": [201, 218], "inlin": 201, "vs": 201, "uvm": 201, "cite": 202, "contribut": 203, "portabl": [204, 226], "websit": 204, "content": 204, "devic": [205, 222, 226], "enabl": 205, "tpl": 205, "licens": 207, "guid": 209, "test": [211, 214, 215], "track": 211, "feedback": 212, "report": 212, "attach": 213, "identif": 213, "support": 213, "b": 213, "file": 213, "promot": 213, "txt": 213, "process": 214, "chang": 214, "pull": 214, "request": 214, "nightli": 214, "integr": 214, "releas": 214, "workflow": 215, "compon": 215, "softwar": 215, "git": 215, "repositori": 215, "platform": 215, "batch": 215, "queue": 215, "comput": [215, 217, 222], "account": 215, "script": 215, "unit": 215, "case": [216, 218, 219, 225, 226], "averag": 217, "element": 217, "node": 217, "adjac": 217, "full": 217, "interop": 218, "multi": 219, "dimension": 219, "formul": 219, "mpi": 220, "halo": 220, "exchang": 220, "send": 220, "messag": 220, "awar": 220, "separ": 220, "out": 220, "identifi": 220, "subset": 220, "indic": 220, "extract": 220, "from": 221, "kokkos_enable_cuda_uvm": 221, "altern": 221, "transit": 221, "overlap": 222, "host": 222, "actor": [222, 225], "subject": [222, 225], "assumpt": [222, 225], "constraint": [222, 225], "precondit": [222, 225], "while": 222, "cabana": 223, "soa": 223, "aosoa": 223, "pre": 224, "17": 224, "post": 225, "recurs": 225, "fibonacci": 225, "flow": 225, "n": 225, "divid": 225, "graph": 225, "down": 225, "bf": 225, "But": 226, "side": 226, "doe": 226, "nvcc": 226, "solv": 226, "window": 227, "h": 227, "video": 228, "lectur": 228, "slide": 228}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "cppkokkos": 6, "sphinx": 56}})